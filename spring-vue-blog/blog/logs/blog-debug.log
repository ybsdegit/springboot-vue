2020-03-28 00:06:00.677 DEBUG [restartedMain]com.ybs.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-03-28 00:11:21.042 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 00:11:21.057 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 00:11:21.073 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 00:11:21.123 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:11:21.125 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 176(Long), {"code":20000,"data":{"token":"03A8F5DDB36F7389757C77DEEE377E4C"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:11:21.129 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:11:21.170 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:11:21.170 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:11:21.173 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:11:21.579 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:11:21.581 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:11:21.584 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:11:21.588 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:11:21.589 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:11:21.592 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:11:21.617 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:11:21.618 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:11:21.624 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:11:21.625 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:11:21.625 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:11:21.629 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:11:21.636 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:11:21.637 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 48(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:11:21.640 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:15:35.588 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:15:35.589 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:15:35.594 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:15:35.654 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:15:35.656 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:15:35.680 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:15:35.779 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:15:35.780 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:15:35.791 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:15:35.796 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:15:35.798 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:15:35.805 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:15:36.074 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:15:36.074 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:15:36.078 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:15:36.079 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:15:36.080 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:15:36.084 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:15:41.439 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:15:41.439 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:15:41.446 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:15:41.447 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:15:41.447 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:15:41.449 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:15:41.452 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:15:41.453 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:15:41.456 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:20:05.318 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:20:05.318 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:20:05.322 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:20:05.435 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:20:05.436 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:20:05.443 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:20:05.444 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:20:05.444 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:20:05.446 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:20:05.453 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:20:05.454 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 20(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:20:05.463 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:20:05.737 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:20:05.738 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:20:05.741 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:20:05.743 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:20:05.745 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:20:05.749 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:20:14.347 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:20:14.347 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1dfa4133](String), 1(Integer), null, POST(String), 126(Long), {"code":20000,"data":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-J72AQ76OABler-iF8xQ671.jpg","msg":"上传成功"}(String), 127.0.0.1(String)
2020-03-28 00:20:14.349 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:25:42.386 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:25:42.386 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:25:42.389 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:25:42.400 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:25:42.400 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:25:42.402 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:25:42.497 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:25:42.498 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:25:42.503 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:25:42.505 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:25:42.507 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:25:42.511 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:25:42.794 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:25:42.795 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:25:42.796 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:25:42.797 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:25:42.798 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:25:42.802 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:25:42.804 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:25:42.805 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:25:42.809 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:25:42.810 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:25:42.810 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:25:42.811 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:25:42.817 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:25:42.818 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:25:42.821 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:25:53.916 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:25:53.916 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:25:53.918 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:25:54.037 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:25:54.038 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:25:54.042 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:25:54.045 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:25:54.045 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:25:54.046 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:25:54.046 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:25:54.049 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:25:54.051 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:25:54.052 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:25:54.053 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:25:54.055 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:25:54.058 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:25:54.059 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:25:54.066 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:25:59.352 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:25:59.352 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:25:59.354 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:25:59.355 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:25:59.355 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:25:59.356 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:25:59.361 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:25:59.362 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:25:59.366 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:26:05.845 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:26:05.845 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4fece955](String), 1(Integer), null, POST(String), 238(Long), {"code":20000,"data":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","msg":"上传成功"}(String), 127.0.0.1(String)
2020-03-28 00:26:05.847 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:27:27.632 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.save.debug:143 -==>  Preparing: insert into bl_blog( blog_id, blog_title, blog_image, blog_content, blog_type, blog_remark,blog_source ) values ( ?,?, ?, ?, ?, ?, ? ) 
2020-03-28 00:27:27.633 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.save.debug:143 -==> Parameters: 1243575371052441600(String), fastDFS 上传图片(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png(String), <p>fastDFS 上传上图</p>(String), 17(Integer), 上传图片(String), fastdfs(String)
2020-03-28 00:27:27.635 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:27:27.636 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:27:27.636 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/save(String), [Blog(blogId=, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=<p>fastDFS 上传上图</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=17, blogRemark=上传图片, blogComment=null, blogSource=fastdfs, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-03-28 00:27:27.639 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:27:27.882 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:27:27.882 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:27:27.884 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:27:27.885 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:27:27.885 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:27:27.886 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:27:27.888 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:27:27.888 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559311200825344, blogTitle=测试4, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:38, updateTime=2020-03-27 15:23:38), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559676033970176, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:05, updateTime=2020-03-27 15:25:05)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:27:27.892 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:27:32.368 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:27:32.369 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 10(Integer), 10(Integer)
2020-03-28 00:27:32.371 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 00:27:32.372 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:27:32.372 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:27:32.374 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:27:32.378 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:27:32.379 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=10, totalPage=2, totalCount=13, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559311200825344, blogTitle=测试4, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:38, updateTime=2020-03-27 15:23:38), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559676033970176, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:05, updateTime=2020-03-27 15:25:05)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560241350651904","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:20","typeName":"测试","updateTime":"2020-03-27 15:27:20"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560254680150016","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:23","typeName":"测试","updateTime":"2020-03-27 15:27:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:27:32.381 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:37:10.714 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:37:10.715 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:37:10.718 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:37:10.719 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:37:10.719 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:37:10.720 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:37:10.723 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:37:10.724 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:37:10.729 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:37:11.803 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:37:11.804 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:37:11.817 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:37:11.931 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:37:11.932 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:37:11.933 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:37:11.935 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:37:11.935 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:37:11.937 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:37:11.937 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:37:11.941 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:37:11.941 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:37:11.942 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:37:11.955 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:37:11.958 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:37:11.962 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:37:11.963 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 30(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:37:11.967 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:37:15.214 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:37:15.214 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 10(Integer), 10(Integer)
2020-03-28 00:37:15.216 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 00:37:15.217 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:37:15.217 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:37:15.219 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:37:15.225 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:37:15.226 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=10, totalPage=2, totalCount=13, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559311200825344, blogTitle=测试4, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:38, updateTime=2020-03-27 15:23:38), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559676033970176, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:05, updateTime=2020-03-27 15:25:05)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560241350651904","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:20","typeName":"测试","updateTime":"2020-03-27 15:27:20"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560254680150016","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:23","typeName":"测试","updateTime":"2020-03-27 15:27:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:37:15.229 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:37:40.920 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:37:40.921 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:37:40.925 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:37:41.048 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:37:41.048 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:37:41.050 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:37:41.050 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:37:41.050 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:37:41.051 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:37:41.051 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:37:41.053 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:37:41.054 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:37:41.054 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:37:41.054 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:37:41.056 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:37:41.060 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:37:41.061 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:37:41.063 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:40:11.756 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:40:11.757 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:40:11.759 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:40:11.889 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:40:11.889 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:40:11.893 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:40:11.894 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:40:11.894 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:40:11.895 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:40:11.897 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:40:11.898 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:40:11.900 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:40:12.188 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:40:12.189 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:40:12.191 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:40:12.192 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:40:12.192 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:40:12.195 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:40:15.513 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:40:15.513 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:40:15.515 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:40:15.631 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:40:15.631 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:40:15.633 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:40:15.634 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:40:15.635 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:40:15.637 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:40:15.637 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:40:15.638 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:40:15.640 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:40:15.642 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:40:15.642 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:40:15.645 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:40:15.649 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:40:15.649 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:40:15.668 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:40:44.558 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:40:44.558 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:40:44.565 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:40:44.679 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:40:44.679 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:40:44.680 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:40:44.681 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:40:44.682 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:40:44.683 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:40:44.982 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:40:44.982 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:40:44.984 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:40:44.985 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:40:44.986 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:40:44.987 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:40:44.990 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:40:44.991 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:40:44.997 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:41:02.798 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:41:02.798 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:41:02.800 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:41:02.927 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:41:02.927 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:41:02.929 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:41:02.930 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:41:02.930 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:41:02.932 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:41:03.233 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:41:03.233 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:41:03.236 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:41:03.236 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:41:03.237 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:41:03.240 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:41:03.245 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:41:03.246 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:41:03.249 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:41:10.535 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:41:10.535 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 10(Integer), 10(Integer)
2020-03-28 00:41:10.537 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 00:41:10.538 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:41:10.538 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:41:10.540 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:41:10.543 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:41:10.544 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=10, totalPage=2, totalCount=13, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559311200825344, blogTitle=测试4, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:38, updateTime=2020-03-27 15:23:38), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559676033970176, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:05, updateTime=2020-03-27 15:25:05)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560241350651904","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:20","typeName":"测试","updateTime":"2020-03-27 15:27:20"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560254680150016","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:23","typeName":"测试","updateTime":"2020-03-27 15:27:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:41:10.549 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:42:20.784 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:42:20.785 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:42:20.787 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:42:20.787 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:42:20.788 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:42:20.790 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:42:20.794 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:42:20.794 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:42:20.798 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:42:30.945 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:42:30.945 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:42:30.947 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:42:30.948 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:42:30.948 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:42:30.950 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:42:30.952 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:42:30.952 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:42:30.955 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:43:01.181 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:43:01.182 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:43:01.183 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:43:01.184 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:43:01.184 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:43:01.185 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:43:01.188 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:43:01.188 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:43:01.193 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:43:06.333 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:43:06.333 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 10(Integer), 10(Integer)
2020-03-28 00:43:06.335 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 00:43:06.335 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:43:06.336 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:43:06.337 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:43:06.341 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:43:06.342 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=10, totalPage=2, totalCount=13, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559311200825344, blogTitle=测试4, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:38, updateTime=2020-03-27 15:23:38), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559676033970176, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:05, updateTime=2020-03-27 15:25:05)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560241350651904","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:20","typeName":"测试","updateTime":"2020-03-27 15:27:20"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560254680150016","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:23","typeName":"测试","updateTime":"2020-03-27 15:27:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:43:06.346 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:43:10.834 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-03-28 00:43:10.834 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==> Parameters: undefined(String)
2020-03-28 00:43:10.836 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -<==    Updates: 0
2020-03-28 00:43:10.837 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:43:10.837 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/delete/undefined(String), [undefined](String), 1(Integer), null, DELETE(String), 3(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-03-28 00:43:10.842 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:43:18.195 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-03-28 00:43:18.196 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==> Parameters: undefined(String)
2020-03-28 00:43:18.197 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -<==    Updates: 0
2020-03-28 00:43:18.198 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:43:18.198 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/delete/undefined(String), [undefined](String), 1(Integer), null, DELETE(String), 3(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-03-28 00:43:18.200 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:43:23.463 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-03-28 00:43:23.463 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==> Parameters: undefined(String)
2020-03-28 00:43:23.465 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -<==    Updates: 0
2020-03-28 00:43:23.465 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:43:23.466 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/delete/undefined(String), [undefined](String), 1(Integer), null, DELETE(String), 3(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-03-28 00:43:23.468 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:43:26.529 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:43:26.529 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:43:26.531 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:43:26.653 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:43:26.653 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:43:26.654 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:43:26.656 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:43:26.657 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:43:26.660 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:43:26.661 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:43:26.661 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:43:26.663 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:43:26.664 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:43:26.664 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:43:26.666 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:43:26.670 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:43:26.670 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:43:26.676 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:43:29.799 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:43:29.800 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 10(Integer), 10(Integer)
2020-03-28 00:43:29.801 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 00:43:29.802 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:43:29.802 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:43:29.803 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:43:29.806 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:43:29.807 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=10, totalPage=2, totalCount=13, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559311200825344, blogTitle=测试4, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:38, updateTime=2020-03-27 15:23:38), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559676033970176, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:05, updateTime=2020-03-27 15:25:05)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560241350651904","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:20","typeName":"测试","updateTime":"2020-03-27 15:27:20"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560254680150016","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:23","typeName":"测试","updateTime":"2020-03-27 15:27:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:43:29.810 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:43:34.168 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-03-28 00:43:34.169 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==> Parameters: undefined(String)
2020-03-28 00:43:34.170 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -<==    Updates: 0
2020-03-28 00:43:34.171 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:43:34.171 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/delete/undefined(String), [undefined](String), 1(Integer), null, DELETE(String), 3(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-03-28 00:43:34.176 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:04.884 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-03-28 00:44:04.885 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==> Parameters: 1243560254680150016(String)
2020-03-28 00:44:04.887 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -<==    Updates: 1
2020-03-28 00:44:04.888 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:04.889 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/delete/1243560254680150016(String), [1243560254680150016](String), 1(Integer), null, DELETE(String), 5(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:04.892 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:14.150 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:14.152 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:14.167 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:14.291 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 00:44:14.291 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 00:44:14.292 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:44:14.293 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 00:44:14.293 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:44:14.294 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:14.294 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:14.295 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:44:14.296 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:44:14.296 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:44:14.297 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:14.299 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:44:14.301 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:14.302 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:14.316 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:36.713 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:44:36.714 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:44:36.716 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:44:36.716 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:44:36.717 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:44:36.718 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:44:36.721 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:36.722 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:36.727 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:41.686 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:44:41.687 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 10(Integer), 10(Integer)
2020-03-28 00:44:41.690 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 00:44:41.690 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:44:41.691 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:44:41.692 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:44:41.695 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:41.695 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=10, totalPage=2, totalCount=12, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559311200825344, blogTitle=测试4, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:38, updateTime=2020-03-27 15:23:38), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559676033970176, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:05, updateTime=2020-03-27 15:25:05)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243560241350651904","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:27:20","typeName":"测试","updateTime":"2020-03-27 15:27:20"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:41.698 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:44.640 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-03-28 00:44:44.640 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==> Parameters: 1243560241350651904(String)
2020-03-28 00:44:44.643 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -<==    Updates: 1
2020-03-28 00:44:44.644 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:44.644 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/delete/1243560241350651904(String), [1243560241350651904](String), 1(Integer), null, DELETE(String), 6(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:44.647 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:44.664 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:44:44.664 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 10(Integer), 10(Integer)
2020-03-28 00:44:44.665 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 1
2020-03-28 00:44:44.665 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:44:44.665 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:44:44.666 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:44:44.668 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:44.668 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=10, totalPage=2, totalCount=12, list=[BlogVo(blogId=1243560241350651904, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:27:20, updateTime=2020-03-27 15:27:20), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:44.670 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:48.048 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:44:48.048 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:44:48.050 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:44:48.051 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:44:48.051 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:44:48.052 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:44:48.053 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:48.053 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559676033970176","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:05","typeName":"测试","updateTime":"2020-03-27 15:25:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:48.055 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:53.469 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-03-28 00:44:53.469 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==> Parameters: 1243559676033970176(String)
2020-03-28 00:44:53.474 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -<==    Updates: 1
2020-03-28 00:44:53.475 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:53.475 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/delete/1243559676033970176(String), [1243559676033970176](String), 1(Integer), null, DELETE(String), 6(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:53.478 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:53.494 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:44:53.495 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:44:53.497 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 00:44:53.497 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:44:53.497 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:44:53.498 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:44:53.500 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:53.501 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559311200825344, blogTitle=测试4, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:38, updateTime=2020-03-27 15:23:38), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559676033970176, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:05, updateTime=2020-03-27 15:25:05)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559311200825344","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试4","createdTime":"2020-03-27 15:23:38","typeName":"测试","updateTime":"2020-03-27 15:23:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:53.504 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:58.891 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==>  Preparing: update bl_blog set deleted = 1 where blog_id = ? 
2020-03-28 00:44:58.892 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -==> Parameters: 1243559311200825344(String)
2020-03-28 00:44:58.894 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.deleteById.debug:143 -<==    Updates: 1
2020-03-28 00:44:58.894 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:58.895 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/delete/1243559311200825344(String), [1243559311200825344](String), 1(Integer), null, DELETE(String), 4(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:58.896 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:44:59.144 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:44:59.145 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:44:59.146 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 00:44:59.146 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:44:59.147 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:44:59.148 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:44:59.149 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:44:59.150 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559311200825344, blogTitle=测试4, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:38, updateTime=2020-03-27 15:23:38), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:44:59.152 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:58:26.795 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:58:26.796 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:58:26.798 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 00:58:26.799 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:58:26.799 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:58:26.800 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:58:26.802 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:58:26.802 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:58:26.806 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 00:59:57.316 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 00:59:57.316 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 00:59:57.318 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 00:59:57.318 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 00:59:57.319 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 00:59:57.320 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 00:59:57.324 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 00:59:57.325 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 00:59:57.328 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:00:14.582 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:00:14.582 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:00:14.584 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 01:00:14.584 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:00:14.585 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:00:14.586 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:00:14.588 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:00:14.589 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:00:14.592 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:01:13.348 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:01:13.349 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:01:13.350 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 01:01:13.351 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:01:13.351 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:01:13.352 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:01:13.356 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:01:13.356 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:01:13.359 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:02:13.660 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:02:13.661 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:02:13.663 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 01:02:13.664 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:02:13.664 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:02:13.665 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:02:13.667 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:02:13.668 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:02:13.672 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:02:33.103 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:02:33.104 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:02:33.106 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 01:02:33.107 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:02:33.107 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:02:33.108 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:02:33.114 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:02:33.114 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:02:33.118 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:05:47.873 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:05:47.873 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:05:47.876 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:05:47.994 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:05:47.994 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:05:47.996 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:05:47.997 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:05:47.997 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:05:48.000 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:05:48.001 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:05:48.004 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 01:05:48.006 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:05:48.006 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:05:48.006 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:05:48.009 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:05:48.012 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:05:48.012 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:05:48.015 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:05:49.682 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:05:49.683 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243559290439020544(String)
2020-03-28 01:05:49.687 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:05:49.693 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:05:49.693 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243559290439020544(String), [1243559290439020544](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>测试内容</p>","blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","blogType":17,"createdTime":"2020-03-27 15:23:33","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:05:49.696 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:06:46.193 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:06:46.194 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:06:46.195 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 01:06:46.196 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:06:46.196 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:06:46.197 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:06:46.198 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:06:46.199 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:06:46.201 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:06:52.280 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:06:52.281 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243559262504955904(String)
2020-03-28 01:06:52.282 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:06:52.283 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:06:52.283 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243559262504955904(String), [1243559262504955904](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>测试内容</p>","blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","blogType":17,"createdTime":"2020-03-27 15:23:26","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:06:52.287 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:07:16.848 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:07:16.848 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:07:16.850 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:07:16.909 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:07:16.909 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:07:16.911 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:07:16.912 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:07:16.913 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:07:16.915 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:07:20.796 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:07:20.796 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:07:20.798 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 01:07:20.798 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:07:20.799 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:07:20.800 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:07:20.803 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:07:20.803 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:07:20.806 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:07:22.529 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:07:22.529 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:07:22.530 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:07:22.532 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:07:22.532 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:07:22.535 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:10:26.617 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:10:26.617 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:10:26.621 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 01:10:26.622 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:10:26.622 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:10:26.623 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:10:26.626 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:10:26.627 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:10:26.629 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:10:30.167 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:10:30.167 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:10:30.171 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:10:30.172 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:10:30.173 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:10:30.176 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:10:36.169 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:10:36.170 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:10:36.172 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:10:36.173 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:10:36.174 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:10:36.176 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:11:51.670 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:11:51.670 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:11:51.672 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 01:11:51.673 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:11:51.673 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:11:51.674 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:11:51.676 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:11:51.677 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:11:51.679 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:13:31.431 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:13:31.431 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:13:31.439 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 9
2020-03-28 01:13:31.440 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:13:31.440 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:13:31.441 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:13:31.444 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:13:31.444 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 20(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:13:31.446 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:13:35.463 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:13:35.463 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:13:35.465 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:13:35.466 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:13:35.466 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:13:35.471 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:15:36.209 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.save.debug:143 -==>  Preparing: insert into bl_blog( blog_id, blog_title, blog_image, blog_content, blog_type, blog_remark,blog_source ) values ( ?,?, ?, ?, ?, ?, ? ) 
2020-03-28 01:15:36.210 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.save.debug:143 -==> Parameters: 1243587486622507008(String), 测试是否还能带出信息(String), null, <p>测试是否还能带出信息</p>(String), 17(Integer), 测试是否还能带出信息(String), 测试是否还能带出信息(String)
2020-03-28 01:15:36.212 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:15:36.212 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:15:36.213 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/save(String), [Blog(blogId=, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=<p>测试是否还能带出信息</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=17, blogRemark=测试是否还能带出信息, blogComment=null, blogSource=测试是否还能带出信息, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-03-28 01:15:36.214 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:15:36.458 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:15:36.458 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:15:36.460 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:15:36.460 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:15:36.460 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:15:36.461 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:15:36.463 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:15:36.463 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=9, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:15:35"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:15:36.465 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:15:53.287 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:15:53.288 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243587486622507008(String)
2020-03-28 01:15:53.289 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:15:53.290 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:15:53.290 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243587486622507008(String), [1243587486622507008](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>测试是否还能带出信息</p>","blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","blogType":17,"createdTime":"2020-03-27 17:15:35","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:15:53.292 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:16:23.419 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ?; 
2020-03-28 01:16:23.420 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==> Parameters: 测试是否还能带出信息(String), <p>测试是否还能带出信息，添加带不出，修改可以正常正常带出，可以了</p>(String), 0(Integer), 0(Integer), 0(Integer), 17(Integer), 测试是否还能带出信息(String), 0(Integer), 测试是否还能带出信息(String), 1243587486622507008(String), 1(Integer)
2020-03-28 01:16:23.422 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.update.debug:143 -<==    Updates: 1
2020-03-28 01:16:23.423 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:16:23.423 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/update(String), [Blog(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=<p>测试是否还能带出信息，添加带不出，修改可以正常正常带出，可以了</p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=17, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 6(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 01:16:23.426 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:16:23.667 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:16:23.667 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:16:23.668 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:16:23.669 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:16:23.670 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:16:23.672 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:16:23.674 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:16:23.674 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:15:35)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:16:22"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:16:23.675 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:16:36.422 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:16:36.423 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243587486622507008(String)
2020-03-28 01:16:36.424 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:16:36.424 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:16:36.425 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243587486622507008(String), [1243587486622507008](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>测试是否还能带出信息，添加带不出，修改可以正常正常带出，可以了</p>","blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","blogType":17,"createdTime":"2020-03-27 17:15:35","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:16:36.426 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:16:44.046 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:16:44.047 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:16:44.049 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:16:44.164 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:16:44.164 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:16:44.166 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:16:44.166 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:16:44.167 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:16:44.170 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:16:44.466 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:16:44.466 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:16:44.467 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:16:44.468 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:16:44.470 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:16:44.471 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:16:44.473 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:16:44.473 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:16:22"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:16:44.476 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:16:52.809 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:16:52.810 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243587486622507008(String)
2020-03-28 01:16:52.811 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:16:52.812 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:16:52.812 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243587486622507008(String), [1243587486622507008](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>测试是否还能带出信息，添加带不出，修改可以正常正常带出，可以了</p>","blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","blogType":17,"createdTime":"2020-03-27 17:15:35","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:16:52.814 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:17:56.876 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:17:56.876 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243587486622507008(String)
2020-03-28 01:17:56.878 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:17:56.878 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:17:56.879 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243587486622507008(String), [1243587486622507008](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>测试是否还能带出信息，添加带不出，修改可以正常正常带出，可以了</p>","blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","blogType":17,"createdTime":"2020-03-27 17:15:35","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:17:56.881 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:18:02.826 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ?; 
2020-03-28 01:18:02.827 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==> Parameters: 测试是否还能带出信息(String), <p>测试是否还能带出信息，添加带不出，修改可以正常正常带出，可以了</p>(String), 0(Integer), 0(Integer), 0(Integer), 17(Integer), 测试是否还能带出信息(String), 0(Integer), 测试是否还能带出信息(String), 1243587486622507008(String), 2(Integer)
2020-03-28 01:18:02.829 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.update.debug:143 -<==    Updates: 1
2020-03-28 01:18:02.830 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:18:02.830 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/update(String), [Blog(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=<p>测试是否还能带出信息，添加带不出，修改可以正常正常带出，可以了</p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=17, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=null, version=2, deleted=null)](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 01:18:02.832 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:18:03.158 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:18:03.159 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:18:03.160 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:18:03.160 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:18:03.161 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:18:03.162 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:18:03.163 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:18:03.164 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:16:22)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:18:03.166 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:18:17.515 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:18:17.516 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:18:17.517 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:18:17.518 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:18:17.519 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:18:17.520 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:18:17.523 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:18:17.524 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:18:17.526 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:20:31.339 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:20:31.339 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:20:31.351 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:20:31.479 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:20:31.480 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:20:31.481 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:20:31.482 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:20:31.482 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:20:31.484 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:20:31.485 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:20:31.488 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:20:31.489 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:20:31.490 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:20:31.491 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:20:31.492 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:20:31.495 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:20:31.496 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 15:12:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:20:31.499 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:20:35.464 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:20:35.464 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:20:35.466 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:20:35.467 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:20:35.468 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:20:35.472 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:20:43.080 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ?; 
2020-03-28 01:20:43.081 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==> Parameters: SpringCloud 基础 Eureka、Ribbon(String), <p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>
<p>- 服务熔断，服务降级</p>
<p><br />## eureka 与 zookeeper 区别</p>
<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>
<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>
<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>
<p>private static final String REST_URL_PREFIX = "http://localhost:8001";</p>
<p>@PostMapping("/consumer/dept/add")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + "/dept/add", dept, Boolean.class);<br />}</p>
<p>@GetMapping("/consumer/dept/get/{id}")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/get/"+id, Dept.class);<br />}</p>
<p>@GetMapping("/consumer/dept/list")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/list", List.class);<br />}</p>
<p><br />}</p>
<p>```</p>
<p><br />- eureka</p>
<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>
<p>- 启动类添加注解<br />@EnableEurekaServer</p>
<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>
<p>&nbsp;</p>
<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>
<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>
<p>```</p>
<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>
<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>
<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>
<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>
<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>
<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>
<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>
<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>
<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>
<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>
<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>
<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>
<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>
<p>&nbsp;</p>
<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>
<p>if (server.isAlive()) {<br />return (server);<br />}</p>
<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>
<p>}</p>
<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>
<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>
<p>```</p>(String), 0(Integer), 0(Integer), 0(Integer), 6(Integer), 存储(String), 0(Integer), CSDB(String), 1243556486165114880(String), 1(Integer)
2020-03-28 01:20:43.084 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.update.debug:143 -<==    Updates: 1
2020-03-28 01:20:43.085 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:20:43.086 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/update(String), [Blog(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>
<p>- 服务熔断，服务降级</p>
<p><br />## eureka 与 zookeeper 区别</p>
<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>
<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>
<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>
<p>private static final String REST_URL_PREFIX = "http://localhost:8001";</p>
<p>@PostMapping("/consumer/dept/add")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + "/dept/add", dept, Boolean.class);<br />}</p>
<p>@GetMapping("/consumer/dept/get/{id}")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/get/"+id, Dept.class);<br />}</p>
<p>@GetMapping("/consumer/dept/list")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/list", List.class);<br />}</p>
<p><br />}</p>
<p>```</p>
<p><br />- eureka</p>
<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>
<p>- 启动类添加注解<br />@EnableEurekaServer</p>
<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>
<p>&nbsp;</p>
<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>
<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>
<p>```</p>
<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>
<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>
<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>
<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>
<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>
<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>
<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>
<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>
<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>
<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>
<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>
<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>
<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>
<p>&nbsp;</p>
<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>
<p>if (server.isAlive()) {<br />return (server);<br />}</p>
<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>
<p>}</p>
<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>
<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>
<p>```</p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=6, blogRemark=存储, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 7(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 01:20:43.088 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:20:43.330 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:20:43.330 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:20:43.332 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:20:43.332 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:20:43.332 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:20:43.333 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:20:43.336 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:20:43.336 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 15:12:24), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogRemark":"存储","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:20:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:20:43.339 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:20:44.362 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ?; 
2020-03-28 01:20:44.363 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==> Parameters: SpringCloud 基础 Eureka、Ribbon(String), <p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>
<p>- 服务熔断，服务降级</p>
<p><br />## eureka 与 zookeeper 区别</p>
<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>
<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>
<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>
<p>private static final String REST_URL_PREFIX = "http://localhost:8001";</p>
<p>@PostMapping("/consumer/dept/add")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + "/dept/add", dept, Boolean.class);<br />}</p>
<p>@GetMapping("/consumer/dept/get/{id}")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/get/"+id, Dept.class);<br />}</p>
<p>@GetMapping("/consumer/dept/list")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/list", List.class);<br />}</p>
<p><br />}</p>
<p>```</p>
<p><br />- eureka</p>
<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>
<p>- 启动类添加注解<br />@EnableEurekaServer</p>
<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>
<p>&nbsp;</p>
<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>
<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>
<p>```</p>
<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>
<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>
<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>
<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>
<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>
<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>
<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>
<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>
<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>
<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>
<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>
<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>
<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>
<p>&nbsp;</p>
<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>
<p>if (server.isAlive()) {<br />return (server);<br />}</p>
<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>
<p>}</p>
<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>
<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>
<p>```</p>(String), 0(Integer), 0(Integer), 0(Integer), 6(Integer), 存储(String), 0(Integer), CSDB(String), 1243556486165114880(String), 1(Integer)
2020-03-28 01:20:44.364 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.update.debug:143 -<==    Updates: 0
2020-03-28 01:20:44.365 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:20:44.365 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/update(String), [Blog(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>
<p>- 服务熔断，服务降级</p>
<p><br />## eureka 与 zookeeper 区别</p>
<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>
<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>
<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>
<p>private static final String REST_URL_PREFIX = "http://localhost:8001";</p>
<p>@PostMapping("/consumer/dept/add")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + "/dept/add", dept, Boolean.class);<br />}</p>
<p>@GetMapping("/consumer/dept/get/{id}")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/get/"+id, Dept.class);<br />}</p>
<p>@GetMapping("/consumer/dept/list")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/list", List.class);<br />}</p>
<p><br />}</p>
<p>```</p>
<p><br />- eureka</p>
<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>
<p>- 启动类添加注解<br />@EnableEurekaServer</p>
<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>
<p>&nbsp;</p>
<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>
<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>
<p>```</p>
<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>
<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>
<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>
<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>
<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>
<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>
<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>
<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>
<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>
<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>
<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>
<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>
<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>
<p>&nbsp;</p>
<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>
<p>if (server.isAlive()) {<br />return (server);<br />}</p>
<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>
<p>}</p>
<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>
<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>
<p>```</p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=6, blogRemark=存储, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 3(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 01:20:44.368 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:20:44.689 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:20:44.689 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:20:44.690 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:20:44.691 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:20:44.691 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:20:44.692 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:20:44.693 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:20:44.693 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=存储, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:20:42), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogRemark":"存储","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:20:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:20:44.696 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:23:01.641 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:23:01.642 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:23:01.644 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:23:01.645 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:23:01.645 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogRemark":"存储","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:23:01.648 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:23:09.643 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ?; 
2020-03-28 01:23:09.644 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==> Parameters: SpringCloud 基础 Eureka、Ribbon(String), <p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>
<p>- 服务熔断，服务降级</p>
<p><br />## eureka 与 zookeeper 区别</p>
<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>
<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>
<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>
<p>private static final String REST_URL_PREFIX = "http://localhost:8001";</p>
<p>@PostMapping("/consumer/dept/add")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + "/dept/add", dept, Boolean.class);<br />}</p>
<p>@GetMapping("/consumer/dept/get/{id}")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/get/"+id, Dept.class);<br />}</p>
<p>@GetMapping("/consumer/dept/list")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/list", List.class);<br />}</p>
<p><br />}</p>
<p>```</p>
<p><br />- eureka</p>
<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>
<p>- 启动类添加注解<br />@EnableEurekaServer</p>
<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>
<p>&nbsp;</p>
<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>
<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>
<p>```</p>
<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>
<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>
<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>
<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>
<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>
<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>
<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>
<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>
<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>
<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>
<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>
<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>
<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>
<p>&nbsp;</p>
<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>
<p>if (server.isAlive()) {<br />return (server);<br />}</p>
<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>
<p>}</p>
<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>
<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>
<p>```</p>(String), 0(Integer), 0(Integer), 0(Integer), 6(Integer), 测试关闭(String), 0(Integer), CSDB(String), 1243556486165114880(String), 2(Integer)
2020-03-28 01:23:09.647 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.update.debug:143 -<==    Updates: 1
2020-03-28 01:23:09.648 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:23:09.648 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/update(String), [Blog(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>
<p>- 服务熔断，服务降级</p>
<p><br />## eureka 与 zookeeper 区别</p>
<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>
<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>
<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>
<p>private static final String REST_URL_PREFIX = "http://localhost:8001";</p>
<p>@PostMapping("/consumer/dept/add")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + "/dept/add", dept, Boolean.class);<br />}</p>
<p>@GetMapping("/consumer/dept/get/{id}")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/get/"+id, Dept.class);<br />}</p>
<p>@GetMapping("/consumer/dept/list")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/list", List.class);<br />}</p>
<p><br />}</p>
<p>```</p>
<p><br />- eureka</p>
<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>
<p>- 启动类添加注解<br />@EnableEurekaServer</p>
<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>
<p>&nbsp;</p>
<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>
<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>
<p>```</p>
<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>
<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>
<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>
<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>
<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>
<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>
<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>
<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>
<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>
<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>
<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>
<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>
<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>
<p>&nbsp;</p>
<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>
<p>if (server.isAlive()) {<br />return (server);<br />}</p>
<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>
<p>}</p>
<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>
<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>
<p>```</p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=6, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=null, version=2, deleted=null)](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 01:23:09.652 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:23:09.980 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:23:09.980 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:23:09.982 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:23:09.982 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:23:09.982 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:23:09.983 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:23:09.987 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:23:09.988 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=存储, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:20:42), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:23:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:23:09.990 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:23:13.160 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:23:13.160 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:23:13.162 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:23:13.163 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:23:13.163 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":3},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:23:13.165 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:23:43.607 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:23:43.607 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:23:43.609 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:23:43.610 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:23:43.611 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":3},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:23:43.613 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:24:20.422 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:24:20.422 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243575371052441600(String)
2020-03-28 01:24:20.423 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:24:20.424 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:24:20.425 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243575371052441600(String), [1243575371052441600](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>fastDFS 上传上图</p>","blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","blogType":17,"createdTime":"2020-03-27 16:27:27","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:24:20.427 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:26:08.523 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:26:08.523 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243575371052441600(String)
2020-03-28 01:26:08.524 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:26:08.525 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:26:08.525 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243575371052441600(String), [1243575371052441600](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>fastDFS 上传上图</p>","blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","blogType":17,"createdTime":"2020-03-27 16:27:27","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:26:08.528 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:26:54.135 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:26:54.135 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:26:54.137 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:26:54.138 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:26:54.138 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":3},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:26:54.140 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:26:59.649 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:26:59.649 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1abd8677](String), 1(Integer), null, POST(String), 26(Long), {"code":20000,"data":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","msg":"上传成功"}(String), 127.0.0.1(String)
2020-03-28 01:26:59.655 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:27:02.169 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ?; 
2020-03-28 01:27:02.169 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==> Parameters: SpringCloud 基础 Eureka、Ribbon(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png(String), <p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>
<p>- 服务熔断，服务降级</p>
<p><br />## eureka 与 zookeeper 区别</p>
<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>
<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>
<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>
<p>private static final String REST_URL_PREFIX = "http://localhost:8001";</p>
<p>@PostMapping("/consumer/dept/add")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + "/dept/add", dept, Boolean.class);<br />}</p>
<p>@GetMapping("/consumer/dept/get/{id}")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/get/"+id, Dept.class);<br />}</p>
<p>@GetMapping("/consumer/dept/list")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/list", List.class);<br />}</p>
<p><br />}</p>
<p>```</p>
<p><br />- eureka</p>
<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>
<p>- 启动类添加注解<br />@EnableEurekaServer</p>
<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>
<p>&nbsp;</p>
<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>
<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>
<p>```</p>
<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>
<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>
<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>
<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>
<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>
<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>
<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>
<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>
<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>
<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>
<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>
<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>
<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>
<p>&nbsp;</p>
<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>
<p>if (server.isAlive()) {<br />return (server);<br />}</p>
<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>
<p>}</p>
<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>
<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>
<p>```</p>(String), 0(Integer), 0(Integer), 0(Integer), 6(Integer), 测试关闭(String), 0(Integer), CSDB(String), 1243556486165114880(String), 3(Integer)
2020-03-28 01:27:02.174 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.update.debug:143 -<==    Updates: 1
2020-03-28 01:27:02.174 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:27:02.175 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/update(String), [Blog(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>
<p>- 服务熔断，服务降级</p>
<p><br />## eureka 与 zookeeper 区别</p>
<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>
<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>
<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>
<p>private static final String REST_URL_PREFIX = "http://localhost:8001";</p>
<p>@PostMapping("/consumer/dept/add")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + "/dept/add", dept, Boolean.class);<br />}</p>
<p>@GetMapping("/consumer/dept/get/{id}")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/get/"+id, Dept.class);<br />}</p>
<p>@GetMapping("/consumer/dept/list")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + "/dept/list", List.class);<br />}</p>
<p><br />}</p>
<p>```</p>
<p><br />- eureka</p>
<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>
<p>- 启动类添加注解<br />@EnableEurekaServer</p>
<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>
<p>&nbsp;</p>
<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>
<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>
<p>```</p>
<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>
<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>
<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>
<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>
<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>
<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>
<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>
<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>
<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>
<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>
<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>
<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>
<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>
<p>&nbsp;</p>
<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>
<p>if (server.isAlive()) {<br />return (server);<br />}</p>
<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>
<p>}</p>
<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>
<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>
<p>```</p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=6, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=null, version=3, deleted=null)](String), 1(Integer), null, PUT(String), 8(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 01:27:02.177 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:27:02.421 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:27:02.422 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:27:02.424 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:27:02.424 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:27:02.424 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:27:02.425 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:27:02.427 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:27:02.427 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:23:09), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 15:13:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:27:02.429 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:27:11.359 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:27:11.360 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:27:11.361 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:27:11.362 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:27:11.363 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:27:11.365 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:27:19.492 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:27:19.492 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556672912306176(String)
2020-03-28 01:27:19.494 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:27:19.495 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:27:19.495 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556672912306176(String), [1243556672912306176](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># 统计每个字符出现的次数<br />1. 随机生成100个小写字符并将其放入一个字符数组中<br />2. 对数组中每个字母出现的次数进行计数：创建一个具有26个int值得数组counts，每个值存放每个字母出现的次数。<br />```java<br />package com.ybs.practice;<br />/**<br />* @Description 类描述：<br />* @ClassName 类名称：<br />* @author yb.w<br />* @version 创建时间：2019年7月4日 下午2:14:00<br />*/<br />public class CountLettersInArray {<br />public static void main(String[] args) {<br />// Declare and create an array<br />char[] chars = createArray();<br /><br />// Display the array<br />displayArray(chars);<br /><br />// Count the occurrences of each letter<br />int[] counts = countLetters(chars);<br /><br />// Display counts<br />System.out.println(\"The occurrences of each letter are:\");<br />displayCounts(counts);<br />}<br /><br />private static char[] createArray() {<br />char[] chars = new char[100];<br /><br />for(int i = 0; i &lt; chars.length; i++)<br />chars[i] = getRandomLowerCaseLetter();<br /><br />return chars;<br />}<br /><br />private static void displayArray(char[] chars) {<br />// Display the characters in the array 20 on each line<br />for (int i = 0; i &lt; chars.length; i++) {<br />if((i+1) % 20 == 0)<br />System.out.println(chars[i]);<br />else<br />System.out.print(chars[i] + \" \");<br />}<br />}<br /><br />private static int[] countLetters(char[] chars) {<br />int[] counts = new int[26];<br /><br />for(int i = 0; i &lt; chars.length; i++) {<br />counts[chars[i] - 'a']++; // 'b' - 'a' = 1<br />}<br />return counts;<br />}<br /><br />private static void displayCounts(int[] counts) {<br />for(int i = 0; i &lt; counts.length; i++) {<br />if((i+1)%10 == 0)<br />System.out.println((char)(i + 'a') + \":\" + counts[i]);<br />else<br />System.out.print((char)(i + 'a') + \":\" + counts[i] + \" \");</p>\n<p>}<br />}<br /><br />public static char getRandomCharacter(char ch1, char ch2) {<br />return (char)(ch1 + Math.random() * (ch2 - ch1 + 1));<br />}</p>\n<p>public static char getRandomLowerCaseLetter() {<br />return getRandomCharacter('a', 'z');<br />}<br />}</p>\n<p>```<br /># 结果<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190704145015500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTM0MTA3,size_16,color_FFFFFF,t_70)</p>","blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","blogType":6,"createdTime":"2020-03-27 15:13:09","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:27:19.497 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:27:25.742 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:27:25.743 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556672912306176(String)
2020-03-28 01:27:25.744 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:27:25.745 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:27:25.745 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556672912306176(String), [1243556672912306176](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># 统计每个字符出现的次数<br />1. 随机生成100个小写字符并将其放入一个字符数组中<br />2. 对数组中每个字母出现的次数进行计数：创建一个具有26个int值得数组counts，每个值存放每个字母出现的次数。<br />```java<br />package com.ybs.practice;<br />/**<br />* @Description 类描述：<br />* @ClassName 类名称：<br />* @author yb.w<br />* @version 创建时间：2019年7月4日 下午2:14:00<br />*/<br />public class CountLettersInArray {<br />public static void main(String[] args) {<br />// Declare and create an array<br />char[] chars = createArray();<br /><br />// Display the array<br />displayArray(chars);<br /><br />// Count the occurrences of each letter<br />int[] counts = countLetters(chars);<br /><br />// Display counts<br />System.out.println(\"The occurrences of each letter are:\");<br />displayCounts(counts);<br />}<br /><br />private static char[] createArray() {<br />char[] chars = new char[100];<br /><br />for(int i = 0; i &lt; chars.length; i++)<br />chars[i] = getRandomLowerCaseLetter();<br /><br />return chars;<br />}<br /><br />private static void displayArray(char[] chars) {<br />// Display the characters in the array 20 on each line<br />for (int i = 0; i &lt; chars.length; i++) {<br />if((i+1) % 20 == 0)<br />System.out.println(chars[i]);<br />else<br />System.out.print(chars[i] + \" \");<br />}<br />}<br /><br />private static int[] countLetters(char[] chars) {<br />int[] counts = new int[26];<br /><br />for(int i = 0; i &lt; chars.length; i++) {<br />counts[chars[i] - 'a']++; // 'b' - 'a' = 1<br />}<br />return counts;<br />}<br /><br />private static void displayCounts(int[] counts) {<br />for(int i = 0; i &lt; counts.length; i++) {<br />if((i+1)%10 == 0)<br />System.out.println((char)(i + 'a') + \":\" + counts[i]);<br />else<br />System.out.print((char)(i + 'a') + \":\" + counts[i] + \" \");</p>\n<p>}<br />}<br /><br />public static char getRandomCharacter(char ch1, char ch2) {<br />return (char)(ch1 + Math.random() * (ch2 - ch1 + 1));<br />}</p>\n<p>public static char getRandomLowerCaseLetter() {<br />return getRandomCharacter('a', 'z');<br />}<br />}</p>\n<p>```<br /># 结果<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190704145015500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTM0MTA3,size_16,color_FFFFFF,t_70)</p>","blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","blogType":6,"createdTime":"2020-03-27 15:13:09","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:27:25.747 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:27:33.076 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:27:33.076 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556672912306176(String)
2020-03-28 01:27:33.077 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:27:33.078 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:27:33.079 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556672912306176(String), [1243556672912306176](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># 统计每个字符出现的次数<br />1. 随机生成100个小写字符并将其放入一个字符数组中<br />2. 对数组中每个字母出现的次数进行计数：创建一个具有26个int值得数组counts，每个值存放每个字母出现的次数。<br />```java<br />package com.ybs.practice;<br />/**<br />* @Description 类描述：<br />* @ClassName 类名称：<br />* @author yb.w<br />* @version 创建时间：2019年7月4日 下午2:14:00<br />*/<br />public class CountLettersInArray {<br />public static void main(String[] args) {<br />// Declare and create an array<br />char[] chars = createArray();<br /><br />// Display the array<br />displayArray(chars);<br /><br />// Count the occurrences of each letter<br />int[] counts = countLetters(chars);<br /><br />// Display counts<br />System.out.println(\"The occurrences of each letter are:\");<br />displayCounts(counts);<br />}<br /><br />private static char[] createArray() {<br />char[] chars = new char[100];<br /><br />for(int i = 0; i &lt; chars.length; i++)<br />chars[i] = getRandomLowerCaseLetter();<br /><br />return chars;<br />}<br /><br />private static void displayArray(char[] chars) {<br />// Display the characters in the array 20 on each line<br />for (int i = 0; i &lt; chars.length; i++) {<br />if((i+1) % 20 == 0)<br />System.out.println(chars[i]);<br />else<br />System.out.print(chars[i] + \" \");<br />}<br />}<br /><br />private static int[] countLetters(char[] chars) {<br />int[] counts = new int[26];<br /><br />for(int i = 0; i &lt; chars.length; i++) {<br />counts[chars[i] - 'a']++; // 'b' - 'a' = 1<br />}<br />return counts;<br />}<br /><br />private static void displayCounts(int[] counts) {<br />for(int i = 0; i &lt; counts.length; i++) {<br />if((i+1)%10 == 0)<br />System.out.println((char)(i + 'a') + \":\" + counts[i]);<br />else<br />System.out.print((char)(i + 'a') + \":\" + counts[i] + \" \");</p>\n<p>}<br />}<br /><br />public static char getRandomCharacter(char ch1, char ch2) {<br />return (char)(ch1 + Math.random() * (ch2 - ch1 + 1));<br />}</p>\n<p>public static char getRandomLowerCaseLetter() {<br />return getRandomCharacter('a', 'z');<br />}<br />}</p>\n<p>```<br /># 结果<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190704145015500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTM0MTA3,size_16,color_FFFFFF,t_70)</p>","blogGoods":0,"blogId":"1243556672912306176","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","blogType":6,"createdTime":"2020-03-27 15:13:09","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:27:33.081 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:27:38.595 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:27:38.595 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1484a4a8](String), 1(Integer), null, POST(String), 49(Long), {"code":20000,"data":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","msg":"上传成功"}(String), 127.0.0.1(String)
2020-03-28 01:27:38.608 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:27:42.694 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ?; 
2020-03-28 01:27:42.694 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==> Parameters:  统计每个字符出现的次数(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png(String), <p># 统计每个字符出现的次数<br />1. 随机生成100个小写字符并将其放入一个字符数组中<br />2. 对数组中每个字母出现的次数进行计数：创建一个具有26个int值得数组counts，每个值存放每个字母出现的次数。<br />```java<br />package com.ybs.practice;<br />/**<br />* @Description 类描述：<br />* @ClassName 类名称：<br />* @author yb.w<br />* @version 创建时间：2019年7月4日 下午2:14:00<br />*/<br />public class CountLettersInArray {<br />public static void main(String[] args) {<br />// Declare and create an array<br />char[] chars = createArray();<br /><br />// Display the array<br />displayArray(chars);<br /><br />// Count the occurrences of each letter<br />int[] counts = countLetters(chars);<br /><br />// Display counts<br />System.out.println("The occurrences of each letter are:");<br />displayCounts(counts);<br />}<br /><br />private static char[] createArray() {<br />char[] chars = new char[100];<br /><br />for(int i = 0; i &lt; chars.length; i++)<br />chars[i] = getRandomLowerCaseLetter();<br /><br />return chars;<br />}<br /><br />private static void displayArray(char[] chars) {<br />// Display the characters in the array 20 on each line<br />for (int i = 0; i &lt; chars.length; i++) {<br />if((i+1) % 20 == 0)<br />System.out.println(chars[i]);<br />else<br />System.out.print(chars[i] + " ");<br />}<br />}<br /><br />private static int[] countLetters(char[] chars) {<br />int[] counts = new int[26];<br /><br />for(int i = 0; i &lt; chars.length; i++) {<br />counts[chars[i] - 'a']++; // 'b' - 'a' = 1<br />}<br />return counts;<br />}<br /><br />private static void displayCounts(int[] counts) {<br />for(int i = 0; i &lt; counts.length; i++) {<br />if((i+1)%10 == 0)<br />System.out.println((char)(i + 'a') + ":" + counts[i]);<br />else<br />System.out.print((char)(i + 'a') + ":" + counts[i] + " ");</p>
<p>}<br />}<br /><br />public static char getRandomCharacter(char ch1, char ch2) {<br />return (char)(ch1 + Math.random() * (ch2 - ch1 + 1));<br />}</p>
<p>public static char getRandomLowerCaseLetter() {<br />return getRandomCharacter('a', 'z');<br />}<br />}</p>
<p>```<br /># 结果<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190704145015500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTM0MTA3,size_16,color_FFFFFF,t_70)</p>(String), 0(Integer), 0(Integer), 0(Integer), 6(Integer), 0(Integer), CSDN(String), 1243556672912306176(String), 1(Integer)
2020-03-28 01:27:42.697 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.update.debug:143 -<==    Updates: 1
2020-03-28 01:27:42.698 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:27:42.698 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/update(String), [Blog(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=<p># 统计每个字符出现的次数<br />1. 随机生成100个小写字符并将其放入一个字符数组中<br />2. 对数组中每个字母出现的次数进行计数：创建一个具有26个int值得数组counts，每个值存放每个字母出现的次数。<br />```java<br />package com.ybs.practice;<br />/**<br />* @Description 类描述：<br />* @ClassName 类名称：<br />* @author yb.w<br />* @version 创建时间：2019年7月4日 下午2:14:00<br />*/<br />public class CountLettersInArray {<br />public static void main(String[] args) {<br />// Declare and create an array<br />char[] chars = createArray();<br /><br />// Display the array<br />displayArray(chars);<br /><br />// Count the occurrences of each letter<br />int[] counts = countLetters(chars);<br /><br />// Display counts<br />System.out.println("The occurrences of each letter are:");<br />displayCounts(counts);<br />}<br /><br />private static char[] createArray() {<br />char[] chars = new char[100];<br /><br />for(int i = 0; i &lt; chars.length; i++)<br />chars[i] = getRandomLowerCaseLetter();<br /><br />return chars;<br />}<br /><br />private static void displayArray(char[] chars) {<br />// Display the characters in the array 20 on each line<br />for (int i = 0; i &lt; chars.length; i++) {<br />if((i+1) % 20 == 0)<br />System.out.println(chars[i]);<br />else<br />System.out.print(chars[i] + " ");<br />}<br />}<br /><br />private static int[] countLetters(char[] chars) {<br />int[] counts = new int[26];<br /><br />for(int i = 0; i &lt; chars.length; i++) {<br />counts[chars[i] - 'a']++; // 'b' - 'a' = 1<br />}<br />return counts;<br />}<br /><br />private static void displayCounts(int[] counts) {<br />for(int i = 0; i &lt; counts.length; i++) {<br />if((i+1)%10 == 0)<br />System.out.println((char)(i + 'a') + ":" + counts[i]);<br />else<br />System.out.print((char)(i + 'a') + ":" + counts[i] + " ");</p>
<p>}<br />}<br /><br />public static char getRandomCharacter(char ch1, char ch2) {<br />return (char)(ch1 + Math.random() * (ch2 - ch1 + 1));<br />}</p>
<p>public static char getRandomLowerCaseLetter() {<br />return getRandomCharacter('a', 'z');<br />}<br />}</p>
<p>```<br /># 结果<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190704145015500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTM0MTA3,size_16,color_FFFFFF,t_70)</p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=6, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 01:27:42.702 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:27:42.946 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:27:42.946 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:27:42.948 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:27:42.948 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:27:42.948 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:27:42.949 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:27:42.952 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:27:42.953 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 15:13:09), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:27:42.956 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:28:58.864 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:28:58.864 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:28:58.875 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:28:59.007 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:28:59.007 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:28:59.009 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:28:59.009 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:28:59.010 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:28:59.012 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:28:59.016 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:28:59.017 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:28:59.024 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:28:59.310 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:28:59.310 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:28:59.311 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:28:59.311 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:28:59.312 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:28:59.314 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:29:02.294 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:29:02.294 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:29:02.295 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:29:02.296 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:29:02.296 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:29:02.299 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:29:07.584 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:29:07.585 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556672912306176(String)
2020-03-28 01:29:07.586 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:29:07.587 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:29:07.588 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556672912306176(String), [1243556672912306176](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># 统计每个字符出现的次数<br />1. 随机生成100个小写字符并将其放入一个字符数组中<br />2. 对数组中每个字母出现的次数进行计数：创建一个具有26个int值得数组counts，每个值存放每个字母出现的次数。<br />```java<br />package com.ybs.practice;<br />/**<br />* @Description 类描述：<br />* @ClassName 类名称：<br />* @author yb.w<br />* @version 创建时间：2019年7月4日 下午2:14:00<br />*/<br />public class CountLettersInArray {<br />public static void main(String[] args) {<br />// Declare and create an array<br />char[] chars = createArray();<br /><br />// Display the array<br />displayArray(chars);<br /><br />// Count the occurrences of each letter<br />int[] counts = countLetters(chars);<br /><br />// Display counts<br />System.out.println(\"The occurrences of each letter are:\");<br />displayCounts(counts);<br />}<br /><br />private static char[] createArray() {<br />char[] chars = new char[100];<br /><br />for(int i = 0; i &lt; chars.length; i++)<br />chars[i] = getRandomLowerCaseLetter();<br /><br />return chars;<br />}<br /><br />private static void displayArray(char[] chars) {<br />// Display the characters in the array 20 on each line<br />for (int i = 0; i &lt; chars.length; i++) {<br />if((i+1) % 20 == 0)<br />System.out.println(chars[i]);<br />else<br />System.out.print(chars[i] + \" \");<br />}<br />}<br /><br />private static int[] countLetters(char[] chars) {<br />int[] counts = new int[26];<br /><br />for(int i = 0; i &lt; chars.length; i++) {<br />counts[chars[i] - 'a']++; // 'b' - 'a' = 1<br />}<br />return counts;<br />}<br /><br />private static void displayCounts(int[] counts) {<br />for(int i = 0; i &lt; counts.length; i++) {<br />if((i+1)%10 == 0)<br />System.out.println((char)(i + 'a') + \":\" + counts[i]);<br />else<br />System.out.print((char)(i + 'a') + \":\" + counts[i] + \" \");</p>\n<p>}<br />}<br /><br />public static char getRandomCharacter(char ch1, char ch2) {<br />return (char)(ch1 + Math.random() * (ch2 - ch1 + 1));<br />}</p>\n<p>public static char getRandomLowerCaseLetter() {<br />return getRandomCharacter('a', 'z');<br />}<br />}</p>\n<p>```<br /># 结果<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190704145015500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTM0MTA3,size_16,color_FFFFFF,t_70)</p>","blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","blogType":6,"createdTime":"2020-03-27 15:13:09","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:29:07.590 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:31:13.457 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:31:13.458 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:31:13.472 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:31:13.580 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:31:13.580 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:31:13.582 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:31:13.583 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:31:13.584 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:31:13.586 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:31:13.587 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:31:13.590 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:31:13.590 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:31:13.591 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:31:13.592 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:31:13.593 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:31:13.597 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:31:13.597 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:31:13.602 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:31:45.785 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:31:45.785 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:31:45.787 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:31:45.789 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:31:45.789 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:31:45.792 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:31:51.993 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:31:51.993 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:31:52.016 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:31:52.160 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:31:52.161 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:31:52.162 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:31:52.163 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:31:52.164 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:31:52.166 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:31:52.463 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:31:52.463 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:31:52.464 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:31:52.465 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:31:52.465 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:31:52.468 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:31:52.471 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:31:52.472 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:31:52.475 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:31:55.261 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:31:55.261 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:31:55.262 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:31:55.263 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:31:55.264 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:31:55.267 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:31:58.503 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:31:58.504 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556672912306176(String)
2020-03-28 01:31:58.505 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:31:58.506 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:31:58.506 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556672912306176(String), [1243556672912306176](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># 统计每个字符出现的次数<br />1. 随机生成100个小写字符并将其放入一个字符数组中<br />2. 对数组中每个字母出现的次数进行计数：创建一个具有26个int值得数组counts，每个值存放每个字母出现的次数。<br />```java<br />package com.ybs.practice;<br />/**<br />* @Description 类描述：<br />* @ClassName 类名称：<br />* @author yb.w<br />* @version 创建时间：2019年7月4日 下午2:14:00<br />*/<br />public class CountLettersInArray {<br />public static void main(String[] args) {<br />// Declare and create an array<br />char[] chars = createArray();<br /><br />// Display the array<br />displayArray(chars);<br /><br />// Count the occurrences of each letter<br />int[] counts = countLetters(chars);<br /><br />// Display counts<br />System.out.println(\"The occurrences of each letter are:\");<br />displayCounts(counts);<br />}<br /><br />private static char[] createArray() {<br />char[] chars = new char[100];<br /><br />for(int i = 0; i &lt; chars.length; i++)<br />chars[i] = getRandomLowerCaseLetter();<br /><br />return chars;<br />}<br /><br />private static void displayArray(char[] chars) {<br />// Display the characters in the array 20 on each line<br />for (int i = 0; i &lt; chars.length; i++) {<br />if((i+1) % 20 == 0)<br />System.out.println(chars[i]);<br />else<br />System.out.print(chars[i] + \" \");<br />}<br />}<br /><br />private static int[] countLetters(char[] chars) {<br />int[] counts = new int[26];<br /><br />for(int i = 0; i &lt; chars.length; i++) {<br />counts[chars[i] - 'a']++; // 'b' - 'a' = 1<br />}<br />return counts;<br />}<br /><br />private static void displayCounts(int[] counts) {<br />for(int i = 0; i &lt; counts.length; i++) {<br />if((i+1)%10 == 0)<br />System.out.println((char)(i + 'a') + \":\" + counts[i]);<br />else<br />System.out.print((char)(i + 'a') + \":\" + counts[i] + \" \");</p>\n<p>}<br />}<br /><br />public static char getRandomCharacter(char ch1, char ch2) {<br />return (char)(ch1 + Math.random() * (ch2 - ch1 + 1));<br />}</p>\n<p>public static char getRandomLowerCaseLetter() {<br />return getRandomCharacter('a', 'z');<br />}<br />}</p>\n<p>```<br /># 结果<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190704145015500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTM0MTA3,size_16,color_FFFFFF,t_70)</p>","blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","blogType":6,"createdTime":"2020-03-27 15:13:09","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:31:58.509 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:32:57.162 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:32:57.163 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:32:57.171 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:32:57.317 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:32:57.318 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:32:57.320 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:32:57.321 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:32:57.321 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:32:57.324 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:32:57.620 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:32:57.620 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:32:57.622 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:32:57.622 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:32:57.623 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:32:57.624 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:32:57.626 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:32:57.626 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:32:57.628 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:32:59.422 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:32:59.422 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 01:32:59.424 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:32:59.425 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:32:59.425 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:32:59.428 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:33:02.598 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 01:33:02.598 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556672912306176(String)
2020-03-28 01:33:02.599 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 01:33:02.601 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:33:02.601 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556672912306176(String), [1243556672912306176](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># 统计每个字符出现的次数<br />1. 随机生成100个小写字符并将其放入一个字符数组中<br />2. 对数组中每个字母出现的次数进行计数：创建一个具有26个int值得数组counts，每个值存放每个字母出现的次数。<br />```java<br />package com.ybs.practice;<br />/**<br />* @Description 类描述：<br />* @ClassName 类名称：<br />* @author yb.w<br />* @version 创建时间：2019年7月4日 下午2:14:00<br />*/<br />public class CountLettersInArray {<br />public static void main(String[] args) {<br />// Declare and create an array<br />char[] chars = createArray();<br /><br />// Display the array<br />displayArray(chars);<br /><br />// Count the occurrences of each letter<br />int[] counts = countLetters(chars);<br /><br />// Display counts<br />System.out.println(\"The occurrences of each letter are:\");<br />displayCounts(counts);<br />}<br /><br />private static char[] createArray() {<br />char[] chars = new char[100];<br /><br />for(int i = 0; i &lt; chars.length; i++)<br />chars[i] = getRandomLowerCaseLetter();<br /><br />return chars;<br />}<br /><br />private static void displayArray(char[] chars) {<br />// Display the characters in the array 20 on each line<br />for (int i = 0; i &lt; chars.length; i++) {<br />if((i+1) % 20 == 0)<br />System.out.println(chars[i]);<br />else<br />System.out.print(chars[i] + \" \");<br />}<br />}<br /><br />private static int[] countLetters(char[] chars) {<br />int[] counts = new int[26];<br /><br />for(int i = 0; i &lt; chars.length; i++) {<br />counts[chars[i] - 'a']++; // 'b' - 'a' = 1<br />}<br />return counts;<br />}<br /><br />private static void displayCounts(int[] counts) {<br />for(int i = 0; i &lt; counts.length; i++) {<br />if((i+1)%10 == 0)<br />System.out.println((char)(i + 'a') + \":\" + counts[i]);<br />else<br />System.out.print((char)(i + 'a') + \":\" + counts[i] + \" \");</p>\n<p>}<br />}<br /><br />public static char getRandomCharacter(char ch1, char ch2) {<br />return (char)(ch1 + Math.random() * (ch2 - ch1 + 1));<br />}</p>\n<p>public static char getRandomLowerCaseLetter() {<br />return getRandomCharacter('a', 'z');<br />}<br />}</p>\n<p>```<br /># 结果<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190704145015500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTM0MTA3,size_16,color_FFFFFF,t_70)</p>","blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","blogType":6,"createdTime":"2020-03-27 15:13:09","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:33:02.604 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:34:30.459 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:34:30.459 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:34:30.471 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:34:30.648 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:34:30.648 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:34:30.651 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:34:30.652 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:34:30.653 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:34:30.654 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:34:30.656 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:34:30.656 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:34:30.659 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:34:30.948 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:34:30.948 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:34:30.956 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:34:30.957 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:34:30.958 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:34:30.990 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:34:48.745 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:34:48.746 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:34:48.747 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:34:48.748 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:34:48.748 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:34:48.751 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:34:48.754 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:34:48.755 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:34:48.758 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:35:30.463 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:35:30.463 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:35:30.465 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:35:30.465 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:35:30.466 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:35:30.468 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:35:30.470 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:35:30.471 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:35:30.473 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:35:31.527 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:35:31.527 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:35:31.539 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:35:31.665 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:35:31.665 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:35:31.668 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:35:31.669 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:35:31.670 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:35:31.674 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:35:31.970 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:35:31.971 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:35:31.974 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:35:31.975 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:35:31.976 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:35:31.977 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:35:31.979 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:35:31.979 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:35:31.981 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:35:34.773 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 01:35:34.773 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 01:35:34.775 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 01:35:34.776 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:35:34.776 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:35:34.778 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:35:35.811 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:35:35.811 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:35:35.812 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:35:35.813 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:35:35.813 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:35:35.814 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:35:35.817 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:35:35.818 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:35:35.863 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:35:49.611 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:35:49.611 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:35:49.612 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:35:49.614 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:35:49.614 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:35:49.616 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:35:49.619 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:35:49.620 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:35:49.622 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:38:04.178 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:38:04.178 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:38:04.180 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:38:04.323 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:38:04.324 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:38:04.325 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:38:04.327 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:38:04.328 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:38:04.341 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:38:04.346 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:38:04.347 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 24(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:38:04.352 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:38:04.624 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:38:04.624 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:38:04.632 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:38:04.634 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:38:04.634 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:38:04.655 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:38:23.634 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:38:23.635 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:38:23.637 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:38:23.637 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:38:23.638 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:38:23.639 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:38:23.641 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:38:23.642 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:38:23.643 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:39:27.596 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:39:27.597 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:39:27.618 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:39:27.771 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:39:27.772 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:39:27.774 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:39:27.774 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:39:27.775 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:39:27.776 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:39:27.778 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:39:27.778 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:39:27.781 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:39:28.073 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:39:28.074 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:39:28.085 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:39:28.087 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:39:28.088 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:39:28.104 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:40:09.610 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:40:09.611 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:40:09.640 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:40:09.802 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:40:09.802 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:40:09.804 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:40:09.805 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:40:09.805 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:40:09.808 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:40:10.106 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:40:10.106 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:40:10.107 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:40:10.108 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:40:10.108 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:40:10.109 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:40:10.110 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:40:10.111 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:40:10.114 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:40:53.544 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:40:53.544 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:40:53.549 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:40:53.704 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:40:53.704 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:40:53.705 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:40:53.706 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:40:53.707 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:40:53.709 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:40:54.008 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:40:54.008 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:40:54.010 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:40:54.010 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:40:54.011 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:40:54.012 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:40:54.013 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:40:54.014 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:40:54.023 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:41:24.456 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') limit ?, ? 
2020-03-28 01:41:24.457 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: JAVA(String), 0(Integer), 10(Integer)
2020-03-28 01:41:24.458 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 0
2020-03-28 01:41:24.458 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') 
2020-03-28 01:41:24.459 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: JAVA(String)
2020-03-28 01:41:24.459 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:41:24.461 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:41:24.461 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={blogTitle=JAVA}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"blogTitle":"JAVA"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:41:24.463 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:41:30.071 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') limit ?, ? 
2020-03-28 01:41:30.072 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: Java(String), 0(Integer), 10(Integer)
2020-03-28 01:41:30.072 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 0
2020-03-28 01:41:30.073 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') 
2020-03-28 01:41:30.073 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: Java(String)
2020-03-28 01:41:30.074 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:41:30.076 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:41:30.076 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={blogTitle=Java}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"blogTitle":"Java"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:41:30.078 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:41:31.291 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') limit ?, ? 
2020-03-28 01:41:31.292 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: Java(String), 0(Integer), 10(Integer)
2020-03-28 01:41:31.293 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 0
2020-03-28 01:41:31.293 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') 
2020-03-28 01:41:31.293 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: Java(String)
2020-03-28 01:41:31.294 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:41:31.296 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:41:31.296 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={blogTitle=Java}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"blogTitle":"Java"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:41:31.298 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:41:31.514 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') limit ?, ? 
2020-03-28 01:41:31.515 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: Java(String), 0(Integer), 10(Integer)
2020-03-28 01:41:31.516 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 0
2020-03-28 01:41:31.517 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') 
2020-03-28 01:41:31.518 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: Java(String)
2020-03-28 01:41:31.519 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:41:31.520 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:41:31.521 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={blogTitle=Java}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"blogTitle":"Java"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:41:31.522 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:41:37.519 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') limit ?, ? 
2020-03-28 01:41:37.519 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 测试(String), 0(Integer), 10(Integer)
2020-03-28 01:41:37.520 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 01:41:37.520 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') 
2020-03-28 01:41:37.521 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 测试(String)
2020-03-28 01:41:37.522 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:41:37.523 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:41:37.523 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={blogTitle=测试}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{"blogTitle":"测试"},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:41:37.526 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:41:44.622 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:41:44.622 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:41:44.624 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:41:44.624 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:41:44.624 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:41:44.626 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:41:44.627 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:41:44.627 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={blogTitle=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{"blogTitle":""},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:41:44.630 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:44:30.105 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:44:30.105 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:44:30.107 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:44:30.108 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:44:30.109 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:44:30.112 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:44:30.230 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:44:30.230 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:44:30.232 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:44:30.233 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:44:30.233 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:44:30.237 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:44:30.403 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:44:30.403 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:44:30.404 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:44:30.405 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:44:30.405 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:44:30.406 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:44:30.408 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:44:30.409 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:44:30.411 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:44:32.936 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:44:32.936 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:44:32.938 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:44:32.942 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:44:32.942 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:44:32.942 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:44:32.942 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:44:32.946 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:44:32.947 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:44:32.948 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:44:32.949 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:44:32.950 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:44:32.950 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:44:32.952 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:44:32.957 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:44:32.960 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:44:32.971 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:44:32.971 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:44:32.971 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:44:32.972 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 21(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:44:32.977 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:45:03.790 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:45:03.790 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:45:03.792 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:45:03.793 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:45:03.793 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:45:03.794 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:45:03.795 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:45:03.795 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:45:03.799 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:45:14.015 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:45:14.015 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:45:14.017 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:45:14.018 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:45:14.018 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:45:14.019 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:45:14.019 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:45:14.024 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:45:14.025 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:45:14.025 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:45:14.063 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:45:14.082 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:45:14.083 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 67(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:45:14.095 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:45:14.112 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:45:17.558 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:45:17.558 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:45:17.558 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:45:17.559 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:45:17.560 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:45:17.560 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:45:17.561 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:45:17.561 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:45:17.565 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:45:17.688 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:45:17.688 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:45:17.690 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:45:17.690 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:45:17.691 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:45:17.692 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:45:17.694 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:45:17.694 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:45:17.696 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:48:42.793 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:48:42.794 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:48:42.795 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:48:42.796 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:48:42.796 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:48:42.798 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:48:42.800 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:48:42.801 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:48:42.803 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:49:08.603 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:49:08.603 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:49:08.605 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:49:08.605 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:49:08.606 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:49:08.606 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:49:08.608 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:49:08.608 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:49:08.610 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:49:19.417 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:49:19.418 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:49:19.420 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:49:19.420 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:49:19.420 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:49:19.422 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:49:19.424 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:49:19.424 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:49:19.426 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:49:21.544 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:49:21.544 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:49:21.545 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:49:21.546 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:49:21.546 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:49:21.547 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:49:21.547 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:49:21.551 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:49:21.551 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:49:21.710 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:49:21.711 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:49:21.712 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:49:21.713 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:49:21.713 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:49:21.715 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:49:21.719 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:49:21.719 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:49:21.740 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:49:25.941 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id ? limit ?, ? 
2020-03-28 01:49:25.941 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 7(Integer), 0(Integer), 10(Integer)
2020-03-28 01:49:25.999 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:49:25.999 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=7}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '7
### The error may involve com.ybs.blog.mapper.BlogMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '7
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '7
	at com.ybs.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:84)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d06af1a6.getByPage(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$c64f6e4a.getByPage(<generated>)
	at com.ybs.blog.controller.BlogController.getByPage(BlogController.java:107)
	at com.ybs.blog.controller.BlogController$$FastClassBySpringCGLIB$$b8792db5.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.BlogController$$EnhancerBySpringCGLIB$$95b78d78.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '7
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:49:26.002 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:49:58.486 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id ? limit ?, ? 
2020-03-28 01:49:58.487 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 6(Integer), 0(Integer), 10(Integer)
2020-03-28 01:49:58.490 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:49:58.490 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=6}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
### The error may involve com.ybs.blog.mapper.BlogMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
	at com.ybs.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:84)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d06af1a6.getByPage(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$c64f6e4a.getByPage(<generated>)
	at com.ybs.blog.controller.BlogController.getByPage(BlogController.java:107)
	at com.ybs.blog.controller.BlogController$$FastClassBySpringCGLIB$$b8792db5.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.BlogController$$EnhancerBySpringCGLIB$$95b78d78.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
(String), POST(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:49:58.492 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:50:04.054 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id ? limit ?, ? 
2020-03-28 01:50:04.055 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 6(Integer), 0(Integer), 10(Integer)
2020-03-28 01:50:04.058 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:50:04.058 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=6}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
### The error may involve com.ybs.blog.mapper.BlogMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
	at com.ybs.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:84)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d06af1a6.getByPage(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$c64f6e4a.getByPage(<generated>)
	at com.ybs.blog.controller.BlogController.getByPage(BlogController.java:107)
	at com.ybs.blog.controller.BlogController$$FastClassBySpringCGLIB$$b8792db5.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.BlogController$$EnhancerBySpringCGLIB$$95b78d78.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:50:04.061 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:50:24.651 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id ? limit ?, ? 
2020-03-28 01:50:24.651 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 6(Integer), 0(Integer), 10(Integer)
2020-03-28 01:50:24.654 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:50:24.655 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=6}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
### The error may involve com.ybs.blog.mapper.BlogMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
	at com.ybs.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:84)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$d06af1a6.getByPage(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$c64f6e4a.getByPage(<generated>)
	at com.ybs.blog.controller.BlogController.getByPage(BlogController.java:107)
	at com.ybs.blog.controller.BlogController$$FastClassBySpringCGLIB$$b8792db5.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.BlogController$$EnhancerBySpringCGLIB$$95b78d78.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:50:24.658 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:55:24.260 DEBUG [restartedMain]com.ybs.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-03-28 01:55:32.567 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 01:55:32.583 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 01:55:32.599 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 01:55:32.646 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:55:32.648 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 184(Long), {"code":20000,"data":{"token":"C7D6051782CFED482F3CD05F16BBF1A8"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:55:32.651 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:55:32.696 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:55:32.696 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:55:32.700 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:55:33.160 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:55:33.160 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:55:33.168 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:55:33.169 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:55:33.170 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:55:33.172 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:55:33.181 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:55:33.182 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 40(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:55:33.185 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:55:39.939 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:55:39.940 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:55:39.944 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:55:39.944 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:55:39.944 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:55:39.950 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:55:39.954 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:55:39.954 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:55:39.958 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:55:40.080 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:55:40.081 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:55:40.088 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:55:40.089 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:55:40.089 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:55:40.090 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:55:40.093 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:55:40.094 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:55:40.107 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:55:44.356 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id ? limit ?, ? 
2020-03-28 01:55:44.356 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 6(Integer), 0(Integer), 10(Integer)
2020-03-28 01:55:44.401 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:55:44.402 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=6}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
### The error may involve com.ybs.blog.mapper.BlogMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
	at com.ybs.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:84)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$38785237.getByPage(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2e5ccedb.getByPage(<generated>)
	at com.ybs.blog.controller.BlogController.getByPage(BlogController.java:107)
	at com.ybs.blog.controller.BlogController$$FastClassBySpringCGLIB$$b8792db5.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.BlogController$$EnhancerBySpringCGLIB$$dbb9d20d.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-03-28 01:55:44.405 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:55:51.628 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id ? limit ?, ? 
2020-03-28 01:55:51.628 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 6(Integer), 0(Integer), 10(Integer)
2020-03-28 01:55:51.632 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:55:51.633 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=6}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
### The error may involve com.ybs.blog.mapper.BlogMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
	at com.ybs.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:84)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$38785237.getByPage(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2e5ccedb.getByPage(<generated>)
	at com.ybs.blog.controller.BlogController.getByPage(BlogController.java:107)
	at com.ybs.blog.controller.BlogController$$FastClassBySpringCGLIB$$b8792db5.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.BlogController$$EnhancerBySpringCGLIB$$dbb9d20d.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-03-28 01:55:51.636 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:56:58.935 DEBUG [restartedMain]com.ybs.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-03-28 01:57:08.711 DEBUG [restartedMain]com.ybs.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-03-28 01:57:47.999 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 01:57:48.015 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 01:57:48.029 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 01:57:48.079 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:57:48.082 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 175(Long), {"code":20000,"data":{"token":"C55B053CEEED7614D5CC8E5FA049061B"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:57:48.085 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:57:48.116 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:57:48.117 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:57:48.120 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:57:48.295 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:57:48.295 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:57:48.305 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:57:48.306 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:57:48.306 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:57:48.308 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:57:48.318 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:57:48.319 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 51(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:57:48.325 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:57:52.380 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:57:52.382 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:57:52.385 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:57:52.386 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 01:57:52.386 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 01:57:52.390 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 01:57:52.395 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:57:52.395 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:57:52.402 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:57:52.523 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 01:57:52.523 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 01:57:52.530 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 01:57:52.531 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 01:57:52.532 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 01:57:52.537 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 01:57:52.540 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:57:52.540 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 01:57:52.543 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:57:56.258 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? limit ?, ? 
2020-03-28 01:57:56.259 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 6(Integer), 0(Integer), 10(Integer)
2020-03-28 01:57:56.260 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 01:57:56.262 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id ? 
2020-03-28 01:57:56.262 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 6(Integer)
2020-03-28 01:57:56.306 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:57:56.306 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=6}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
### The error may involve com.ybs.blog.mapper.BlogMapper.getCountByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
	at com.ybs.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:88)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$4cb2c871.getByPage(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$42974515.getByPage(<generated>)
	at com.ybs.blog.controller.BlogController.getByPage(BlogController.java:107)
	at com.ybs.blog.controller.BlogController$$FastClassBySpringCGLIB$$b8792db5.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd773995.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-03-28 01:57:56.308 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 01:58:04.492 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? limit ?, ? 
2020-03-28 01:58:04.493 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 6(Integer), 0(Integer), 10(Integer)
2020-03-28 01:58:04.495 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 01:58:04.496 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id ? 
2020-03-28 01:58:04.496 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 6(Integer)
2020-03-28 01:58:04.503 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 01:58:04.503 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=6}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
### The error may involve com.ybs.blog.mapper.BlogMapper.getCountByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
	at com.ybs.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:88)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$4cb2c871.getByPage(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$42974515.getByPage(<generated>)
	at com.ybs.blog.controller.BlogController.getByPage(BlogController.java:107)
	at com.ybs.blog.controller.BlogController$$FastClassBySpringCGLIB$$b8792db5.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd773995.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-03-28 01:58:04.506 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:07:34.434 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? limit ?, ? 
2020-03-28 02:07:34.435 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 6(Integer), 0(Integer), 10(Integer)
2020-03-28 02:07:34.437 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 02:07:34.438 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id ? 
2020-03-28 02:07:34.438 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 6(Integer)
2020-03-28 02:07:34.442 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:07:34.443 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=6}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
### The error may involve com.ybs.blog.mapper.BlogMapper.getCountByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
	at com.ybs.blog.service.impl.BlogServiceImpl.getByPage(BlogServiceImpl.java:88)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$4cb2c871.getByPage(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$91f700d9.invoke(<generated>)
	at com.ybs.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$42974515.getByPage(<generated>)
	at com.ybs.blog.controller.BlogController.getByPage(BlogController.java:107)
	at com.ybs.blog.controller.BlogController$$FastClassBySpringCGLIB$$b8792db5.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bd773995.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '6' at line 10
(String), POST(String), 0(Long), {"code":20000,"data":{"token":"C55B053CEEED7614D5CC8E5FA049061B"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:07:34.445 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:08:03.492 DEBUG [restartedMain]com.ybs.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-03-28 02:08:14.158 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 02:08:14.174 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 02:08:14.189 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 02:08:14.249 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:08:14.250 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 172(Long), {"code":20000,"data":{"token":"3A70D3C207D257929994AF9323EA8A49"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:08:14.254 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:08:14.287 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:08:14.288 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:08:14.291 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:08:14.469 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:08:14.470 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:08:14.478 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:08:14.481 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:08:14.482 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:08:14.485 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:08:14.493 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:08:14.494 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 53(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:08:14.498 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:08:16.541 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:08:16.542 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:08:16.547 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:08:16.550 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:08:16.550 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:08:16.553 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:08:16.557 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:08:16.558 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:08:16.560 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:08:16.673 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:08:16.674 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:08:16.681 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:08:16.682 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:08:16.683 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:08:16.685 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:08:16.688 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:08:16.688 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:08:16.697 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:08:20.457 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? limit ?, ? 
2020-03-28 02:08:20.457 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 6(Integer), 0(Integer), 10(Integer)
2020-03-28 02:08:20.459 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 02:08:20.460 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? 
2020-03-28 02:08:20.461 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 6(Integer)
2020-03-28 02:08:20.463 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:08:20.468 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:08:20.469 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=6}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{"typeId":6},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:08:20.473 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:08:28.425 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? limit ?, ? 
2020-03-28 02:08:28.426 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 17(Integer), 0(Integer), 10(Integer)
2020-03-28 02:08:28.429 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 6
2020-03-28 02:08:28.430 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? 
2020-03-28 02:08:28.430 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 17(Integer)
2020-03-28 02:08:28.432 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:08:28.433 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:08:28.434 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={typeId=17}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{"typeId":17},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:08:28.436 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:08:34.028 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? limit ?, ? 
2020-03-28 02:08:34.029 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 9(Integer), 0(Integer), 10(Integer)
2020-03-28 02:08:34.032 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 1
2020-03-28 02:08:34.033 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? 
2020-03-28 02:08:34.033 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 9(Integer)
2020-03-28 02:08:34.034 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:08:34.039 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:08:34.040 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=6, list=[BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=9}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"}],"pageSize":10,"params":{"typeId":9},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:08:34.041 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:09:28.900 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:09:28.900 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:09:28.903 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:09:28.910 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:09:28.910 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:09:28.915 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:09:28.917 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:09:28.917 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:09:28.920 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:09:29.321 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:09:29.322 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:09:29.326 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:09:29.327 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:09:29.328 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:09:29.331 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:09:29.335 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:09:29.336 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:09:29.340 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:09:32.229 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? limit ?, ? 
2020-03-28 02:09:32.230 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 7(Integer), 0(Integer), 10(Integer)
2020-03-28 02:09:32.233 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 1
2020-03-28 02:09:32.234 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? 
2020-03-28 02:09:32.234 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 7(Integer)
2020-03-28 02:09:32.235 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:09:32.238 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:09:32.239 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={typeId=7}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{"typeId":7},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:09:32.243 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:09:45.410 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') and type_id = ? limit ?, ? 
2020-03-28 02:09:45.410 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 测(String), (String), 0(Integer), 10(Integer)
2020-03-28 02:09:45.412 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 0
2020-03-28 02:09:45.413 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') 
2020-03-28 02:09:45.413 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 测(String)
2020-03-28 02:09:45.414 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:09:45.416 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:09:45.416 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={typeId=, blogTitle=测}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":"","blogTitle":"测"},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:09:45.419 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:09:54.006 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') and type_id = ? limit ?, ? 
2020-03-28 02:09:54.006 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 测试(String), (String), 0(Integer), 10(Integer)
2020-03-28 02:09:54.008 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 0
2020-03-28 02:09:54.009 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') 
2020-03-28 02:09:54.009 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 测试(String)
2020-03-28 02:09:54.011 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:09:54.014 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:09:54.015 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[], params={typeId=, blogTitle=测试}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":"","blogTitle":"测试"},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:09:54.018 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:10:13.656 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and type_id = ? limit ?, ? 
2020-03-28 02:10:13.657 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: (String), 0(Integer), 10(Integer)
2020-03-28 02:10:13.658 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 0
2020-03-28 02:10:13.659 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:10:13.659 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:10:13.660 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:10:13.663 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:10:13.664 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[], params={typeId=, blogTitle=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":"","blogTitle":""},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:10:13.666 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:10:15.243 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:10:15.243 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:10:15.246 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:10:15.358 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:10:15.358 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:10:15.360 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:10:15.361 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:10:15.362 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:10:15.367 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:10:15.644 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:10:15.644 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:10:15.649 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:10:15.649 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:10:15.650 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:10:15.651 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:10:15.652 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:10:15.653 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:10:15.655 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:10:22.096 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') limit ?, ? 
2020-03-28 02:10:22.097 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: python(String), 0(Integer), 10(Integer)
2020-03-28 02:10:22.098 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 02:10:22.099 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') 
2020-03-28 02:10:22.099 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: python(String)
2020-03-28 02:10:22.100 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:10:22.101 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:10:22.102 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={blogTitle=python}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"}],"pageSize":10,"params":{"blogTitle":"python"},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:10:22.117 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:10:27.579 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') limit ?, ? 
2020-03-28 02:10:27.580 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 测试(String), 0(Integer), 10(Integer)
2020-03-28 02:10:27.582 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 02:10:27.583 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 and blog_title like CONCAT('%',?,'%') 
2020-03-28 02:10:27.583 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 测试(String)
2020-03-28 02:10:27.584 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:10:27.586 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:10:27.586 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11)], params={blogTitle=测试}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{"blogTitle":"测试"},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:10:27.589 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:12:50.709 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:12:50.710 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:12:50.720 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:12:50.720 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:12:50.721 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:12:50.732 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:12:50.732 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:12:50.733 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:12:50.738 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:17:18.193 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:17:18.193 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:17:18.195 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:17:18.196 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:17:18.201 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:17:18.203 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:17:18.204 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 17(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:17:18.208 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:17:18.215 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:17:18.333 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:17:18.333 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:17:18.336 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:17:18.337 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:17:18.337 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:17:18.338 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:17:18.340 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:17:18.341 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:17:18.345 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:18:12.513 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:18:12.513 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:18:12.517 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:18:12.517 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:18:12.518 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:18:12.519 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:18:12.521 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:18:12.521 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:18:12.524 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:18:30.966 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:18:30.966 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:18:30.968 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:18:30.969 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:18:30.969 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:18:30.970 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:18:30.985 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:18:30.986 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:18:30.988 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:18:36.648 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:18:36.649 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:18:36.651 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:18:36.651 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:18:36.652 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:18:36.652 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:18:36.654 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:18:36.655 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:18:36.658 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:18:47.021 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_goods asc limit ?, ? 
2020-03-28 02:18:47.021 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:18:47.023 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:18:47.023 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:18:47.024 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:18:47.025 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:18:47.026 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:18:47.027 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:18:47.032 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:18:48.914 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read asc limit ?, ? 
2020-03-28 02:18:48.914 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:18:48.916 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:18:48.916 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:18:48.916 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:18:48.917 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:18:48.918 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:18:48.919 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:18:48.921 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:18:50.056 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:18:50.057 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:18:50.058 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:18:50.059 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:18:50.059 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:18:50.060 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:18:50.063 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:18:50.063 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:18:50.067 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:18:50.924 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection desc limit ?, ? 
2020-03-28 02:18:50.924 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:18:50.926 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:18:50.926 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:18:50.927 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:18:50.928 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:18:50.930 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:18:50.931 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=desc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:18:50.933 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:03.643 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:19:03.644 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:03.646 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:03.646 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:03.647 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:03.648 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:03.649 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:03.650 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:03.652 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:11.511 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:19:11.512 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:11.514 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:11.515 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:11.515 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:11.518 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:11.520 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:11.521 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:11.523 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:22.973 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:19:22.973 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:22.975 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:22.975 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:22.976 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:22.976 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:22.979 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:22.979 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:22.982 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:36.213 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_goods asc limit ?, ? 
2020-03-28 02:19:36.213 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:36.215 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:36.215 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:36.215 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:36.216 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:36.218 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:36.218 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:36.222 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:37.251 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read asc limit ?, ? 
2020-03-28 02:19:37.252 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:37.254 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:37.254 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:37.255 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:37.256 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:37.258 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:37.258 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:37.262 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:38.400 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:19:38.401 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:38.403 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:38.404 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:38.404 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:38.406 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:38.408 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:38.409 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:38.413 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:39.199 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:19:39.199 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:39.201 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:39.202 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:39.202 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:39.204 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:39.206 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:39.207 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:39.209 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:41.239 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:19:41.239 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:41.241 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:41.242 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:41.244 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:41.247 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:41.249 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:41.250 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:41.252 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:42.628 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:19:42.628 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:42.630 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:42.631 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:42.631 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:42.632 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:42.633 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:42.634 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:42.637 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:44.055 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:19:44.055 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:44.057 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:44.058 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:44.058 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:44.059 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:44.063 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:44.063 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:44.066 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:47.288 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:19:47.289 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:47.291 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:47.292 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:47.292 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:47.294 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:47.298 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:47.298 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:47.301 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:48.831 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:19:48.831 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:48.833 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:48.833 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:48.834 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:48.835 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:48.837 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:48.838 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:48.840 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:49.682 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:19:49.682 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:49.684 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:49.684 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:49.684 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:49.686 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:49.688 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:49.689 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:49.691 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:50.692 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read asc limit ?, ? 
2020-03-28 02:19:50.693 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:50.695 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:50.696 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:50.696 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:50.697 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:50.700 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:50.701 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:50.705 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:51.914 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_goods asc limit ?, ? 
2020-03-28 02:19:51.915 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:51.916 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:51.916 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:51.917 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:51.917 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:51.919 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:51.919 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:51.921 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:57.901 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_goods desc limit ?, ? 
2020-03-28 02:19:57.902 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:57.903 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:57.904 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:57.904 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:57.905 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:57.907 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:57.908 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:57.910 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:59.291 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read asc limit ?, ? 
2020-03-28 02:19:59.291 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:59.293 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:59.293 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:59.294 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:59.295 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:59.298 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:59.298 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:59.300 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:19:59.966 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:19:59.966 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:19:59.967 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:19:59.968 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:19:59.968 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:19:59.969 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:19:59.970 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:19:59.970 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:19:59.973 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:01.218 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:20:01.218 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:01.220 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:01.220 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:01.220 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:01.221 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:01.223 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:01.223 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:01.225 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:02.374 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:20:02.375 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:02.376 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:02.376 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:02.376 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:02.378 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:02.380 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:02.380 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:02.383 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:03.850 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:20:03.851 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:03.852 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:03.853 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:03.853 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:03.854 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:03.855 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:03.856 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:03.859 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:06.113 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:20:06.114 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:06.116 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:06.116 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:06.116 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:06.117 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:06.119 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:06.119 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:06.122 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:07.249 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:20:07.249 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:07.250 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:07.251 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:07.251 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:07.252 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:07.254 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:07.254 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:07.256 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:08.815 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:20:08.816 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:08.817 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:08.817 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:08.818 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:08.818 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:08.820 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:08.820 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:08.822 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:09.896 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:20:09.896 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:09.898 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:09.898 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:09.898 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:09.899 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:09.900 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:09.901 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:09.903 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:10.820 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read asc limit ?, ? 
2020-03-28 02:20:10.821 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:10.822 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:10.822 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:10.822 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:10.823 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:10.825 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:10.825 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:10.830 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:11.921 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_goods asc limit ?, ? 
2020-03-28 02:20:11.921 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:11.923 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:11.923 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:11.923 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:11.924 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:11.926 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:11.926 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:11.929 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:33.415 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:20:33.415 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:33.416 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:33.417 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:33.417 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:33.418 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:33.419 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:33.420 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:33.424 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:42.166 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:20:42.167 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:20:42.168 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:20:42.169 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:42.169 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:42.170 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:42.171 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:42.172 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:42.176 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:20:42.584 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:20:42.585 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:20:42.586 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:20:42.587 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:20:42.587 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:20:42.588 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:20:42.589 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:20:42.590 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:20:42.592 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:21:24.707 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:21:24.707 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:21:24.708 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:21:24.708 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:21:24.709 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:21:24.710 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:21:24.711 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:21:24.713 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:21:24.714 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:21:24.847 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:21:24.847 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:21:24.849 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:21:24.849 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:21:24.850 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:21:24.851 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:21:24.853 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:21:24.854 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:21:24.868 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:21:53.086 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:21:53.086 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:21:53.088 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:21:53.088 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:21:53.088 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:21:53.089 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:21:53.090 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:21:53.091 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:21:53.095 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:21:54.548 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:21:54.549 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:21:54.550 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:21:54.551 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:21:54.551 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:21:54.552 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:21:54.553 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:21:54.554 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:21:54.556 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:22:01.432 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:22:01.432 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:22:01.433 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:22:01.434 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:22:01.434 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:22:01.435 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:22:01.436 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:22:01.436 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:22:01.440 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:22:02.322 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:22:02.322 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:22:02.323 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:22:02.324 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:22:02.324 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:22:02.325 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:22:02.326 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:22:02.327 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:22:02.332 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:23:37.890 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:23:37.890 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:23:37.891 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:23:37.892 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:23:37.892 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:23:37.894 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:23:37.896 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:23:37.897 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:23:37.908 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:24:30.645 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:24:30.646 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:24:30.647 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:24:30.647 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:24:30.648 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:24:30.648 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:24:30.650 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:24:30.650 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:24:30.653 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:25:03.444 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:25:03.444 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:25:03.446 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:25:03.446 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:25:03.446 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:25:03.447 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:25:03.448 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:25:03.449 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:25:03.451 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:25:06.696 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:25:06.697 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:25:06.698 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:25:06.699 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:25:06.699 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:25:06.700 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:25:06.702 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:25:06.702 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:25:06.705 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:26:26.489 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:26:26.489 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:26:26.491 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:26:26.492 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:26:26.492 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:26:26.494 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:26:26.496 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:26:26.497 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:26:26.499 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:26:36.249 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:26:36.249 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:26:36.251 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:26:36.252 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:26:36.252 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:26:36.254 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:26:36.256 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:26:36.257 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:26:36.259 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:26:47.814 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:26:47.815 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:26:47.816 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:26:47.817 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:26:47.817 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:26:47.818 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:26:47.819 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:26:47.819 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:26:47.822 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:26:50.053 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:26:50.053 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:26:50.055 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:26:50.056 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:26:50.056 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:26:50.058 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:26:50.061 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:26:50.062 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:26:50.065 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:26:53.749 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:26:53.750 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:26:53.751 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:26:53.752 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:26:53.752 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:26:53.753 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:26:53.756 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:26:53.756 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:26:53.760 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:26:54.544 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:26:54.544 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:26:54.546 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:26:54.547 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:26:54.547 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:26:54.548 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:26:54.551 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:26:54.551 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:26:54.553 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:26:55.257 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:26:55.257 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:26:55.259 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:26:55.260 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:26:55.261 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:26:55.263 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:26:55.266 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:26:55.267 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:26:55.270 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:26:55.461 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:26:55.462 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:26:55.464 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:26:55.465 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:26:55.465 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:26:55.467 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:26:55.472 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:26:55.472 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:26:55.480 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:26:55.821 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:26:55.821 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:26:55.823 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:26:55.823 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:26:55.823 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:26:55.824 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:26:55.826 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:26:55.827 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:26:55.831 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:26:56.041 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:26:56.042 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:26:56.058 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:26:56.059 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:26:56.060 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:26:56.073 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:26:56.105 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:26:56.106 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 73(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:26:56.127 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:27:31.449 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:27:31.449 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:27:31.451 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:27:31.451 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:27:31.452 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:27:31.453 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:27:31.454 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:27:31.455 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:27:31.459 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:27:36.052 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:27:36.053 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:27:36.055 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:27:36.055 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:27:36.055 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:27:36.056 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:27:36.057 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:27:36.058 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:27:36.061 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:27:38.794 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:27:38.795 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:27:38.797 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:27:38.797 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:27:38.798 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:27:38.798 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:27:38.800 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:27:38.800 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:27:38.802 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:27:52.395 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:27:52.395 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:27:52.397 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:27:52.397 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:27:52.397 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:27:52.398 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:27:52.400 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:27:52.400 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:27:52.402 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:27:53.431 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:27:53.431 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:27:53.433 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:27:53.433 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:27:53.433 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:27:53.434 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:27:53.436 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:27:53.436 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:27:53.438 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:27.932 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:28:27.932 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:27.933 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:27.933 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:27.934 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:27.934 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:27.936 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:27.936 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:27.938 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:31.183 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:28:31.184 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:31.185 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:31.185 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:31.185 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:31.186 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:31.188 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:31.189 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:31.191 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:36.010 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:28:36.011 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:36.013 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:36.013 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:36.014 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:36.015 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:36.016 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:36.016 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:36.019 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:36.949 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:28:36.950 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:36.951 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:36.951 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:36.952 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:36.952 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:36.954 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:36.955 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:36.957 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:39.070 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:28:39.070 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:39.071 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:39.072 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:39.072 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:39.073 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:39.074 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:39.074 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:39.078 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:39.920 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:28:39.920 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:39.922 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:39.922 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:39.922 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:39.923 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:39.926 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:39.927 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:39.929 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:41.079 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:28:41.079 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:41.081 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:41.081 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:41.081 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:41.082 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:41.084 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:41.084 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:41.086 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:41.275 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:28:41.275 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:41.283 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:41.283 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:41.284 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:41.289 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:41.299 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:41.300 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 36(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:41.337 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:41.668 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:28:41.668 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:41.670 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:41.670 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:41.670 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:41.671 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:41.673 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:41.673 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:41.701 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:41.892 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:28:41.893 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:41.901 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:41.902 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:41.903 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:41.911 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:41.923 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:41.924 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 43(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:41.951 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:42.250 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:28:42.251 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:42.253 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:42.254 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:42.254 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:42.255 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:42.257 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:42.257 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:42.265 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:42.430 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:28:42.430 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:42.440 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:42.440 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:42.440 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:42.450 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:42.473 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:42.473 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 48(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:42.497 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:47.599 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:28:47.599 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:47.601 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:47.601 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:47.601 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:47.602 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:47.604 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:47.604 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:47.606 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:48.166 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:28:48.166 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:48.167 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:48.168 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:48.168 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:48.169 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:48.179 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:48.179 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:48.182 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:49.382 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:28:49.382 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:49.383 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:49.384 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:49.384 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:49.385 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:49.387 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:49.387 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:49.389 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:49.931 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:28:49.932 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:49.933 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:49.933 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:49.933 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:49.934 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:49.936 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:49.936 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:49.939 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:50.540 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:28:50.540 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:50.541 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:50.541 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:50.542 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:50.543 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:50.546 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:50.546 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:50.548 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:50.838 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:28:50.838 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:50.840 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:50.840 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:50.840 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:50.841 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:50.845 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:50.845 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:50.847 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:51.220 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:28:51.221 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:51.223 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:51.223 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:51.223 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:51.224 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:51.225 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:51.225 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:51.229 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:51.508 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:28:51.508 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:51.511 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:51.511 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:51.511 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:51.513 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:51.514 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:51.514 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:51.518 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:51.847 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:28:51.847 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:51.848 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:51.849 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:51.849 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:51.850 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:51.852 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:51.852 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:51.854 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:52.048 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:28:52.049 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:52.053 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:52.054 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:52.055 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:52.056 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:52.059 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:52.060 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:52.063 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:52.429 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:28:52.429 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:52.431 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:52.431 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:52.431 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:52.432 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:52.434 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:52.434 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:52.436 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:55.634 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:28:55.634 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:55.636 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:55.636 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:55.637 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:55.637 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:55.639 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:55.639 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:55.643 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:56.156 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:28:56.157 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:56.158 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:56.159 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:56.159 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:56.161 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:56.163 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:56.163 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:56.169 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:57.031 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:28:57.031 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:57.033 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:57.033 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:57.033 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:57.034 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:57.035 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:57.036 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:57.038 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:57.245 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:28:57.245 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:57.246 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:57.247 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:57.247 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:57.248 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:57.249 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:57.250 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:57.254 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:57.929 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:28:57.929 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:57.931 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:57.931 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:57.931 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:57.932 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:57.933 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:57.934 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:57.936 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:58.123 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:28:58.123 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:58.124 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:58.125 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:58.125 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:58.126 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:58.128 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:58.129 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:58.131 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:58.366 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:28:58.366 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:58.367 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:58.368 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:58.368 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:58.369 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:58.370 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:58.371 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:58.373 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:58.831 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:28:58.832 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:58.833 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:58.833 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:58.833 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:58.834 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:58.835 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:58.836 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:58.838 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:59.083 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:28:59.083 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:59.085 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:59.085 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:59.085 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:59.086 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:59.087 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:59.088 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:59.091 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:28:59.191 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:28:59.192 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:28:59.193 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:28:59.194 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:28:59.194 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:28:59.195 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:28:59.197 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:28:59.197 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:28:59.200 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:29:52.379 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:29:52.379 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:29:52.381 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:29:52.381 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:29:52.381 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:29:52.382 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:29:52.384 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:29:52.384 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:29:52.386 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:29:54.048 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:29:54.049 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:29:54.051 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:29:54.051 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:29:54.051 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:29:54.052 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:29:54.054 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:29:54.054 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:29:54.056 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:29:56.669 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:29:56.670 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:29:56.671 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:29:56.671 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:29:56.671 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:29:56.673 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:29:56.674 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:29:56.675 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:29:56.678 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:29:57.778 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:29:57.779 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:29:57.780 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:29:57.781 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:29:57.781 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:29:57.782 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:29:57.783 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:29:57.784 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:29:57.787 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:29:59.631 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:29:59.631 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:29:59.633 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:29:59.633 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:29:59.633 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:29:59.634 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:29:59.636 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:29:59.636 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:29:59.639 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:30:01.343 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:30:01.344 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:30:01.346 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:30:01.346 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:30:01.347 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:30:01.348 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:30:01.349 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:30:01.350 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 15:25:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 15:23:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 15:20:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:30:01.352 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:30:57.919 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_goods asc limit ?, ? 
2020-03-28 02:30:57.919 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:30:57.919 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:30:57.921 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:30:57.921 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:30:57.922 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:30:57.923 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:30:57.924 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试备注, blogComment=0, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 15:25:00), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 15:23:26), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 15:20:11), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:30:57.927 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:30:58.759 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_goods desc limit ?, ? 
2020-03-28 02:30:58.760 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:30:58.762 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:30:58.763 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:30:58.763 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:30:58.764 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:30:58.765 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:30:58.766 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:30:58.769 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:30:59.654 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read asc limit ?, ? 
2020-03-28 02:30:59.655 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:30:59.656 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:30:59.656 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:30:59.657 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:30:59.658 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:30:59.662 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:30:59.662 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:30:59.665 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:00.463 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read desc limit ?, ? 
2020-03-28 02:31:00.463 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:00.465 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:00.465 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:00.465 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:00.466 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:00.469 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:00.469 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:00.471 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:01.366 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:31:01.367 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:01.368 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:01.368 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:01.368 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:01.369 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:01.371 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:01.371 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:01.373 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:02.130 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection desc limit ?, ? 
2020-03-28 02:31:02.131 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:02.132 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:02.133 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:02.133 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:02.134 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:02.135 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:02.136 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_collection, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:02.138 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:03.262 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:31:03.262 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:03.263 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:03.263 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:03.264 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:03.264 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:03.266 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:03.267 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:03.269 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:04.005 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:31:04.005 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:04.006 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:04.007 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:04.007 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:04.008 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:04.010 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:04.011 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:04.014 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:05.683 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:31:05.684 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:05.685 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:05.685 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:05.685 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:05.686 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:05.688 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:05.689 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:05.691 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:06.643 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:31:06.644 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:06.646 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:06.646 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:06.646 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:06.647 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:06.649 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:06.649 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:06.651 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:07.188 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection desc limit ?, ? 
2020-03-28 02:31:07.189 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:07.190 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:07.190 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:07.191 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:07.191 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:07.194 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:07.195 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_collection, sortMethod=desc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:07.197 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:13.712 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:31:13.713 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:13.714 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:13.714 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:13.715 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:13.715 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:13.717 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:13.717 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:13.720 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:14.668 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:31:14.668 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:14.670 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:14.670 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:14.670 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:14.671 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:14.673 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:14.673 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:14.676 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:15.029 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:31:15.029 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:15.030 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:15.031 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:15.031 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:15.032 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:15.033 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:15.033 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:15.043 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:44.473 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:31:44.473 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:44.474 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:44.475 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:44.475 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:44.476 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:44.478 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:44.478 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:44.481 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:46.664 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection desc limit ?, ? 
2020-03-28 02:31:46.665 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:46.666 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:46.666 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:46.666 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:46.667 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:46.668 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:46.669 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_collection, sortMethod=desc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:46.671 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:54.985 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:31:54.985 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:54.987 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:54.987 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:54.987 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:54.988 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:54.989 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:54.990 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:54.992 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:57.373 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:31:57.373 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:57.375 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:57.376 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:57.376 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:57.377 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:57.379 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:57.379 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:57.382 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:31:58.987 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:31:58.987 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:31:58.989 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:31:58.989 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:31:58.990 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:31:58.990 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:31:58.993 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:31:58.993 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:31:58.996 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:28.700 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:32:28.700 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:28.702 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:28.702 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:28.702 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:28.703 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:28.705 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:28.705 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:28.707 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:29.502 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:32:29.502 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:29.504 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:29.505 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:29.505 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:29.506 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:29.508 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:29.508 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:29.512 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:30.605 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:32:30.605 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:30.606 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:30.607 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:30.607 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:30.608 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:30.611 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:30.611 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:30.613 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:31.216 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection desc limit ?, ? 
2020-03-28 02:32:31.216 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:31.218 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:31.218 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:31.218 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:31.220 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:31.221 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:31.222 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_collection, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:31.224 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:32.939 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_collection asc limit ?, ? 
2020-03-28 02:32:32.940 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:32.942 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:32.943 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:32.943 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:32.944 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:32.946 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:32.946 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:32.950 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:33.636 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read asc limit ?, ? 
2020-03-28 02:32:33.637 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:33.638 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:33.638 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:33.639 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:33.639 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:33.642 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:33.643 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:33.645 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:34.028 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read desc limit ?, ? 
2020-03-28 02:32:34.029 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:34.030 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:34.031 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:34.031 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:34.032 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:34.034 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:34.034 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:34.036 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:34.988 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read asc limit ?, ? 
2020-03-28 02:32:34.988 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:34.990 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:34.990 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:34.990 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:34.991 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:34.994 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:34.994 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:34.996 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:35.792 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_goods asc limit ?, ? 
2020-03-28 02:32:35.793 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:35.795 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:35.795 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:35.796 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:35.796 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:35.798 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:35.798 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:35.802 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:35.963 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_goods desc limit ?, ? 
2020-03-28 02:32:35.963 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:35.964 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:35.965 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:35.965 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:35.966 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:35.967 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:35.967 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:35.969 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:36.803 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_goods asc limit ?, ? 
2020-03-28 02:32:36.804 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:36.805 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:36.805 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:36.805 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:36.806 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:36.808 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:36.808 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:36.812 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:45.221 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:32:45.221 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:45.223 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:45.223 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:45.223 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:45.224 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:45.228 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:45.229 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:45.232 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:45.771 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:32:45.771 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:45.772 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:45.773 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:45.773 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:45.774 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:45.776 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:45.776 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:45.779 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:49.318 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:49.319 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:49.322 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:49.324 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:32:49.324 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:32:49.329 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:32:49.330 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:49.330 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:49.333 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:49.463 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:32:49.463 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:49.465 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:49.466 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:49.466 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:49.467 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:49.470 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:49.471 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:49.480 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:50.745 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:32:50.745 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:50.747 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:50.747 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:50.747 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:50.748 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:50.749 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:50.750 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:50.753 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:51.645 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment desc limit ?, ? 
2020-03-28 02:32:51.645 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:51.647 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:51.647 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:51.647 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:51.649 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:51.650 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:51.650 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:51.653 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:32:53.080 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_comment asc limit ?, ? 
2020-03-28 02:32:53.080 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:32:53.082 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:32:53.082 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:32:53.083 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:32:53.083 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:32:53.085 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:32:53.085 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 16:27:27), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":0,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 16:27:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:32:53.087 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:33:45.239 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:33:45.240 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:33:45.240 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:33:45.240 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:33:45.241 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:33:45.242 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:33:45.243 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:33:45.245 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:33:45.246 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:33:45.381 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:33:45.381 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:33:45.395 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:33:45.395 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:33:45.396 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:33:45.400 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:33:45.402 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:33:45.403 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 23(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:33:45.406 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:33:50.269 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read asc limit ?, ? 
2020-03-28 02:33:50.269 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:33:50.270 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:33:50.271 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:33:50.271 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:33:50.272 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:33:50.273 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:33:50.273 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=blog_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:33:50.276 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:33:51.700 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by blog_read desc limit ?, ? 
2020-03-28 02:33:51.700 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:33:51.702 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:33:51.703 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:33:51.703 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:33:51.704 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:33:51.705 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:33:51.705 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:33:51.708 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:34:57.903 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:34:57.903 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:34:57.904 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:34:57.905 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:34:57.905 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:34:57.906 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:34:57.908 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:34:57.908 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:34:57.911 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:14.928 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:35:14.929 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:14.930 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:14.930 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:14.931 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:14.931 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:14.933 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:14.933 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:14.935 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:15.510 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:35:15.511 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:15.512 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:15.513 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:15.513 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:15.514 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:15.515 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:15.515 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:15.518 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:17.536 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:35:17.537 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:17.538 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:17.538 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:17.539 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:17.539 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:17.541 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:17.542 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:17.545 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:18.393 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:35:18.394 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:18.395 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:18.397 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:18.397 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:18.397 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:18.398 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:18.399 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:18.401 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:19.335 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:35:19.335 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:19.336 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:19.337 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:19.337 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:19.338 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:19.339 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:19.339 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:19.343 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:19.731 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:35:19.731 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:19.732 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:19.732 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:19.733 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:19.734 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:19.736 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:19.736 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:19.738 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:20.143 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:35:20.143 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:20.145 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:20.145 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:20.145 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:20.146 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:20.148 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:20.148 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:20.150 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:20.345 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:35:20.346 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:20.350 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:20.351 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:20.352 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:20.364 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:20.377 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:20.377 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 35(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:20.404 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:20.754 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:35:20.754 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:20.756 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:20.756 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:20.756 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:20.757 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:20.760 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:20.760 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:20.763 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:20.974 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:35:20.975 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:20.982 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:20.983 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:20.984 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:20.985 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:20.987 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:20.987 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 20(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:20.990 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:21.452 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:35:21.452 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:21.454 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:21.455 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:21.455 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:21.456 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:21.457 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:21.458 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:21.462 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:30.349 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:35:30.349 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:30.351 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:30.351 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:30.351 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:30.352 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:30.354 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:30.354 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:30.356 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:34.554 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:35:34.555 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:34.556 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:34.557 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:34.557 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:34.559 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:34.561 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:34.562 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:34.564 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:36.622 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:35:36.622 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:36.624 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:36.624 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:36.624 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:36.626 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:36.629 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:36.629 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:36.631 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:37.381 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:35:37.381 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:37.382 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:37.383 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:37.383 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:37.384 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:37.385 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:37.386 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:37.388 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:38.335 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:35:38.336 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:38.338 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:38.338 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:38.338 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:38.339 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:38.341 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:38.342 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:38.346 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:38.723 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:35:38.724 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:38.725 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:38.726 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:38.726 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:38.731 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:38.737 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:38.737 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:38.740 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:39.662 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:35:39.662 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:39.664 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:39.664 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:39.664 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:39.665 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:39.666 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:39.667 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:39.669 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:40.305 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 02:35:40.306 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:40.307 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:40.307 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:40.307 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:40.308 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:40.311 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:40.311 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:40.314 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:35:41.036 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:35:41.036 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:35:41.037 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:35:41.038 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:35:41.038 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:35:41.039 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:35:41.040 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:35:41.040 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:35:41.044 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:37:19.312 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 02:37:19.313 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 02:37:19.314 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 02:37:19.315 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:37:19.315 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:37:19.317 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:37:42.045 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:37:42.045 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:37:42.046 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:37:42.047 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:37:42.047 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:37:42.049 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:37:42.049 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:37:42.049 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:37:42.055 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:37:42.135 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 02:37:42.136 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 02:37:42.137 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 02:37:42.138 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:37:42.138 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:37:42.154 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:37:45.431 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:37:45.432 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:37:45.432 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:37:45.432 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:37:45.433 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:37:45.434 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:37:45.434 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:37:45.435 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:37:45.438 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:37:45.810 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 02:37:45.810 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 02:37:45.811 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 02:37:45.812 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:37:45.812 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:37:45.817 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:37:47.372 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:37:47.372 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:37:47.374 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:37:47.375 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:37:47.375 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:37:47.376 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:37:47.378 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:37:47.378 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:37:47.381 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:38:21.883 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 02:38:21.883 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 02:38:21.884 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 02:38:21.885 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:38:21.885 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:38:21.887 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:38:27.088 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:38:27.088 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:38:27.089 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:38:27.090 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:38:27.090 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:38:27.090 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:38:27.093 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:38:27.093 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:38:27.096 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:38:28.080 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 02:38:28.080 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 02:38:28.082 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 02:38:28.082 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:38:28.083 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:38:28.084 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:38:42.005 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:38:42.006 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:38:42.006 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:38:42.006 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:38:42.007 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:38:42.009 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:38:42.010 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:38:42.022 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:38:42.024 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:38:50.018 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:38:50.018 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:38:50.018 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:38:50.018 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:38:50.019 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:38:50.020 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:38:50.020 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:38:50.021 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:38:50.023 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:38:59.016 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:38:59.016 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:38:59.016 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:38:59.017 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:38:59.018 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:38:59.018 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:38:59.019 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:38:59.019 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:38:59.021 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:08.543 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:08.543 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:39:08.543 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:08.543 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:39:08.545 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:39:08.546 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:08.547 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:08.547 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:08.550 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:33.599 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:39:33.599 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:33.599 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:39:33.600 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:33.601 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:39:33.601 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:33.602 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:33.602 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:33.605 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:38.471 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:39:38.471 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:39:38.471 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:38.472 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:38.472 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:39:38.473 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:38.474 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:38.475 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:38.477 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:41.473 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 02:39:41.473 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 02:39:41.474 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 02:39:41.475 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:41.476 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:41.478 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:43.303 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:39:43.304 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:39:43.305 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:39:43.305 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:39:43.306 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:39:43.306 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:39:43.308 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:43.309 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:43.311 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:44.414 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 02:39:44.415 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 02:39:44.415 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 02:39:44.416 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:44.416 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:44.421 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:46.992 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 02:39:46.992 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 02:39:46.994 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 02:39:46.995 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:46.995 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:46.997 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:39:48.725 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:39:48.725 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:39:48.727 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:39:48.727 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:39:48.728 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:39:48.729 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:39:48.730 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:39:48.730 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:39:48.733 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:40:05.015 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 02:40:05.015 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 02:40:05.017 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 02:40:05.017 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:40:05.018 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:40:05.019 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:40:05.486 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:40:05.487 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:40:05.488 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:40:05.488 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:40:05.489 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:40:05.489 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:40:05.491 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:40:05.492 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:40:05.495 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:41:07.793 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:41:07.794 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:41:07.797 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:41:07.797 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:41:07.798 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:41:07.800 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:41:07.802 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:41:07.802 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:41:07.804 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:41:07.946 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:41:07.947 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:41:07.948 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:41:07.949 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:41:07.949 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:41:07.950 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:41:07.953 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:41:07.953 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:41:07.961 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:41:35.144 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:41:35.145 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:41:35.146 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:41:35.147 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:41:35.148 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:41:35.148 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:41:35.149 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:41:35.149 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:41:35.156 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:41:35.289 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 02:41:35.289 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:41:35.291 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 02:41:35.291 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 02:41:35.292 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:41:35.294 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:41:35.295 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:41:35.296 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:41:35.299 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:41:54.130 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:41:54.130 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:41:54.130 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:41:54.131 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:41:54.132 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:41:54.133 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:41:54.133 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:41:54.133 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:41:54.136 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:44:01.839 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:44:01.840 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:44:01.842 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:44:01.844 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:44:01.844 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:44:01.847 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:46:29.643 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:46:29.643 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:46:29.644 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:46:29.645 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:46:29.646 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:46:29.647 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:46:29.647 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:46:29.651 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:46:29.651 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:46:29.810 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:46:29.812 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:46:29.817 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:46:29.818 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:46:29.818 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:46:29.819 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:46:29.822 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:46:29.823 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 22(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:46:29.828 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:48:30.299 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:48:30.300 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:48:30.300 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:48:30.301 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:48:30.301 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:48:30.301 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:48:30.302 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:48:30.302 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:48:30.304 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:48:30.634 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:48:30.635 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:48:30.636 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:48:30.636 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:48:30.636 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:48:30.637 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:48:30.637 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:48:30.638 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:48:30.640 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:48:37.638 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:48:37.638 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:48:37.639 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:48:37.642 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:48:37.642 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:48:37.645 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:48:37.646 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:48:37.649 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:48:37.649 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:48:37.794 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:48:37.794 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:48:37.796 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:48:37.796 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:48:37.796 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:48:37.798 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:48:37.799 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:48:37.799 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:48:37.802 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:48:54.249 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:48:54.249 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:48:54.260 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:48:54.260 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:48:54.265 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:48:54.266 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:48:54.266 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:48:54.266 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:48:54.273 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:48:54.410 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:48:54.410 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:48:54.413 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:48:54.413 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:48:54.413 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:48:54.414 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:48:54.415 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:48:54.415 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:48:54.417 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:51:02.379 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:51:02.380 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:51:02.381 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:51:02.381 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:51:02.381 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:51:02.382 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:51:02.383 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:51:02.383 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:51:02.385 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:51:47.405 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:51:47.405 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:51:47.407 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:51:47.408 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:51:47.409 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:51:47.410 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:51:47.410 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:51:47.411 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:51:47.413 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:53:29.683 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:53:29.684 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:53:29.684 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:53:29.685 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:53:29.697 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:53:29.698 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:53:29.699 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:53:29.713 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:53:29.713 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:53:33.833 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:53:33.834 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=about_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 1(Long), {"code":40005,"msg":"排序参数不合法"}(String), 127.0.0.1(String)
2020-03-28 02:53:33.837 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:53:35.836 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by about_read asc limit ?, ? 
2020-03-28 02:53:35.836 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:53:35.837 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:53:35.838 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:53:35.838 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:53:35.839 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:53:35.840 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:53:35.840 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=about_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"},{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"}],"pageSize":10,"params":{},"sortColumn":"about_read","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:53:35.844 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:53:36.092 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:53:36.093 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=测试关于3, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:24, updateTime=2020-03-26 14:32:24, version=null, enable=0, deleted=null), About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null)], params={}, sortColumn=about_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 1(Long), {"code":40005,"msg":"排序参数不合法"}(String), 127.0.0.1(String)
2020-03-28 02:53:36.095 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:53:36.653 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:53:36.654 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=测试关于3, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:24, updateTime=2020-03-26 14:32:24, version=null, enable=0, deleted=null), About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null)], params={}, sortColumn=about_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 1(Long), {"code":40005,"msg":"排序参数不合法"}(String), 127.0.0.1(String)
2020-03-28 02:53:36.657 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:53:59.667 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:53:59.668 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:53:59.669 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:53:59.669 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:53:59.670 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:53:59.670 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:53:59.671 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:53:59.671 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:53:59.675 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:54:14.077 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:54:14.078 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=测试关于3, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:24, updateTime=2020-03-26 14:32:24, version=null, enable=0, deleted=null)], params={}, sortColumn=about_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 1(Long), {"code":40005,"msg":"排序参数不合法"}(String), 127.0.0.1(String)
2020-03-28 02:54:14.080 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:54:16.064 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by about_read asc limit ?, ? 
2020-03-28 02:54:16.065 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:54:16.066 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:54:16.066 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:54:16.067 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:54:16.068 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:54:16.068 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:54:16.069 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=测试关于3, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:24, updateTime=2020-03-26 14:32:24, version=null, enable=0, deleted=null)], params={}, sortColumn=about_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"},{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"}],"pageSize":10,"params":{},"sortColumn":"about_read","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:54:16.071 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:54:17.676 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:54:17.676 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=测试关于3, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:24, updateTime=2020-03-26 14:32:24, version=null, enable=0, deleted=null), About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null)], params={}, sortColumn=about_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 2(Long), {"code":40005,"msg":"排序参数不合法"}(String), 127.0.0.1(String)
2020-03-28 02:54:17.678 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:54:18.836 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:54:18.836 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=测试关于3, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:24, updateTime=2020-03-26 14:32:24, version=null, enable=0, deleted=null), About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null)], params={}, sortColumn=about_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 1(Long), {"code":40005,"msg":"排序参数不合法"}(String), 127.0.0.1(String)
2020-03-28 02:54:18.838 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:54:21.211 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 02:54:21.211 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:54:21.212 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:54:21.213 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:54:21.213 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:54:21.213 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:54:21.214 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:54:21.214 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=测试关于3, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:24, updateTime=2020-03-26 14:32:24, version=null, enable=0, deleted=null), About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:54:21.216 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:54:24.213 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 02:54:24.213 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:54:24.215 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:54:24.215 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:54:24.215 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:54:24.216 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:54:24.216 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:54:24.217 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=测试关于3, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:24, updateTime=2020-03-26 14:32:24, version=null, enable=0, deleted=null)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:54:24.220 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:54:25.762 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 02:54:25.762 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:54:25.763 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:54:25.763 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:54:25.764 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:54:25.765 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:54:25.766 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:54:25.766 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=4, aboutTitle=测试关于3, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:24, updateTime=2020-03-26 14:32:24, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:54:25.768 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:54:42.732 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:54:42.732 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:54:42.734 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:54:42.735 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:54:42.735 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:54:42.736 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:54:42.737 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:54:42.737 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:54:42.742 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:54:51.445 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:54:51.445 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:54:51.446 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:54:51.447 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:54:51.447 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:54:51.448 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:54:51.448 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:54:51.449 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:54:51.451 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:55:01.246 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:55:01.246 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:55:01.247 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:55:01.248 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:55:01.248 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:55:01.249 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:55:01.249 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:55:01.250 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:55:01.252 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:55:29.804 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:55:29.805 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:55:29.806 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:55:29.807 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:55:29.807 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:55:29.808 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:55:29.809 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:55:29.810 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:55:29.813 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:55:39.228 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:55:39.228 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:55:39.229 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:55:39.230 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:55:39.230 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:55:39.231 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:55:39.232 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:55:39.232 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:55:39.236 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:56:37.396 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:56:37.396 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:56:37.398 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:56:37.398 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:56:37.398 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:56:37.399 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:56:37.400 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:56:37.400 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:56:37.402 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:56:38.589 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:56:38.589 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:56:38.598 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:56:38.603 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 02:56:38.603 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 02:56:38.605 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 02:56:38.607 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:56:38.608 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:56:38.615 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:56:38.889 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:56:38.890 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:56:38.892 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 02:56:38.893 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:56:38.893 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:56:38.894 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:56:38.894 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:56:38.895 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:56:38.897 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:58:13.771 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.deleteById.debug:143 -==>  Preparing: update bl_about set deleted = 1 where about_id = ? 
2020-03-28 02:58:13.771 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.deleteById.debug:143 -==> Parameters: 4(Integer)
2020-03-28 02:58:13.775 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.deleteById.debug:143 -<==    Updates: 1
2020-03-28 02:58:13.776 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:58:13.776 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/delete/4(String), [4](String), 1(Integer), null, DELETE(String), 8(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-03-28 02:58:13.778 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:58:14.009 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 02:58:14.009 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 02:58:14.011 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 02:58:14.011 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 02:58:14.011 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 02:58:14.012 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 02:58:14.012 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:58:14.013 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=测试关于3, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:24, updateTime=2020-03-26 14:32:24, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:58:14.015 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 02:58:34.953 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.save.debug:143 -==>  Preparing: insert into bl_about(about_title, about_content) values( ?, ? ) 
2020-03-28 02:58:34.953 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.save.debug:143 -==> Parameters: 测试新的(String), null
2020-03-28 02:58:35.008 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 02:58:35.008 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=测试新的, aboutContent=null, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":4,"aboutRead":0,"aboutTitle":"测试关于3","createdTime":"2020-03-26 14:32:24","enable":0,"updateTime":"2020-03-26 14:32:24"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 02:58:35.011 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:00:48.293 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:00:48.293 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:00:48.294 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:00:48.294 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:00:48.296 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:00:48.296 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:00:48.297 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:00:48.298 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:00:48.301 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:00:48.719 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:00:48.719 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:00:48.720 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 03:00:48.720 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:00:48.720 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:00:48.721 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:00:48.722 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:00:48.723 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:00:48.726 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:22.525 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.save.debug:143 -==>  Preparing: insert into bl_about(about_title, about_content) values( ?, ? ) 
2020-03-28 03:01:22.525 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.save.debug:143 -==> Parameters: 关于我的(String), <p>学习</p>(String)
2020-03-28 03:01:22.527 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:22.528 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:01:22.529 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=关于我的, aboutContent=<p>学习</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-03-28 03:01:22.530 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:22.777 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:01:22.777 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:01:22.778 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 03:01:22.778 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:01:22.778 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:01:22.779 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:01:22.780 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:01:22.780 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:01:22.783 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:28.384 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:01:28.385 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:01:28.387 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:28.395 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:01:28.395 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:01:28.396 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:01:28.397 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:01:28.397 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:01:28.399 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:28.817 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:01:28.817 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:01:28.818 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 03:01:28.819 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:01:28.819 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:01:28.820 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:01:28.820 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:01:28.820 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:01:28.824 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:45.686 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.save.debug:143 -==>  Preparing: insert into bl_about(about_title, about_content) values( ?, ? ) 
2020-03-28 03:01:45.686 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.save.debug:143 -==> Parameters: 学习(String), <p>怎么了</p>(String)
2020-03-28 03:01:45.690 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:45.691 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:01:45.691 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=学习, aboutContent=<p>怎么了</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-03-28 03:01:45.693 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:45.936 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:01:45.936 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:01:45.938 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:01:45.939 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:01:45.939 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:01:45.940 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:01:45.941 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:01:45.942 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":7,"aboutRead":0,"aboutTitle":"学习","createdTime":"2020-03-27 19:01:44","enable":0,"updateTime":"2020-03-27 19:01:44"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:01:45.944 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:58.277 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.deleteById.debug:143 -==>  Preparing: update bl_about set deleted = 1 where about_id = ? 
2020-03-28 03:01:58.277 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.deleteById.debug:143 -==> Parameters: 7(Integer)
2020-03-28 03:01:58.279 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.deleteById.debug:143 -<==    Updates: 1
2020-03-28 03:01:58.280 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:01:58.280 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/delete/7(String), [7](String), 1(Integer), null, DELETE(String), 3(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-03-28 03:01:58.281 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:01:58.528 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:01:58.528 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:01:58.529 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 03:01:58.529 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:01:58.530 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:01:58.530 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:01:58.531 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:01:58.531 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=7, aboutTitle=学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:44, updateTime=2020-03-27 19:01:44, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:01:58.533 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:02:11.293 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.save.debug:143 -==>  Preparing: insert into bl_about(about_title, about_content) values( ?, ? ) 
2020-03-28 03:02:11.293 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.save.debug:143 -==> Parameters: 我爱学习(String), null
2020-03-28 03:02:11.295 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:02:11.296 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=我爱学习, aboutContent=null, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:02:11.299 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:02:17.207 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.save.debug:143 -==>  Preparing: insert into bl_about(about_title, about_content) values( ?, ? ) 
2020-03-28 03:02:17.208 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.save.debug:143 -==> Parameters: 我爱学习(String), <p>怎么了是啊</p>(String)
2020-03-28 03:02:17.210 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:02:17.211 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:02:17.212 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=我爱学习, aboutContent=<p>怎么了是啊</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-03-28 03:02:17.214 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:02:17.534 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:02:17.534 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:02:17.535 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:02:17.535 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:02:17.536 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:02:17.536 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:02:17.537 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:02:17.537 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:02:17.541 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:02:21.528 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:02:21.528 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:02:21.529 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:02:21.530 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:02:21.530 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:02:21.531 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:02:22.865 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:02:22.867 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:02:22.867 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:02:22.973 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:02:22.974 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:02:22.975 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:02:22.976 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:02:22.977 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:02:22.978 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:02:22.979 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:02:22.979 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:02:22.982 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:05:27.273 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:05:27.274 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:05:27.275 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:05:27.275 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:05:27.279 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:05:27.280 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:05:27.281 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), GET(String), 12(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:05:27.285 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:05:27.287 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:05:27.605 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:05:27.606 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:05:27.607 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:05:27.608 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:05:27.609 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:05:27.609 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:05:27.610 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:05:27.610 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-26 14:50:26"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:05:27.612 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:05:32.631 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:05:32.631 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 2(Integer)
2020-03-28 03:05:32.634 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:05:32.634 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:05:32.635 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/2(String), [2](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","updateTime":"2020-03-26 14:50:10","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:05:32.637 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:05:45.028 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:05:45.028 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:05:45.029 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:05:45.030 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:05:45.030 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), GET(String), 2(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":1,"aboutRead":3,"aboutTitle":"更新","createdTime":"2020-03-26 14:32:05","updateTime":"2020-03-26 14:50:26","version":8},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:05:45.033 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:05:57.533 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? where about_id = ? and version = ? 
2020-03-28 03:05:57.533 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -==> Parameters: 学习让人进步(String), 内容(String), 3(Integer), 1(Integer), 8(Integer)
2020-03-28 03:05:57.535 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -<==    Updates: 1
2020-03-28 03:05:57.536 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:05:57.536 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/update(String), [About(aboutId=1, aboutTitle=学习让人进步, aboutContent=内容, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=8, enable=null, deleted=null)](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"修改成功"}(String), 127.0.0.1(String)
2020-03-28 03:05:57.539 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:05:57.785 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:05:57.785 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:05:57.786 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:05:57.786 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:05:57.787 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:05:57.787 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:05:57.789 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:05:57.789 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=更新, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-26 14:50:26, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:05:56"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:05:57.792 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:06:21.995 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:06:21.996 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:06:21.996 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:06:21.997 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:06:21.997 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","updateTime":"2020-03-27 19:05:56","version":9},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:06:22.000 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:07:27.750 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:07:27.750 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:07:27.752 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:07:27.752 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:07:27.753 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:07:27.753 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:07:27.756 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:07:27.757 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:07:27.759 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:07:54.685 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:07:54.685 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:07:54.686 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:07:54.687 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:07:54.688 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:07:54.689 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:07:54.692 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:07:54.692 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:07:54.695 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:08:04.387 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:08:04.387 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:08:04.393 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:08:04.396 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:08:04.397 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:08:04.398 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:08:04.399 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:08:04.399 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:08:04.402 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:08:04.693 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:08:04.694 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:08:04.696 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:08:04.696 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:08:04.696 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:08:04.697 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:08:04.699 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:08:04.699 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:08:04.702 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:08:49.044 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:08:49.044 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:08:49.047 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:08:49.048 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:08:49.048 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:08:49.049 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:08:49.051 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:08:49.051 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:08:49.054 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:08:52.686 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:08:52.686 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:08:52.688 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:08:52.689 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:08:52.689 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:08:52.691 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:08:52.693 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:08:52.694 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:08:52.696 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:10:55.821 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:10:55.822 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:10:55.824 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:10:55.825 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:10:55.825 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:10:55.826 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:10:55.828 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:10:55.828 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:10:55.831 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:10:56.512 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:10:56.513 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:10:56.524 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:10:56.524 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:10:56.526 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:10:56.527 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:10:56.527 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:10:56.538 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:10:56.536 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:10:56.699 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:10:56.699 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:10:56.701 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:10:56.702 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:10:56.702 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:10:56.703 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:10:56.707 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:10:56.708 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:10:56.712 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:10:58.685 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:10:58.686 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 03:10:58.689 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:10:58.693 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:10:58.694 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:10:58.697 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:11:12.218 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:11:12.219 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556672912306176(String)
2020-03-28 03:11:12.220 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:11:12.222 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:11:12.222 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556672912306176(String), [1243556672912306176](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># 统计每个字符出现的次数<br />1. 随机生成100个小写字符并将其放入一个字符数组中<br />2. 对数组中每个字母出现的次数进行计数：创建一个具有26个int值得数组counts，每个值存放每个字母出现的次数。<br />```java<br />package com.ybs.practice;<br />/**<br />* @Description 类描述：<br />* @ClassName 类名称：<br />* @author yb.w<br />* @version 创建时间：2019年7月4日 下午2:14:00<br />*/<br />public class CountLettersInArray {<br />public static void main(String[] args) {<br />// Declare and create an array<br />char[] chars = createArray();<br /><br />// Display the array<br />displayArray(chars);<br /><br />// Count the occurrences of each letter<br />int[] counts = countLetters(chars);<br /><br />// Display counts<br />System.out.println(\"The occurrences of each letter are:\");<br />displayCounts(counts);<br />}<br /><br />private static char[] createArray() {<br />char[] chars = new char[100];<br /><br />for(int i = 0; i &lt; chars.length; i++)<br />chars[i] = getRandomLowerCaseLetter();<br /><br />return chars;<br />}<br /><br />private static void displayArray(char[] chars) {<br />// Display the characters in the array 20 on each line<br />for (int i = 0; i &lt; chars.length; i++) {<br />if((i+1) % 20 == 0)<br />System.out.println(chars[i]);<br />else<br />System.out.print(chars[i] + \" \");<br />}<br />}<br /><br />private static int[] countLetters(char[] chars) {<br />int[] counts = new int[26];<br /><br />for(int i = 0; i &lt; chars.length; i++) {<br />counts[chars[i] - 'a']++; // 'b' - 'a' = 1<br />}<br />return counts;<br />}<br /><br />private static void displayCounts(int[] counts) {<br />for(int i = 0; i &lt; counts.length; i++) {<br />if((i+1)%10 == 0)<br />System.out.println((char)(i + 'a') + \":\" + counts[i]);<br />else<br />System.out.print((char)(i + 'a') + \":\" + counts[i] + \" \");</p>\n<p>}<br />}<br /><br />public static char getRandomCharacter(char ch1, char ch2) {<br />return (char)(ch1 + Math.random() * (ch2 - ch1 + 1));<br />}</p>\n<p>public static char getRandomLowerCaseLetter() {<br />return getRandomCharacter('a', 'z');<br />}<br />}</p>\n<p>```<br /># 结果<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190704145015500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTM0MTA3,size_16,color_FFFFFF,t_70)</p>","blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","blogType":6,"createdTime":"2020-03-27 15:13:09","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:11:12.225 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:11:23.206 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:11:23.206 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:11:23.206 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:11:23.206 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:11:23.208 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:11:23.208 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:11:23.208 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:11:23.209 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:11:23.211 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:11:23.339 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:11:23.339 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:11:23.341 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:11:23.342 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:11:23.342 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:11:23.343 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:11:23.345 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:11:23.345 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:11:23.347 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:12:07.141 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:12:07.141 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:12:07.142 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:12:07.142 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:12:07.143 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:12:07.143 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:12:07.145 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:12:07.145 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:12:07.147 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:13:06.686 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:13:06.687 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:13:06.689 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:13:06.691 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:13:06.691 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:13:06.693 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:13:06.694 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:13:06.698 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:13:06.699 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:13:07.000 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:13:07.000 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:13:07.001 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:13:07.002 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:13:07.002 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:13:07.003 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:13:07.006 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:13:07.007 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:13:07.009 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:14:01.381 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:14:01.382 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:14:01.383 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:14:01.384 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:14:01.384 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:14:01.385 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:14:01.386 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:14:01.387 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:14:01.390 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:14:13.701 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:14:13.701 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:14:13.703 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:14:13.704 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:14:13.704 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:14:13.705 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:14:13.708 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:14:13.708 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:14:13.710 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:14:18.164 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:14:18.165 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 03:14:18.166 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:14:18.167 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:14:18.167 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:14:18.170 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:14:26.745 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:14:26.745 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:14:26.747 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:14:26.747 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:14:26.748 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:14:26.749 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:14:26.750 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:14:26.751 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:14:26.755 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:14:26.896 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:14:26.897 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:14:26.898 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:14:26.899 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:14:26.899 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:14:26.900 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:14:26.902 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:14:26.902 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:14:26.905 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:14:29.205 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:14:29.206 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 03:14:29.207 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:14:29.208 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:14:29.209 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), GET(String), 5(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:14:29.211 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:14:58.806 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:14:58.806 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:14:58.806 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:14:58.807 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:14:58.808 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:14:58.809 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:14:58.809 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:14:58.810 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:14:58.811 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:14:59.129 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:14:59.130 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:14:59.131 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:14:59.131 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:14:59.131 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:14:59.132 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:14:59.134 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:14:59.134 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:14:59.136 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:15:00.877 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:15:00.877 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556486165114880(String)
2020-03-28 03:15:00.879 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:15:00.879 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:15:00.880 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556486165114880(String), [1243556486165114880](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># SpringCloud 常识知识<br />springcloud 基础项目 github `https://github.com/ybsdegit/SpringCloud`<br />- springboot 与 Springcloud 关系<br />1、springboot 专注于快速方便的构建个体微服务框架<br />2、springcloud 专注于服务治理<br />3、dubbo的定位是一款RPC框架，<br />4、Spring Cloud的目标是微服务下的一站式解决方案</p>\n<p>- 服务熔断，服务降级</p>\n<p><br />## eureka 与 zookeeper 区别</p>\n<p>- CAP 原则<br />- C 强一致性<br />- A 可用性<br />- P 分区容错性</p>\n<p>- ACID<br />- 原子性，一致性，隔离性，持久性</p>\n<p>- **Zookeeper 保证的是CP**<br />- 失去master节点，引起故障<br />- **Eureka 保证的是AP**<br />- 很好的应对因网络故障导致部分节点失去联系的情况，而不会想 zookeeper 那样使整个服务崩掉<br />- 使用RestTemplate 进行服务之间调用<br />```java<br />@RestController<br />public class DeptConsumerController {<br />// 消费者，不应该有 service 层<br />// 提供多种便捷访问远程http服务的方法，简单的restful服务模板<br />// url<br />// 实体 Map<br />// responseType<br />@Autowired<br />private RestTemplate restTemplate;</p>\n<p>private static final String REST_URL_PREFIX = \"http://localhost:8001\";</p>\n<p>@PostMapping(\"/consumer/dept/add\")<br />public boolean add(Dept dept){<br />return restTemplate.postForObject(REST_URL_PREFIX + \"/dept/add\", dept, Boolean.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/get/{id}\")<br />public Dept get(@PathVariable Long id){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/get/\"+id, Dept.class);<br />}</p>\n<p>@GetMapping(\"/consumer/dept/list\")<br />public List&lt;Dept&gt; list(){<br />return restTemplate.getForObject(REST_URL_PREFIX + \"/dept/list\", List.class);<br />}</p>\n<p><br />}</p>\n<p>```</p>\n<p><br />- eureka</p>\n<p><br />1、服务端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br />server:<br />port: 7001<br />eureka:<br />instance:<br />hostname: localhost # Eureka 服务端的实例名车<br />client:<br />register-with-eureka: false # 是否向 Eureka 注册中心注册自己<br />fetch-registry: false # 如果为 false，表示自己为注册中心<br />service-url: # 监控页面<br />defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/<br />```</p>\n<p>- 启动类添加注解<br />@EnableEurekaServer</p>\n<p><br />2、客户端<br />- &lt;!--导包--&gt;<br />```<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;!--完善监控信息--&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;<br />&lt;/dependency&gt;<br />```<br />- 配置文件<br /><br />```<br /># Eureka 配置，服务注册地址<br />eureka:<br />client:<br />service-url:<br />defaultZone: http://localhost:7001/eureka/<br /><br /># info 配置<br />info:<br />app.name: Paulson-springcloud<br />company.name: ybs<br />```<br />- 启动类添加注解<br />@EnableEurekaClient // 在服务启动后自动注册到eureka中</p>\n<p>&nbsp;</p>\n<p><br />## Ribbon 负载均衡<br />进程内LB<br />LoadBalance （LB，负载均衡）将用户的请求平摊的分配到多个服务上<br />- 常见的负载均衡：Ngix, Lvs <br />- 轮询<br />- 随机</p>\n<p>1、导包<br />```<br />&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;<br />&lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;<br />&lt;version&gt;1.4.7.RELEASE&lt;/version&gt;<br />&lt;/dependency&gt;</p>\n<p>```</p>\n<p>2、配置类<br />```java<br />@Configuration<br />public class ConfigBean {</p>\n<p>// 配置负载均衡实现 RestTemplate<br />@Bean<br />@LoadBalanced // Ribbon<br />public RestTemplate getRestTemplate(){<br />return new RestTemplate();<br />}</p>\n<p><br />}<br />```<br />自定义ribbon rule<br />```java<br />package com.ybs.myrule;</p>\n<p>import com.netflix.client.config.IClientConfig;<br />import com.netflix.loadbalancer.AbstractLoadBalancerRule;<br />import com.netflix.loadbalancer.ILoadBalancer;<br />import com.netflix.loadbalancer.Server;</p>\n<p>import java.util.List;<br />import java.util.concurrent.ThreadLocalRandom;</p>\n<p>/**<br />* A loadbalacing strategy that randomly distributes traffic amongst existing<br />* servers.<br />* <br />* @author stonse<br />* <br />*/<br />public class YbsRandomRule extends AbstractLoadBalancerRule {</p>\n<p>/**<br />* 自定义 Ribbon 负载均衡 Rule 每个服务访问5次<br />*/</p>\n<p><br />private int total = 0; // 被调用的次数<br />private int currentIndex = 0; // 当前是谁在提供服务</p>\n<p>// @edu.umd.cs.findbugs.annotations.SuppressWarnings(value = \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\")<br />public Server choose(ILoadBalancer lb, Object key) {<br />if (lb == null) {<br />return null;<br />}<br />Server server = null;</p>\n<p>while (server == null) {<br />if (Thread.interrupted()) {<br />return null;<br />}<br />List&lt;Server&gt; upList = lb.getReachableServers();<br />List&lt;Server&gt; allList = lb.getAllServers();</p>\n<p>int serverCount = allList.size();<br />if (serverCount == 0) {<br />return null;<br />}</p>\n<p>// int index = chooseRandomInt(serverCount);<br />// server = upList.get(index);</p>\n<p>if (total &lt; 5){<br />server = upList.get(currentIndex);<br />total++;<br />}else {<br />total = 0;<br />currentIndex++;<br />if (currentIndex &gt; upList.size()-1){<br />currentIndex = 0;<br />}<br />server = upList.get(currentIndex); // 从活着的服务中获取指定的服务来进行操作<br />}</p>\n<p>&nbsp;</p>\n<p>if (server == null) {<br />Thread.yield();<br />continue;<br />}</p>\n<p>if (server.isAlive()) {<br />return (server);<br />}</p>\n<p>server = null;<br />Thread.yield();<br />}<br />return server;</p>\n<p>}</p>\n<p>@Override<br />public Server choose(Object key) {<br />return choose(getLoadBalancer(), key);<br />}</p>\n<p>@Override<br />public void initWithNiwsConfig(IClientConfig clientConfig) {<br />// TODO Auto-generated method stub<br /><br />}<br />}</p>\n<p>```</p>","blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","blogType":6,"createdTime":"2020-03-27 15:12:24","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:15:00.882 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:15:08.053 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:15:08.054 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243556672912306176(String)
2020-03-28 03:15:08.055 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:15:08.056 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:15:08.057 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243556672912306176(String), [1243556672912306176](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># 统计每个字符出现的次数<br />1. 随机生成100个小写字符并将其放入一个字符数组中<br />2. 对数组中每个字母出现的次数进行计数：创建一个具有26个int值得数组counts，每个值存放每个字母出现的次数。<br />```java<br />package com.ybs.practice;<br />/**<br />* @Description 类描述：<br />* @ClassName 类名称：<br />* @author yb.w<br />* @version 创建时间：2019年7月4日 下午2:14:00<br />*/<br />public class CountLettersInArray {<br />public static void main(String[] args) {<br />// Declare and create an array<br />char[] chars = createArray();<br /><br />// Display the array<br />displayArray(chars);<br /><br />// Count the occurrences of each letter<br />int[] counts = countLetters(chars);<br /><br />// Display counts<br />System.out.println(\"The occurrences of each letter are:\");<br />displayCounts(counts);<br />}<br /><br />private static char[] createArray() {<br />char[] chars = new char[100];<br /><br />for(int i = 0; i &lt; chars.length; i++)<br />chars[i] = getRandomLowerCaseLetter();<br /><br />return chars;<br />}<br /><br />private static void displayArray(char[] chars) {<br />// Display the characters in the array 20 on each line<br />for (int i = 0; i &lt; chars.length; i++) {<br />if((i+1) % 20 == 0)<br />System.out.println(chars[i]);<br />else<br />System.out.print(chars[i] + \" \");<br />}<br />}<br /><br />private static int[] countLetters(char[] chars) {<br />int[] counts = new int[26];<br /><br />for(int i = 0; i &lt; chars.length; i++) {<br />counts[chars[i] - 'a']++; // 'b' - 'a' = 1<br />}<br />return counts;<br />}<br /><br />private static void displayCounts(int[] counts) {<br />for(int i = 0; i &lt; counts.length; i++) {<br />if((i+1)%10 == 0)<br />System.out.println((char)(i + 'a') + \":\" + counts[i]);<br />else<br />System.out.print((char)(i + 'a') + \":\" + counts[i] + \" \");</p>\n<p>}<br />}<br /><br />public static char getRandomCharacter(char ch1, char ch2) {<br />return (char)(ch1 + Math.random() * (ch2 - ch1 + 1));<br />}</p>\n<p>public static char getRandomLowerCaseLetter() {<br />return getRandomCharacter('a', 'z');<br />}<br />}</p>\n<p>```<br /># 结果<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190704145015500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NTM0MTA3,size_16,color_FFFFFF,t_70)</p>","blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","blogType":6,"createdTime":"2020-03-27 15:13:09","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:15:08.059 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:15:12.890 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:15:12.890 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243559290439020544(String)
2020-03-28 03:15:12.892 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:15:12.892 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:15:12.893 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243559290439020544(String), [1243559290439020544](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>测试内容</p>","blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","blogType":17,"createdTime":"2020-03-27 15:23:33","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:15:12.895 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:15:16.511 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:15:16.511 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243575371052441600(String)
2020-03-28 03:15:16.512 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:15:16.513 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:15:16.513 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243575371052441600(String), [1243575371052441600](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), GET(String), 2(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>fastDFS 上传上图</p>","blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","blogType":17,"createdTime":"2020-03-27 16:27:27","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:15:16.515 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:15:24.848 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:15:24.848 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243557755814490112(String)
2020-03-28 03:15:24.849 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:15:24.850 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:15:24.850 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243557755814490112(String), [1243557755814490112](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p># 字符串格式化<br />Python提供了多种不同的格式化输出的方法。<br />推荐的方法就是：f-字符串和str.format()函数。另外%s这种占位格式化的方式也比较常见</p>\n<p># f-字符串(f-string)<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190530113403509.png)<br />- 注：<br />1. 花括号{}里面的表达式可以有一些格式说明符，它们用来更好的控制值的格式化方式。比如保留精度：</p>\n<p>![在这里插入图片描述](https://img-blog.csdnimg.cn/20190530113803552.png)<br />2. 再比如下面这个限制最小字符宽度的，可以让输出保持列对齐：<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/2019053015125097.png)</p>\n<p># str.format() 方法<br />字符串本身提供的格式化方法format的基本用法如下：<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190530151509916.png)<br />- 注：<br />1. 字符串里面的花括号被format方法传入的参数替换，花括号的数量应该和传递给format的参数的数量保持一致。（传入的参数可以多于花括号的数目，但是不推荐这样做。）</p>\n<p>2. 花括号中可以包含数字，用来表示传递给format()方法的对象的位置：<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190530153233273.png)<br />3. 如果在format()方法中使用关键字参数，则使用参数的名称来引用它们的值：<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190530153605123.png)<br />4. 给format传递一个字典和使用方括号[]来访问键来完成格式化：<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/20190530154140868.png)<br />其中花括号里面的0[Tom]:d的意思是，0代表传给format的第一个对象，即classmates；[Tom]就是通过键来引用第一个对象中Tom对应的值，即21；:d是整数格式化说明符，如果Tom得到值是字符串就会报错：Unknown format code 'd' for object of type 'str'。</p>\n<p>5. 也可以使用**符合将字典作为关键字参数传递：<br />![在这里插入图片描述](https://img-blog.csdnimg.cn/2019053015435125.png)<br /># %格式化方法<br />在Python 2中，使用百分号%进行格式化，跟C语言中的sprintf()非常相似。但在Python3中，更推荐使用str.format()方法或f-字符串格式化。</p>\n<p>以上。如果有帮助到你，点赞关注一条龙</p>","blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","blogType":7,"createdTime":"2020-03-27 15:17:27","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:15:24.852 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:17:58.945 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:17:58.946 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:17:58.947 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:17:58.947 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:17:58.949 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:17:58.950 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:17:58.950 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:17:58.963 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:17:58.967 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:17:59.104 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:17:59.105 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:17:59.107 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:17:59.107 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:17:59.107 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:17:59.109 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:17:59.111 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:17:59.111 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:17:59.114 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:18:00.451 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:18:00.452 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:18:00.453 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:18:00.453 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:18:00.454 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:18:00.455 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:18:00.456 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:18:00.456 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:05:56"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:18:00.458 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:18:03.340 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:18:03.340 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:18:03.341 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:18:03.342 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:18:03.342 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","updateTime":"2020-03-27 19:05:56","version":9},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:18:03.345 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:18:06.357 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:18:06.357 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 2(Integer)
2020-03-28 03:18:06.358 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:18:06.359 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:18:06.359 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/2(String), [2](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","updateTime":"2020-03-26 14:50:10","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:18:06.361 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:18:09.148 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:18:09.148 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 3(Integer)
2020-03-28 03:18:09.149 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:18:09.150 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:18:09.150 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/3(String), [3](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","updateTime":"2020-03-26 14:32:18","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:18:09.152 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:18:13.490 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:18:13.490 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 6(Integer)
2020-03-28 03:18:13.491 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:18:13.492 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:18:13.492 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/6(String), [6](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"aboutContent":"<p>学习</p>","aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","updateTime":"2020-03-27 19:01:21","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:18:13.494 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:18:16.589 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:18:16.589 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:18:16.590 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:18:16.591 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:18:16.591 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), GET(String), 2(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","updateTime":"2020-03-27 19:05:56","version":9},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:18:16.593 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:18:19.570 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:18:19.570 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:18:19.572 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:18:19.573 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:18:19.573 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","updateTime":"2020-03-27 19:05:56","version":9},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:18:19.575 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:18:37.329 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? where about_id = ? and version = ? 
2020-03-28 03:18:37.329 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -==> Parameters: 学习让人进步(String), <p>成长的喜悦</p>(String), 3(Integer), 1(Integer), 9(Integer)
2020-03-28 03:18:37.332 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -<==    Updates: 1
2020-03-28 03:18:37.333 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:18:37.333 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/update(String), [About(aboutId=1, aboutTitle=学习让人进步, aboutContent=<p>成长的喜悦</p>, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:05:56, version=9, enable=null, deleted=null)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), PUT(String), 5(Long), {"code":20000,"msg":"修改成功"}(String), 127.0.0.1(String)
2020-03-28 03:18:37.335 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:18:37.580 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:18:37.580 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:18:37.581 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:18:37.582 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:18:37.582 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:18:37.582 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:18:37.583 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:18:37.583 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:05:56, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:18:36"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:18:37.585 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:18:39.627 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:18:39.628 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:18:39.629 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:18:39.629 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:18:39.629 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"aboutContent":"<p>成长的喜悦</p>","aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","updateTime":"2020-03-27 19:18:36","version":10},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:18:39.631 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:19:29.063 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:19:29.063 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:19:29.064 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:19:29.064 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:19:29.064 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:19:29.065 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:19:29.066 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:19:29.066 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:18:36"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:19:29.068 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:19:59.059 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:19:59.059 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:19:59.060 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:19:59.061 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:19:59.061 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:19:59.062 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:19:59.063 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:19:59.063 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:18:36"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:19:59.065 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:20:17.884 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:20:17.884 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:20:17.885 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:20:17.886 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:20:17.887 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:20:17.888 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:20:17.889 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:20:17.890 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:20:17.893 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:20:18.011 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:20:18.011 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:20:18.012 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:20:18.013 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:20:18.013 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:20:18.014 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:20:18.015 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:20:18.016 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:18:36"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:20:18.033 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:20:53.238 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:20:53.238 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:20:53.240 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:20:53.240 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:20:53.240 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:20:53.241 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:20:53.242 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:20:53.242 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:18:36"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:20:53.244 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:20:57.441 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:20:57.441 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:20:57.442 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:20:57.442 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:20:57.442 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:20:57.443 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:20:57.444 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:20:57.444 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:18:36"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:20:57.446 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:01.346 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:21:01.346 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:21:01.347 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:21:01.348 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==>  Preparing: update bl_about set version = version + 1, enable = ? where about_id = ? and version = ? 
2020-03-28 03:21:01.348 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==> Parameters: 0(Integer), 1(Integer), 10(Integer)
2020-03-28 03:21:01.350 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -<==    Updates: 1
2020-03-28 03:21:01.350 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:01.350 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/disable/1(String), [1](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), PUT(String), 5(Long), {"code":20000,"msg":"停用成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:01.352 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:05.992 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:05.992 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:05.994 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:06.061 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:21:06.061 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:21:06.062 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:21:06.063 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:06.063 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:06.066 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:06.312 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:21:06.312 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:21:06.313 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:21:06.314 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:21:06.314 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:21:06.314 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:21:06.315 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:06.315 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":0,"updateTime":"2020-03-27 19:21:00"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:06.318 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:08.494 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-03-28 03:21:08.494 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -==> Parameters: 
2020-03-28 03:21:08.495 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -<==      Total: 0
2020-03-28 03:21:08.495 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:21:08.495 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:21:08.496 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:21:08.496 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==>  Preparing: update bl_about set version = version + 1, enable = ? where about_id = ? and version = ? 
2020-03-28 03:21:08.496 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==> Parameters: 1(Integer), 1(Integer), 11(Integer)
2020-03-28 03:21:08.498 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -<==    Updates: 1
2020-03-28 03:21:08.499 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:08.499 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/enable/1(String), [1](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"启用成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:08.501 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:26.828 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:21:26.828 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:21:26.830 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:21:26.830 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:21:26.830 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:21:26.831 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:21:26.831 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:26.832 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:21:07"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:26.833 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:29.805 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-03-28 03:21:29.805 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -==> Parameters: 
2020-03-28 03:21:29.806 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -<==      Total: 1
2020-03-28 03:21:29.807 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:29.808 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/enable/2(String), [2](String), 0(Integer), 	at com.ybs.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:71)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.enableById(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.enableById(<generated>)
	at com.ybs.blog.controller.AboutController.enable(AboutController.java:92)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.enable(<generated>)
(String), PUT(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:29.809 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:34.540 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:21:34.540 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:21:34.541 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:21:34.541 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==>  Preparing: update bl_about set version = version + 1, enable = ? where about_id = ? and version = ? 
2020-03-28 03:21:34.541 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==> Parameters: 0(Integer), 1(Integer), 12(Integer)
2020-03-28 03:21:34.543 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -<==    Updates: 1
2020-03-28 03:21:34.543 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:34.544 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/disable/1(String), [1](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"停用成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:34.545 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:34.790 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:21:34.790 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:21:34.791 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:21:34.791 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:21:34.791 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:21:34.792 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:21:34.792 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:34.793 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:21:07, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":0,"updateTime":"2020-03-27 19:21:33"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-26 14:50:10"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:34.795 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:37.178 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-03-28 03:21:37.179 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -==> Parameters: 
2020-03-28 03:21:37.179 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -<==      Total: 0
2020-03-28 03:21:37.180 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:21:37.180 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 2(Integer)
2020-03-28 03:21:37.181 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:21:37.181 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==>  Preparing: update bl_about set version = version + 1, enable = ? where about_id = ? and version = ? 
2020-03-28 03:21:37.181 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==> Parameters: 1(Integer), 2(Integer), 2(Integer)
2020-03-28 03:21:37.183 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -<==    Updates: 1
2020-03-28 03:21:37.183 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:37.183 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/enable/2(String), [2](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"启用成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:37.185 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:21:37.498 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:21:37.498 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:21:37.499 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:21:37.499 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:21:37.500 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:21:37.500 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:21:37.501 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:21:37.501 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:21:33, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-26 14:50:10, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":0,"updateTime":"2020-03-27 19:21:33"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":1,"updateTime":"2020-03-27 19:21:36"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:21:37.504 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:23:18.198 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:23:18.198 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 2(Integer)
2020-03-28 03:23:18.199 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:23:18.199 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==>  Preparing: update bl_about set version = version + 1, enable = ? where about_id = ? and version = ? 
2020-03-28 03:23:18.200 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==> Parameters: 0(Integer), 2(Integer), 3(Integer)
2020-03-28 03:23:18.202 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -<==    Updates: 1
2020-03-28 03:23:18.203 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:23:18.203 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/disable/2(String), [2](String), 1(Integer), null, PUT(String), 8(Long), {"code":20000,"msg":"停用成功"}(String), 127.0.0.1(String)
2020-03-28 03:23:18.206 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:23:18.446 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:23:18.446 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:23:18.447 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:23:18.447 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:23:18.448 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:23:18.448 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:23:18.449 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:23:18.449 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:21:33, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-27 19:21:36, version=null, enable=1, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":0,"updateTime":"2020-03-27 19:21:33"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:23:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:23:18.451 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:23:20.746 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-03-28 03:23:20.746 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -==> Parameters: 
2020-03-28 03:23:20.747 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getAbout.debug:143 -<==      Total: 0
2020-03-28 03:23:20.748 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:23:20.748 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:23:20.749 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:23:20.749 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==>  Preparing: update bl_about set version = version + 1, enable = ? where about_id = ? and version = ? 
2020-03-28 03:23:20.749 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -==> Parameters: 1(Integer), 1(Integer), 13(Integer)
2020-03-28 03:23:20.753 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.updateEnable.debug:143 -<==    Updates: 1
2020-03-28 03:23:20.754 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:23:20.754 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/enable/1(String), [1](String), 1(Integer), null, PUT(String), 8(Long), {"code":20000,"msg":"启用成功"}(String), 127.0.0.1(String)
2020-03-28 03:23:20.757 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:23:21.067 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:23:21.067 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:23:21.068 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:23:21.068 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:23:21.068 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:23:21.070 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:23:21.071 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:23:21.071 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:21:33, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-27 19:23:17, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:23:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:23:21.074 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:23:23.621 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 03:23:23.621 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:23:23.622 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:23:23.622 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:23:23.622 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:23:23.623 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:23:23.624 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:23:23.624 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:23:19, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-27 19:23:17, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:23:17"},{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:23:23.626 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:23:26.602 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 03:23:26.603 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:23:26.605 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:23:26.605 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:23:26.605 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:23:26.606 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:23:26.607 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:23:26.607 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-27 19:23:17, version=null, enable=0, deleted=null), About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:23:19, version=null, enable=1, deleted=null)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), 	at com.ybs.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:71)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.enableById(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.enableById(<generated>)
	at com.ybs.blog.controller.AboutController.enable(AboutController.java:92)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.enable(<generated>)
(String), POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:23:17"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:23:26.610 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:23:29.770 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by about_read asc limit ?, ? 
2020-03-28 03:23:29.771 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:23:29.772 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:23:29.772 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:23:29.772 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:23:29.773 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:23:29.774 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:23:29.774 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:23:19, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-27 19:23:17, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null)], params={}, sortColumn=about_read, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:23:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"},{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"}],"pageSize":10,"params":{},"sortColumn":"about_read","sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:23:29.776 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:23:31.033 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by about_read desc limit ?, ? 
2020-03-28 03:23:31.033 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:23:31.034 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:23:31.035 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:23:31.035 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:23:31.035 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:23:31.036 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:23:31.037 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-27 19:23:17, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null), About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:23:19, version=null, enable=1, deleted=null)], params={}, sortColumn=about_read, sortMethod=desc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:23:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortColumn":"about_read","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:23:31.039 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:08.570 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:25:08.570 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:25:08.571 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:08.572 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:08.572 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:25:08.573 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:08.573 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:08.576 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:08.577 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:08.751 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:25:08.751 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:25:08.753 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:25:08.753 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:25:08.754 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:25:08.756 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:25:08.757 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:08.757 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:23:17"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:08.760 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:14.618 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:25:14.618 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 2(Integer)
2020-03-28 03:25:14.620 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:25:14.621 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:14.621 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/2(String), [2](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","updateTime":"2020-03-27 19:23:17","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:14.624 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:19.788 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:25:19.788 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 2(Integer)
2020-03-28 03:25:19.789 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:25:19.790 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:19.790 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/2(String), [2](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","updateTime":"2020-03-27 19:23:17","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:19.792 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:33.208 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:25:33.208 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 1(Integer)
2020-03-28 03:25:33.209 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:25:33.209 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:33.210 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"aboutContent":"<p>成长的喜悦</p>","aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","updateTime":"2020-03-27 19:23:19","version":14},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:33.211 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:36.578 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:25:36.578 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 2(Integer)
2020-03-28 03:25:36.579 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:25:36.580 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:36.580 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/2(String), [2](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","updateTime":"2020-03-27 19:23:17","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:36.582 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:40.257 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-03-28 03:25:40.257 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -==> Parameters: 2(Integer)
2020-03-28 03:25:40.258 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AboutMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:25:40.258 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:40.259 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/get/2(String), [2](String), 1(Integer), 	at com.ybs.blog.service.impl.AboutServiceImpl.enableById(AboutServiceImpl.java:71)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.enableById(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.enableById(<generated>)
	at com.ybs.blog.controller.AboutController.enable(AboutController.java:92)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.enable(<generated>)
(String), GET(String), 2(Long), {"code":20000,"data":{"aboutContent":"内容","aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-03-26 14:32:15","updateTime":"2020-03-27 19:23:17","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:40.260 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:50.420 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? where about_id = ? and version = ? 
2020-03-28 03:25:50.421 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -==> Parameters: A进行了修改(String), 内容(String), 0(Integer), 2(Integer), 4(Integer)
2020-03-28 03:25:50.424 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -<==    Updates: 1
2020-03-28 03:25:50.424 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:50.425 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/update(String), [About(aboutId=2, aboutTitle=A进行了修改, aboutContent=内容, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-27 19:23:17, version=4, enable=null, deleted=null)](String), 1(Integer), null, PUT(String), 6(Long), {"code":20000,"msg":"修改成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:50.427 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:50.746 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by about_read desc limit ?, ? 
2020-03-28 03:25:50.746 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:25:50.747 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:25:50.747 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:25:50.747 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:25:50.748 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:25:50.749 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:50.749 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:23:19, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-27 19:23:17, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null)], params={}, sortColumn=about_read, sortMethod=desc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"},{"aboutId":2,"aboutRead":0,"aboutTitle":"A进行了修改","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:25:49"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortColumn":"about_read","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:50.751 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:53.127 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? where about_id = ? and version = ? 
2020-03-28 03:25:53.127 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -==> Parameters: B进行了修改(String), 内容(String), 0(Integer), 2(Integer), 4(Integer)
2020-03-28 03:25:53.128 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.updateById.debug:143 -<==    Updates: 0
2020-03-28 03:25:53.129 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:53.129 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/update(String), [About(aboutId=2, aboutTitle=B进行了修改, aboutContent=内容, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-27 19:23:17, version=4, enable=null, deleted=null)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
### The error may involve com.ybs.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
; Column 'about_content' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
	at com.ybs.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:35)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$31ebce2a.save(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$a2d9da02.invoke(<generated>)
	at com.ybs.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abec57b4.save(<generated>)
	at com.ybs.blog.controller.AboutController.save(AboutController.java:37)
	at com.ybs.blog.controller.AboutController$$FastClassBySpringCGLIB$$ad17d112.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d6f8c59d.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_content' cannot be null
(String), PUT(String), 2(Long), {"code":20000,"msg":"修改成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:53.131 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:53.455 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:25:53.455 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:25:53.456 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:25:53.457 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:25:53.457 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:25:53.458 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:25:53.458 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:53.459 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[About(aboutId=1, aboutTitle=学习让人进步, aboutContent=null, aboutRead=3, createdTime=2020-03-26 14:32:05, updateTime=2020-03-27 19:23:19, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试关于1, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:15, updateTime=2020-03-27 19:23:17, version=null, enable=0, deleted=null), About(aboutId=3, aboutTitle=测试关于2, aboutContent=null, aboutRead=0, createdTime=2020-03-26 14:32:18, updateTime=2020-03-26 14:32:18, version=null, enable=0, deleted=null), About(aboutId=6, aboutTitle=关于我的, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:01:21, updateTime=2020-03-27 19:01:21, version=null, enable=0, deleted=null), About(aboutId=8, aboutTitle=我爱学习, aboutContent=null, aboutRead=0, createdTime=2020-03-27 19:02:16, updateTime=2020-03-27 19:02:16, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"},{"aboutId":2,"aboutRead":0,"aboutTitle":"A进行了修改","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:25:49"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:53.461 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:58.430 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:58.430 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:58.432 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:58.543 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:25:58.543 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:25:58.544 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:25:58.545 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:58.545 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":0,"typeId":7,"typeName":"Python"},{"typeBlogCount":0,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":0,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:58.548 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:25:58.830 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 03:25:58.830 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:25:58.831 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 03:25:58.831 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 03:25:58.831 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:25:58.832 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:25:58.833 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:25:58.833 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"},{"aboutId":2,"aboutRead":0,"aboutTitle":"A进行了修改","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:25:49"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:25:58.835 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:38:35.997 DEBUG [restartedMain]com.ybs.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-03-28 03:43:15.283 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 03:43:15.298 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 03:43:15.314 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 03:43:15.362 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:43:15.364 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 176(Long), {"code":20000,"data":{"token":"4E43C39ED2B3354163783E6BCA395962"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:43:15.368 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:43:15.398 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:43:15.399 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:43:15.405 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:43:30.421 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 03:43:30.421 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 03:43:30.425 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 03:43:30.428 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:43:30.429 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":7,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:43:30.432 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:43:35.402 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:43:35.403 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:43:35.409 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:43:35.410 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:43:35.411 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:43:35.413 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:43:35.420 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:43:35.421 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 40(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:43:35.424 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:43:40.589 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 03:43:40.589 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 03:43:40.592 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 03:43:40.593 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:43:40.593 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":7,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:43:40.597 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:43:58.772 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-03-28 03:43:58.773 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==> Parameters: 17(Integer)
2020-03-28 03:43:58.774 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:43:58.775 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:43:58.775 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/get/17(String), [17](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"enable":1,"typeBlogCount":7,"typeId":17,"typeName":"测试"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:43:58.777 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:04.422 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-03-28 03:44:04.423 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==> Parameters: Python(String), 7(Integer), 1(Integer), 17(Integer)
2020-03-28 03:44:04.425 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -<==    Updates: 1
2020-03-28 03:44:04.426 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:04.427 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/update(String), [Type(typeId=17, typeName=Python, typeBlogCount=7, enable=1, deleted=null)](String), 1(Integer), null, PUT(String), 6(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:04.429 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:04.747 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 03:44:04.748 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 03:44:04.753 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 03:44:04.754 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:04.755 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":7,"typeId":17,"typeName":"Python"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:04.757 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:15.584 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-03-28 03:44:15.585 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==> Parameters: 17(Integer)
2020-03-28 03:44:15.586 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:44:15.587 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:15.588 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/get/17(String), [17](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"enable":1,"typeBlogCount":7,"typeId":17,"typeName":"Python"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:15.590 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:19.411 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-03-28 03:44:19.411 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==> Parameters: 测试(String), 7(Integer), 1(Integer), 17(Integer)
2020-03-28 03:44:19.413 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.update.debug:143 -<==    Updates: 1
2020-03-28 03:44:19.414 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:19.414 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/update(String), [Type(typeId=17, typeName=测试, typeBlogCount=7, enable=1, deleted=null)](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:19.417 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:19.735 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 03:44:19.736 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 03:44:19.738 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 03:44:19.739 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:19.740 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":7,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:19.742 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:30.407 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:44:30.408 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:44:30.413 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:44:30.414 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:44:30.414 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:44:30.415 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:44:30.419 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:30.419 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:30.422 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:35.403 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:44:35.403 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243559186332200960(String)
2020-03-28 03:44:35.406 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:44:35.409 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:35.410 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243559186332200960(String), [1243559186332200960](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>测试内容</p>","blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","blogType":17,"createdTime":"2020-03-27 15:23:08","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:35.412 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:47.591 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:44:47.591 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:44:47.593 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:44:47.594 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:47.594 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:47.599 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:47.601 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:47.601 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":1,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":7,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:47.607 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:47.729 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:44:47.730 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:44:47.735 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:44:47.736 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:44:47.737 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:44:47.739 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:44:47.755 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:47.757 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 26(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"测试","updateTime":"2020-03-27 15:23:08"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:47.760 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:44:55.523 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:44:55.523 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243559186332200960(String)
2020-03-28 03:44:55.525 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:44:55.527 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:44:55.527 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243559186332200960(String), [1243559186332200960](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>测试内容</p>","blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","blogType":17,"createdTime":"2020-03-27 15:23:08","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:44:55.529 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:45:01.815 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:45:01.816 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243559186332200960(String)
2020-03-28 03:45:01.818 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:45:01.819 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-03-28 03:45:01.819 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==> Parameters: 17(Integer)
2020-03-28 03:45:01.821 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:45:01.821 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-03-28 03:45:01.822 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==> Parameters: 测试(String), 6(Integer), 1(Integer), 17(Integer)
2020-03-28 03:45:01.823 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.update.debug:143 -<==    Updates: 1
2020-03-28 03:45:01.823 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-03-28 03:45:01.824 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==> Parameters: 7(Integer)
2020-03-28 03:45:01.824 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:45:01.825 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-03-28 03:45:01.825 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==> Parameters: Python(String), 7(Integer), 1(Integer), 7(Integer)
2020-03-28 03:45:01.826 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.update.debug:143 -<==    Updates: 1
2020-03-28 03:45:01.828 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ?; 
2020-03-28 03:45:01.828 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==> Parameters: 测试1(String), 测封面(String), <p>测试内容</p>(String), 0(Integer), 0(Integer), 0(Integer), 7(Integer), 测备注(String), 0(Integer), 测来源(String), 1243559186332200960(String), 1(Integer)
2020-03-28 03:45:01.830 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.update.debug:143 -<==    Updates: 1
2020-03-28 03:45:01.835 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:45:01.835 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/update(String), [Blog(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=<p>测试内容</p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=7, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 20(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 03:45:01.837 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:45:02.067 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:45:02.068 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:45:02.073 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:45:02.074 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:45:02.074 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:45:02.076 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:45:02.078 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:45:02.079 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 15:23:08), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:45:02.082 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:45:03.740 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 03:45:03.740 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 03:45:03.741 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 03:45:03.742 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:45:03.743 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":7,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:45:03.745 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:45:13.125 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:45:13.126 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:45:13.126 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:45:13.126 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:45:13.128 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:45:13.129 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:45:13.130 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:45:13.130 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":7,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:45:13.135 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:45:13.216 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 03:45:13.217 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 03:45:13.219 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 03:45:13.221 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:45:13.221 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":7,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:45:13.223 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:45:47.033 DEBUG [restartedMain]com.ybs.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-03-28 03:45:51.254 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 03:45:51.270 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 03:45:51.285 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 03:45:51.339 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:45:51.339 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 180(Long), {"code":20000,"data":{"token":"8D1CB7C7B2AF0022F81E458BC64F12CA"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:45:51.342 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:45:51.391 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:45:51.392 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:45:51.394 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:45:51.482 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 03:45:51.482 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 03:45:51.488 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 03:45:51.493 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:45:51.494 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:45:51.497 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:45:53.723 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 03:45:53.723 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 03:45:53.726 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 03:45:53.727 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:45:53.728 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:45:53.730 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:46:02.770 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:46:02.770 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:46:02.775 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:46:02.776 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:46:02.777 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:46:02.778 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:46:02.786 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:46:02.787 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 35(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:46:02.789 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:46:06.359 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:46:06.360 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243587486622507008(String)
2020-03-28 03:46:06.362 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:46:06.365 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:46:06.365 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243587486622507008(String), [1243587486622507008](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>测试是否还能带出信息，添加带不出，修改可以正常正常带出，可以了</p>","blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","blogType":17,"createdTime":"2020-03-27 17:15:35","version":3},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:46:06.368 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:46:14.630 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:46:14.631 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:46:14.638 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:46:14.638 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 03:46:14.639 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 03:46:14.644 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 03:46:14.646 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:46:14.646 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":0,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:46:14.651 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:46:14.777 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:46:14.778 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:46:14.788 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:46:14.789 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:46:14.789 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:46:14.791 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:46:14.795 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:46:14.796 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"测试","updateTime":"2020-03-27 18:33:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:46:14.804 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:46:19.762 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:46:19.762 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243575371052441600(String)
2020-03-28 03:46:19.764 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:46:19.764 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:46:19.765 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243575371052441600(String), [1243575371052441600](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>fastDFS 上传上图</p>","blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","blogType":17,"createdTime":"2020-03-27 16:27:27","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:46:19.768 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:46:39.038 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 03:46:39.039 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243575371052441600(String)
2020-03-28 03:46:39.040 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:46:39.041 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-03-28 03:46:39.041 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==> Parameters: 17(Integer)
2020-03-28 03:46:39.042 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:46:39.043 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-03-28 03:46:39.044 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==> Parameters: 测试(String), 5(Integer), 1(Integer), 17(Integer)
2020-03-28 03:46:39.045 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -<==    Updates: 1
2020-03-28 03:46:39.046 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-03-28 03:46:39.046 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==> Parameters: 11(Integer)
2020-03-28 03:46:39.047 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:46:39.048 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-03-28 03:46:39.048 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==> Parameters: SringBoot(String), 1(Integer), 1(Integer), 11(Integer)
2020-03-28 03:46:39.051 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -<==    Updates: 1
2020-03-28 03:46:39.052 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ?; 
2020-03-28 03:46:39.053 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.update.debug:143 -==> Parameters: fastDFS 上传图片(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png(String), <p>fastDFS 上传上图</p>(String), 0(Integer), 222(Integer), 0(Integer), 11(Integer), 上传图片(String), 0(Integer), fastdfs(String), 1243575371052441600(String), 1(Integer)
2020-03-28 03:46:39.054 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.update.debug:143 -<==    Updates: 1
2020-03-28 03:46:39.057 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:46:39.057 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/update(String), [Blog(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=<p>fastDFS 上传上图</p>, blogGoods=0, blogRead=222, blogCollection=0, blogType=11, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 20(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 03:46:39.059 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:46:39.289 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:46:39.290 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:46:39.293 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:46:39.294 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:46:39.294 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:46:39.297 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:46:39.300 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:46:39.301 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 19:45:00), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=测试, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 18:33:33), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:46:39.305 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:46:44.411 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 03:46:44.411 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 03:46:44.413 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 03:46:44.415 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:46:44.415 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":0,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:46:44.418 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:47:02.289 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:47:02.289 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:47:02.292 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:47:02.292 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:47:02.293 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:47:02.294 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:47:02.297 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:47:02.298 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:47:02.302 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:47:37.964 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:47:37.964 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@47a030ba](String), 1(Integer), null, POST(String), 36(Long), {"code":20000,"data":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-WFiAW_ooAAB1dQXDf2s092.jpg","msg":"上传成功"}(String), 127.0.0.1(String)
2020-03-28 03:47:37.967 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:47:45.711 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.save.debug:143 -==>  Preparing: insert into bl_blog( blog_id, blog_title, blog_image, blog_content, blog_type, blog_remark,blog_source ) values ( ?,?, ?, ?, ?, ?, ? ) 
2020-03-28 03:47:45.712 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.save.debug:143 -==> Parameters: 1243625778541801472(String), Ajax(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-WFiAW_ooAAB1dQXDf2s092.jpg(String), <p>Ajax</p>(String), 18(Integer), null, null
2020-03-28 03:47:45.714 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:47:45.715 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-03-28 03:47:45.716 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==> Parameters: 18(Integer)
2020-03-28 03:47:45.717 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -<==      Total: 1
2020-03-28 03:47:45.718 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-03-28 03:47:45.719 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==> Parameters: 前端(String), 1(Integer), 1(Integer), 18(Integer)
2020-03-28 03:47:45.720 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.update.debug:143 -<==    Updates: 1
2020-03-28 03:47:45.725 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:47:45.726 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/save(String), [Blog(blogId=, blogTitle=Ajax, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-WFiAW_ooAAB1dQXDf2s092.jpg, blogContent=<p>Ajax</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=18, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-03-28 03:47:45.729 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:47:46.059 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 03:47:46.059 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 03:47:46.062 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 03:47:46.062 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 03:47:46.063 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 03:47:46.064 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 03:47:46.066 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:47:46.067 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 19:45:00), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=SringBoot, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 19:46:38), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:47:46.071 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 03:47:47.705 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 03:47:47.705 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 03:47:47.706 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 03:47:47.707 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 03:47:47.708 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 03:47:47.710 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:41:25.787 DEBUG [restartedMain]com.ybs.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-03-28 15:43:06.914 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 15:43:06.933 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 15:43:07.017 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 15:43:07.101 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:43:07.102 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 439(Long), {"code":20000,"data":{"token":"B09041430C8952836E251FFF9CB3F3C3"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:43:07.142 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:43:07.237 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:43:07.237 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:43:07.240 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:43:11.339 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 15:43:11.340 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 15:43:11.345 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 15:43:11.346 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 15:43:11.347 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 15:43:11.350 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 15:43:11.356 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:43:11.357 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 31(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"},{"aboutId":2,"aboutRead":0,"aboutTitle":"A进行了修改","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:25:49"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:43:11.359 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:43:15.172 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 15:43:15.173 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 15:43:15.183 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 15:43:15.184 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 15:43:15.185 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 15:43:15.186 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 15:43:15.190 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:43:15.191 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 37(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:43:15.204 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:16.609 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:16.610 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:16.611 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 15:59:16.612 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 15:59:16.616 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:16.618 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 15:59:16.622 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:16.623 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 36(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:16.627 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:16.928 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 15:59:16.928 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 15:59:16.937 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 15:59:16.937 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 15:59:16.938 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 15:59:16.939 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 15:59:16.941 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:16.942 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:16.945 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:28.840 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 15:59:28.840 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:28.840 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 15:59:28.840 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:28.843 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 15:59:28.843 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:28.844 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:28.845 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:28.855 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:29.155 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 15:59:29.156 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 15:59:29.160 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 15:59:29.161 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 15:59:29.161 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 15:59:29.162 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 15:59:29.166 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:29.167 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:29.169 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:41.030 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 15:59:41.030 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:41.030 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 15:59:41.031 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:41.034 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 15:59:41.035 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:41.036 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:41.036 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:41.047 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:41.346 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 15:59:41.346 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 15:59:41.351 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 15:59:41.352 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 15:59:41.353 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 15:59:41.354 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 15:59:41.357 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:41.357 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:41.361 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:48.209 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 15:59:48.209 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:48.209 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 15:59:48.210 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:48.211 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 15:59:48.213 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:48.213 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:48.213 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:48.226 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 15:59:48.529 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 15:59:48.530 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 15:59:48.534 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 15:59:48.535 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 15:59:48.535 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 15:59:48.537 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 15:59:48.539 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 15:59:48.541 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 15:59:48.543 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:00.091 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:00:00.091 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:00:00.091 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:00.093 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:00.094 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:00:00.096 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:00.096 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:00.105 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:00.108 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:00.407 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 16:00:00.408 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 16:00:00.410 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 16:00:00.411 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 16:00:00.411 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 16:00:00.412 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 16:00:00.415 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:00.416 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:00.419 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:21.255 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:00:21.255 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:00:21.255 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:21.255 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:21.256 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:00:21.257 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:21.258 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:21.258 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:21.260 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:21.605 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 16:00:21.606 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 16:00:21.608 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 16:00:21.609 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 16:00:21.609 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 16:00:21.611 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 16:00:21.613 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:21.613 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:21.618 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:23.520 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 16:00:23.520 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 16:00:23.522 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 16:00:23.522 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:23.523 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:23.525 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:27.302 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-03-28 16:00:27.302 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 16:00:27.304 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getByPage.debug:143 -<==      Total: 5
2020-03-28 16:00:27.305 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-03-28 16:00:27.305 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 16:00:27.306 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AboutMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 16:00:27.306 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:27.307 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":3,"aboutTitle":"学习让人进步","createdTime":"2020-03-26 14:32:05","enable":1,"updateTime":"2020-03-27 19:23:19"},{"aboutId":2,"aboutRead":0,"aboutTitle":"A进行了修改","createdTime":"2020-03-26 14:32:15","enable":0,"updateTime":"2020-03-27 19:25:49"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试关于2","createdTime":"2020-03-26 14:32:18","enable":0,"updateTime":"2020-03-26 14:32:18"},{"aboutId":6,"aboutRead":0,"aboutTitle":"关于我的","createdTime":"2020-03-27 19:01:21","enable":0,"updateTime":"2020-03-27 19:01:21"},{"aboutId":8,"aboutRead":0,"aboutTitle":"我爱学习","createdTime":"2020-03-27 19:02:16","enable":0,"updateTime":"2020-03-27 19:02:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:27.309 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:28.238 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-03-28 16:00:28.239 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -==> Parameters: 
2020-03-28 16:00:28.240 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getAll.debug:143 -<==      Total: 11
2020-03-28 16:00:28.241 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:28.241 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/list(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"enable":0,"typeBlogCount":0,"typeId":8,"typeName":"Docker"},{"enable":1,"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"enable":1,"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"enable":0,"typeBlogCount":0,"typeId":13,"typeName":"Python1"},{"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"enable":0,"typeBlogCount":0,"typeId":16,"typeName":"C++"},{"enable":1,"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"enable":1,"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:28.243 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:43.604 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:00:43.605 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:00:43.605 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:43.605 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:43.606 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:00:43.607 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:43.608 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:43.608 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:43.611 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:58.773 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:00:58.773 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:58.773 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:00:58.773 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:58.775 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:00:58.776 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:00:58.777 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:00:58.777 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:00:58.790 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:01:00.656 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:01:00.656 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:01:00.656 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:01:00.656 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:01:00.657 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:01:00.658 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:01:00.658 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:01:00.658 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:01:00.661 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:01:23.938 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:01:23.938 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:01:23.938 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:01:23.938 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:01:23.940 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:01:23.941 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:01:23.942 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:01:23.942 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:01:23.948 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:01:27.819 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:01:27.820 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:01:27.820 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:01:27.820 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:01:27.821 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:01:27.822 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:01:27.823 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:01:27.823 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:01:27.830 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:01:29.788 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:01:29.788 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:01:29.789 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:01:29.790 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:01:29.790 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:01:29.792 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:02:07.544 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:02:07.544 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:02:07.544 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:02:07.545 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:02:07.546 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:02:07.549 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:02:07.549 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:02:07.549 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:02:07.555 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:02:07.905 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:02:07.905 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:02:07.907 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:02:07.907 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:02:07.908 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:02:07.911 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:04:17.848 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:04:17.849 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:04:17.851 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:04:17.851 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:04:17.852 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:04:17.856 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:04:58.438 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:04:58.438 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:04:58.439 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:04:58.440 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:04:58.440 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:04:58.443 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:05:31.421 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:05:31.421 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:05:31.423 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:05:31.424 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:05:31.424 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:05:31.428 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:05:59.745 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:05:59.746 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:05:59.748 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:05:59.750 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:05:59.750 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:05:59.753 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:06:24.492 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:06:24.492 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:06:24.493 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:06:24.494 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:06:24.494 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:06:24.498 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:10:59.378 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:10:59.378 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:10:59.380 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:10:59.381 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:10:59.381 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:10:59.385 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:11:05.442 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:11:05.443 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:11:05.444 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:11:05.444 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:11:05.445 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:11:05.447 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:11:32.540 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:11:32.541 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:11:32.542 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:11:32.543 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:11:32.543 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:11:32.545 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:11:43.763 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:11:43.763 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:11:43.765 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:11:43.766 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:11:43.766 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:11:43.769 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:12:07.389 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:12:07.389 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:12:07.390 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:12:07.391 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:12:07.391 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:12:07.394 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:12:37.175 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:12:37.176 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:12:37.178 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:12:37.178 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:12:37.178 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:12:37.180 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:18:47.587 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:18:47.588 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:18:47.589 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:18:47.590 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:18:47.591 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:18:47.593 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:19:08.825 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:19:08.825 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:19:08.827 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:19:08.828 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:19:08.829 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:19:08.833 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:19:35.516 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:19:35.516 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:19:35.518 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:19:35.519 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:19:35.519 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:19:35.522 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:20:47.703 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:20:47.704 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:20:47.705 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:20:47.706 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:20:47.706 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:20:47.709 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:20:51.257 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:20:51.258 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:20:51.259 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:20:51.259 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:20:51.260 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:20:51.262 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:21:09.177 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:21:09.177 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:21:09.179 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:21:09.194 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:21:09.195 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:21:09.200 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:21:09.202 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:21:09.202 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:21:09.205 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:21:09.557 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:21:09.557 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:21:09.558 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:21:09.559 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:21:09.560 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:21:09.562 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:21:31.736 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:21:31.736 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:21:31.738 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:21:31.738 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:21:31.739 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:21:31.741 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:21:40.638 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:21:40.639 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:21:40.642 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:21:40.642 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:21:40.643 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:21:40.645 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:21:40.646 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:21:40.647 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:21:40.651 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:21:41.012 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:21:41.012 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:21:41.013 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:21:41.016 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:21:41.017 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:21:41.024 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:21:45.089 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:21:45.089 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:21:45.091 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:21:45.091 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:21:45.092 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:21:45.093 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:21:45.093 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:21:45.094 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:21:45.096 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:21:45.159 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:21:45.160 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:21:45.162 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:21:45.163 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:21:45.164 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:21:45.179 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:22:21.267 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:22:21.267 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:22:21.268 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:22:21.269 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:22:21.269 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:22:21.272 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:22:34.124 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:22:34.124 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:22:34.126 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:22:34.127 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:22:34.128 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:22:34.130 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:22:36.519 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:22:36.519 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:22:36.519 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:22:36.520 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:22:36.521 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:22:36.522 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:22:36.523 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:22:36.523 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:22:36.527 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:22:36.902 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:22:36.902 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:22:36.903 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:22:36.905 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:22:36.905 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:22:36.908 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:22:51.719 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:22:51.719 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:22:51.721 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:22:51.739 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:22:51.739 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:22:51.744 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:22:51.745 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:22:51.746 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:22:51.751 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:22:51.805 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:22:51.805 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:22:51.807 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:22:51.808 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:22:51.809 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:22:51.817 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:23:31.803 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:23:31.803 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:23:31.805 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:23:31.806 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:23:31.806 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:23:31.809 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:23:33.124 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:23:33.124 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:23:33.127 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:23:33.133 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:23:33.133 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:23:33.135 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:23:33.136 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:23:33.136 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:23:33.139 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:23:33.500 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:23:33.501 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:23:33.503 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:23:33.504 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:23:33.504 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:23:33.507 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:24:44.168 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:24:44.169 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:24:44.169 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:24:44.170 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:24:44.171 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:24:44.171 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:24:44.172 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:24:44.173 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:24:44.177 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:24:44.244 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:24:44.244 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:24:44.245 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:24:44.246 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:24:44.247 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:24:44.262 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:24:51.678 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:24:51.679 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:24:51.680 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:24:51.683 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:24:51.684 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:24:51.689 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:25:08.565 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:25:08.565 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:25:08.566 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:25:08.566 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:25:08.568 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:25:08.569 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:25:08.569 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:25:08.569 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:25:08.572 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:25:08.638 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:25:08.638 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:25:08.639 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:25:08.640 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:25:08.641 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:25:08.644 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:02.648 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:28:02.648 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:28:02.651 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:28:02.652 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:02.652 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:02.655 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:22.713 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:28:22.713 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:28:22.715 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:28:22.716 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:22.717 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:22.718 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:22.718 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:22.720 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:22.721 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:22.788 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:28:22.789 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:28:22.790 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:28:22.791 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:22.792 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:22.796 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:30.804 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:28:30.804 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:28:30.805 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:28:30.806 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:30.806 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:30.808 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:36.424 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:28:36.426 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:28:36.427 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:28:36.428 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:36.429 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:36.433 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:40.915 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:40.915 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:40.922 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:40.922 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:28:40.922 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:28:40.924 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:28:40.925 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:40.926 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:40.929 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:41.305 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:28:41.306 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:28:41.307 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:28:41.308 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:41.309 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:41.311 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:56.597 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:28:56.598 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:28:56.599 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:28:56.601 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:56.601 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:56.604 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:57.828 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:57.828 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:57.830 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:57.845 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:28:57.845 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:28:57.846 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:28:57.847 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:57.847 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:57.851 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:28:58.221 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:28:58.221 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:28:58.223 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:28:58.224 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:28:58.224 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:28:58.226 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:29:22.657 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:29:22.658 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:29:22.659 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:29:22.659 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:29:22.660 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:29:22.663 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:29:25.860 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:29:25.860 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:29:25.863 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:29:25.877 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:29:25.877 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:29:25.878 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:29:25.879 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:29:25.880 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:29:25.883 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:29:26.251 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:29:26.251 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:29:26.252 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:29:26.253 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:29:26.253 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:29:26.258 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:29:47.845 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:29:47.845 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:29:47.846 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:29:47.847 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:29:47.847 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:29:47.849 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:29:47.849 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:29:47.852 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:29:47.852 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:29:47.940 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:29:47.940 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:29:47.941 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:29:47.943 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:29:47.943 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:29:47.951 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:29:49.866 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:29:49.866 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:29:49.866 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:29:49.867 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:29:49.868 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:29:49.869 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:29:49.869 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:29:49.870 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:29:49.872 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:29:50.252 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:29:50.252 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:29:50.253 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:29:50.254 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:29:50.254 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:29:50.258 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:30:20.975 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:30:20.975 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:30:20.976 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:30:20.976 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:30:20.977 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:30:20.979 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:30:25.237 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:30:25.237 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:30:25.239 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:30:25.240 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:30:25.240 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:30:25.242 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:30:27.685 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:30:27.685 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:30:27.685 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:30:27.685 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:30:27.686 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:30:27.687 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:30:27.687 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:30:27.688 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:30:27.690 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:30:27.762 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:30:27.763 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:30:27.764 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:30:27.766 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:30:27.766 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:30:27.769 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:32:36.279 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:32:36.279 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:32:36.280 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:32:36.281 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:32:36.281 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:32:36.283 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:33:00.906 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:33:00.906 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:33:00.907 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:33:00.908 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:33:00.908 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:33:00.910 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:33:36.550 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:33:36.550 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:33:36.551 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:33:36.552 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:33:36.552 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:33:36.555 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:33:44.917 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:33:44.918 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:33:44.919 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:33:44.919 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:33:44.920 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:33:44.922 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:34:21.103 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:34:21.103 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:34:21.104 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:34:21.105 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:34:21.105 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:34:21.107 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:34:26.729 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:34:26.730 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:34:26.735 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:34:26.735 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:34:26.735 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:34:26.737 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:34:26.739 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:34:26.739 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:34:26.742 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:34:27.050 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:34:27.051 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:34:27.052 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:34:27.052 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:34:27.053 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:34:27.055 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:38:06.544 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:38:06.544 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:38:06.545 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:38:06.546 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:38:06.546 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:38:06.548 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:38:09.354 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:38:09.355 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:38:09.358 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:38:09.372 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:38:09.372 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:38:09.373 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:38:09.374 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:38:09.375 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:38:09.377 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:38:09.743 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:38:09.744 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:38:09.745 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:38:09.746 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:38:09.746 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:38:09.749 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:38:32.405 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:38:32.405 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:38:32.407 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:38:32.420 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:38:32.420 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:38:32.421 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:38:32.423 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:38:32.423 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:38:32.427 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:38:32.517 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:38:32.517 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:38:32.519 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:38:32.520 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:38:32.521 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:38:32.524 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:39:01.735 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:39:01.735 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:39:01.736 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:39:01.737 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:39:01.737 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:39:01.739 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:39:25.184 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:39:25.185 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:39:25.186 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:39:25.187 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:39:25.187 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:39:25.189 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:39:33.233 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:39:33.234 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:39:33.238 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:39:33.239 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:39:33.240 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:39:33.241 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:39:33.242 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:39:33.242 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:39:33.244 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:39:33.611 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:39:33.611 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:39:33.612 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:39:33.613 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:39:33.613 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:39:33.619 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:39:53.704 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:39:53.704 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:39:53.704 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:39:53.704 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:39:53.706 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:39:53.707 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:39:53.708 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:39:53.708 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:39:53.712 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:39:53.916 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:39:53.916 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:39:53.917 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:39:53.917 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:39:53.919 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:39:53.921 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:39:53.922 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:39:53.924 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:39:53.926 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:40:04.975 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:40:04.976 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:40:04.976 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:40:04.977 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:40:04.978 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:40:04.979 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:40:06.539 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==>  Preparing: update bl_admin SET name = ?, signature = ?, username = ? where id = ? 
2020-03-28 16:40:06.539 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==> Parameters: 元宝森(String), 而立之年！(String), root(String), 1(Integer)
2020-03-28 16:40:06.541 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.update.debug:143 -<==    Updates: 1
2020-03-28 16:40:06.541 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:40:06.542 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/updateInfo(String), [Admin(id=1, name=元宝森, header=null, signature=而立之年！, comment=, username=root, password=null)](String), 1(Integer), null, PUT(String), 4(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 16:40:06.544 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:40:14.429 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:40:14.429 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6824f8aa](String), 0(Integer), com.github.tobato.fastdfs.exception.FdfsConnectException: 无法获取服务端连接资源：can't create connection to/192.168.2.137:22122
	at com.ybs.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.ybs.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.ybs.blog.controller.UploadController$$FastClassBySpringCGLIB$$795b0794.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.UploadController$$EnhancerBySpringCGLIB$$7cb35fae.uploadImage(<generated>)
Caused by: java.net.SocketTimeoutException: connect timed out
(String), POST(String), 0(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:40:14.431 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:41:06.411 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:41:06.411 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6e48cb63](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.ybs.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.ybs.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.ybs.blog.controller.UploadController$$FastClassBySpringCGLIB$$795b0794.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.UploadController$$EnhancerBySpringCGLIB$$7cb35fae.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker /192.168.2.137:22122,
(String), POST(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:41:06.414 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:41:15.559 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:41:15.560 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@a316dca](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.ybs.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.ybs.blog.controller.UploadController.uploadImage(UploadController.java:31)
	at com.ybs.blog.controller.UploadController$$FastClassBySpringCGLIB$$795b0794.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.UploadController$$EnhancerBySpringCGLIB$$7cb35fae.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker /192.168.2.137:22122,
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:41:15.563 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:00.905 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:42:00.905 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:42:00.906 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:42:00.908 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:00.908 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:00.909 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:00.910 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:00.923 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:00.924 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:00.974 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:42:00.974 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:42:00.976 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:42:00.979 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:00.979 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:00.989 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:01.272 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:01.273 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:01.275 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:06.763 DEBUG [restartedMain]com.ybs.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-03-28 16:42:13.803 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 16:42:13.818 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 16:42:13.833 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 16:42:13.884 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:13.885 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 168(Long), {"code":20000,"data":{"token":"A0563A77A02EB424625F5ED3B6D653C9"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:13.889 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:13.940 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:13.941 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:13.943 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:14.000 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:42:14.001 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:42:14.003 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:42:14.004 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:14.005 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:14.007 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:16.136 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:16.136 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:16.140 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:16.354 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:42:16.355 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:42:16.357 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:42:16.361 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:16.362 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:16.365 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:16.453 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:42:16.454 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:42:16.455 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:42:16.456 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:16.457 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"comment":"","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:16.459 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:23.687 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:23.687 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2ead047a](String), 1(Integer), null, POST(String), 262(Long), {"code":20000,"data":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","msg":"上传成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:23.689 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:28.089 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ? where id = ? 
2020-03-28 16:42:28.090 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==> Parameters: 元宝森(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png(String), 而立之年！(String), root(String), 1(Integer)
2020-03-28 16:42:28.092 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.update.debug:143 -<==    Updates: 1
2020-03-28 16:42:28.093 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:28.094 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/updateInfo(String), [Admin(id=1, name=元宝森, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, signature=而立之年！, comment=, username=root, password=null)](String), 1(Integer), null, PUT(String), 17(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:28.096 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:30.769 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:42:30.769 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:42:30.772 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:42:30.773 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:30.774 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:30.778 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:30.779 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:30.780 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:30.786 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:42:31.184 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:42:31.185 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:42:31.188 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:42:31.189 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:42:31.190 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:42:31.203 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:46:42.665 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:46:42.666 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:46:42.668 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:46:42.669 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:46:42.670 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:46:42.672 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:47:00.788 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:47:00.788 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:47:00.789 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:47:00.790 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:47:00.791 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:47:00.793 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:47:56.424 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:47:56.425 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:47:56.427 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:47:56.428 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:47:56.428 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:47:56.431 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:48:16.187 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:48:16.188 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:48:16.189 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:48:16.190 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:48:16.191 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:48:16.194 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:48:25.403 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:48:25.404 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:48:25.405 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:48:25.406 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:48:25.408 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:48:25.411 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:48:43.989 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:48:43.989 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:48:43.990 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:48:43.992 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:48:43.993 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:48:43.996 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:49:55.401 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:49:55.402 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:49:55.402 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:49:55.403 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:49:55.406 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:49:55.407 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:49:55.407 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:49:55.408 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:49:55.412 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:49:55.495 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:49:55.495 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:49:55.497 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:49:55.499 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:49:55.500 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:49:55.504 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:50:07.316 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:50:07.317 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:50:07.317 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:50:07.317 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:50:07.319 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:50:07.320 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:50:07.320 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:50:07.320 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:50:07.325 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:50:07.408 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:50:07.409 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:50:07.413 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:50:07.414 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:50:07.415 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:50:07.420 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:50:35.150 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:50:35.151 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:50:35.151 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:50:35.152 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:50:35.154 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:50:35.154 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:50:35.155 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:50:35.156 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:50:35.159 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:50:35.240 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:50:35.240 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:50:35.242 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:50:35.243 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:50:35.244 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:50:35.247 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:52:06.186 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:52:06.187 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:52:06.188 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:52:06.189 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:52:06.190 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:52:06.192 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:52:25.728 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:52:25.728 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:52:25.730 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:52:25.732 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:52:25.733 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:52:25.738 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:52:53.422 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:52:53.423 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:52:53.424 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:52:53.425 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:52:53.426 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:52:53.428 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:54:19.547 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:54:19.548 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 16:54:19.547 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:54:19.549 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 16:54:19.552 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 16:54:19.554 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:54:19.554 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:54:19.556 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:54:19.571 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 16:54:19.659 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 16:54:19.660 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 16:54:19.662 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 16:54:19.663 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 16:54:19.664 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 16:54:19.669 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:04:56.718 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:04:56.718 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:04:56.720 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:04:56.721 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:04:56.721 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:04:56.723 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:05:05.370 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:05:05.370 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:05:05.371 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:05:05.372 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:05:05.372 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:05:05.374 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:05:37.307 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:05:37.308 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:05:37.309 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:05:37.310 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:05:37.310 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:05:37.312 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:06:04.205 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:06:04.206 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:06:04.207 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:06:04.208 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:06:04.208 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:06:04.210 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:06:09.856 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:06:09.856 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:06:09.858 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:06:09.859 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:06:09.859 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:06:09.861 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:06:13.962 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:06:13.962 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:06:13.963 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:06:13.964 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:06:13.965 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:06:13.969 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:06:17.074 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:06:17.074 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:06:17.075 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:06:17.076 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:06:17.076 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:06:17.078 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:06:36.836 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:06:36.836 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:06:36.837 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:06:36.838 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:06:36.838 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:06:36.840 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:08:43.635 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:08:43.635 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:08:43.636 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:08:43.637 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:08:43.637 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:08:43.640 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:09:14.785 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:09:14.786 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:09:14.788 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:09:14.789 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:09:14.789 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:09:14.793 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:09:17.723 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:09:17.723 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:09:17.724 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:09:17.726 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:09:17.726 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:09:17.726 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:09:17.727 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:09:17.732 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:09:17.739 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:09:18.121 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:09:18.121 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:09:18.122 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:09:18.124 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:09:18.124 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:09:18.130 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:09:37.159 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:09:37.159 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:09:37.160 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:09:37.161 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:09:37.161 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:09:37.163 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:10:46.714 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:10:46.715 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:10:46.716 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:10:46.717 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:10:46.718 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:10:46.719 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:10:46.720 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:10:46.721 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:10:46.727 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:10:47.093 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:10:47.093 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:10:47.094 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:10:47.095 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:10:47.096 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:10:47.108 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:11:08.013 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:11:08.013 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:11:08.013 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:11:08.013 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:11:08.014 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:11:08.016 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:11:08.017 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:11:08.018 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:11:08.021 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:11:08.394 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:11:08.395 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:11:08.396 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:11:08.397 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:11:08.397 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:11:08.403 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:11:56.545 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:11:56.546 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:11:56.551 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:11:56.552 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:11:56.554 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:11:56.556 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:11:56.556 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:11:56.556 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:11:56.560 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:11:56.932 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:11:56.933 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:11:56.934 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:11:56.935 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:11:56.936 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:11:56.940 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:12:20.159 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:12:20.159 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:12:20.164 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:12:20.169 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:12:20.170 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:12:20.171 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:12:20.172 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:12:20.172 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:12:20.174 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:12:20.253 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:12:20.253 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:12:20.255 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:12:20.256 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:12:20.256 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:12:20.273 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:15:58.071 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:15:58.072 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:15:58.073 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:15:58.073 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ?, password = ? where id = ? 
2020-03-28 17:15:58.074 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==> Parameters: 元宝森(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png(String), 而立之年！(String), root(String), 123456(String), 1(Integer)
2020-03-28 17:15:58.076 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.update.debug:143 -<==    Updates: 1
2020-03-28 17:15:58.077 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:15:58.077 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/updatePassword(String), [Admin(id=1, name=元宝森, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, signature=而立之年！, comment=, username=root, password=123456)](String), 1(Integer), null, PUT(String), 8(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 17:15:58.079 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:16:41.865 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:16:41.866 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:16:41.869 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:16:41.870 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:16:41.870 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:16:41.870 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:16:41.870 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:16:41.873 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:16:41.873 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:16:41.958 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:16:41.958 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:16:41.960 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:16:41.961 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:16:41.962 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:16:41.970 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:16:52.496 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:16:52.496 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:16:52.500 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:16:52.500 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:16:52.502 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:16:52.503 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:16:52.503 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:16:52.504 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:16:52.507 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:16:52.888 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:16:52.888 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:16:52.889 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:16:52.890 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:16:52.890 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:16:52.893 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:17:25.034 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:17:25.035 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:17:25.042 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:17:25.043 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:17:25.044 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:17:25.045 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:17:25.045 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:17:25.049 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:17:25.052 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:17:25.134 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:17:25.134 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:17:25.135 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:17:25.136 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:17:25.137 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:17:25.145 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:18:34.170 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:18:34.171 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:18:34.173 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:18:34.175 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:18:34.175 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:18:34.178 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:18:34.179 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:18:34.179 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:18:34.181 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:18:34.559 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:18:34.560 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:18:34.561 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:18:34.562 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:18:34.563 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:18:34.572 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:18:40.293 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:18:40.294 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:18:40.295 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:18:40.296 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ?, password = ? where id = ? 
2020-03-28 17:18:40.296 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==> Parameters: 元宝森(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png(String), 而立之年！(String), root(String), e10adc3949ba59abbe56e057f20f883e(String), 1(Integer)
2020-03-28 17:18:40.300 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.update.debug:143 -<==    Updates: 1
2020-03-28 17:18:40.301 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:18:40.302 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/updatePassword(String), [Admin(id=1, name=元宝森, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, signature=而立之年！, comment=, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, PUT(String), 7(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 17:18:40.305 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:19:08.873 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:19:08.873 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:19:08.873 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:19:08.873 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:19:08.875 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:19:08.876 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:19:08.876 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:19:08.876 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:19:08.880 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:19:09.263 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:19:09.263 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:19:09.264 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:19:09.265 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:19:09.265 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:19:09.270 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:19:16.812 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:19:16.813 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:19:16.814 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:19:16.814 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ?, password = ? where id = ? 
2020-03-28 17:19:16.815 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==> Parameters: 元宝森(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png(String), 而立之年！(String), root(String), e10adc3949ba59abbe56e057f20f883e(String), 1(Integer)
2020-03-28 17:19:16.818 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.update.debug:143 -<==    Updates: 1
2020-03-28 17:19:16.819 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:19:16.820 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/updatePassword(String), [Admin(id=1, name=元宝森, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, signature=而立之年！, comment=, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, PUT(String), 7(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 17:19:16.823 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:19:53.987 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:19:53.987 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:19:53.988 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:19:53.988 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:19:53.989 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:19:53.990 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:19:53.991 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:19:53.991 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:19:53.994 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:19:54.370 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:19:54.371 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:19:54.372 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:19:54.373 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:19:54.374 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:19:54.377 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:19:59.990 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:19:59.991 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:19:59.992 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:19:59.992 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ?, password = ? where id = ? 
2020-03-28 17:19:59.993 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==> Parameters: 元宝森(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png(String), 而立之年！(String), root(String), e10adc3949ba59abbe56e057f20f883e(String), 1(Integer)
2020-03-28 17:19:59.994 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.update.debug:143 -<==    Updates: 1
2020-03-28 17:19:59.995 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:19:59.995 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/updatePassword(String), [Admin(id=1, name=元宝森, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, signature=而立之年！, comment=, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, PUT(String), 6(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 17:19:59.998 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:21:20.392 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:21:20.393 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:21:20.393 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:21:20.394 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:21:20.394 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:21:20.396 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:21:20.396 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:21:20.398 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:21:20.413 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:21:20.777 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:21:20.777 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:21:20.778 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:21:20.779 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:21:20.779 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:21:20.781 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:21:32.781 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:21:32.781 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:21:32.783 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:21:32.784 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:21:32.785 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:21:32.789 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:21:48.105 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:21:48.105 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:21:48.106 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:21:48.107 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:21:48.107 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:21:48.109 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:21:59.283 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:21:59.284 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:21:59.285 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:21:59.287 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:21:59.287 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:21:59.292 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:22:01.785 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:22:01.785 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:22:01.787 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:22:01.788 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:22:01.788 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:22:01.790 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:22:37.185 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:22:37.185 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:22:37.186 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:22:37.187 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:22:37.188 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:22:37.190 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:24:35.194 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ? where id = ? 
2020-03-28 17:24:35.194 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==> Parameters: 元宝森(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png(String), 一、无论你多么努力地让自己做到完美，始终会有一群人指着你的背影比比划划。他们未必是坏人，只是看不懂你的活法。所以，洒脱最重要。

二、感情就是这样，我失望到顶点后，就再不会回头了。不是不勇敢，也不是怕受伤，只是觉得自己不该为了一个错的你，再继续做错的决定。毕竟，你有你的执着，我也有我的洒脱。


三、我就想做一个特别拽，走路带风，有自己事业，想买就买，想吃就吃，谁都不屌的那种。

四、钱没了可以挣回来，今天过了就再也没有了。


五、别和我装你活得精彩过得幸福，也别祝我过得幸福，你有那资格吗？

六、凡事先讨好自己，至于别人，分交情，看心情，做人就要酷一点。


七、你热一分，我进一分，你冷一分，我退一分，你不咸不淡，我未必一往情深。

八、把你捧起来的人，请不要让他们倒下；把你扳倒的人，死都不要让他们站起来！


九、好不容易习惯了自己的长相，理了个发，又换了一种丑法。

十、别人怎么对你，你就怎么对他，生而为人，大家都是第一次，没必要惯着谁。


十一、 打是亲，骂是爱，爱得不够用脚踹！

十二、 讨厌一个人和喜欢一个人是一样的，都是不需要任何理由的。


十三、 女孩子晚上千万不要一个人出门，真的很危险，满大街的烧烤夜宵甜点，没人劝阻，忍不住随便进一家，就要长好几斤。

十四、 你可以肆无忌惮的数落我，可别触碰到我的底线，不然你会后悔万分，毕竟每个人发怒起来，都是无法抵挡的。


十五、 很多人说婚姻是爱情的坟墓，但是能够入土为安的爱情，总比暴尸街头要好。

十六、 未曾清贫难做人，不经打击永天真。成熟不过是善于隐藏，沧桑不过是无泪有伤！


十七、 有些人注定是你生命里的癌症，而有些人只是一个喷嚏而已。该留的留，该滚的滚！

十八、 别说我高傲，我只是不与禽兽打交道。


十九、 有时候真的想把心掏出来，一把甩出去，然后说：你疼啥疼，没出息的东西。

二十、 发呆这事儿，如果做得好就叫深沉。如果做得不好，那就很有可能睡着。


二十一、 人生就像饺子，无论是被拖下水，还是自己跳下水，一生中不蹚一次浑水就不算成熟。

二十二、 所谓矫情，就是明明在赌气，偏偏做出一副看破世事的样子，动不动就说自己已经心冷。


二十三、 喜欢就告白，讨厌就离开，不舍就挽留，放弃就成全，坦坦荡荡的表达比畏畏缩缩的躲藏痛快多了。(String), root(String), 1(Integer)
2020-03-28 17:24:35.298 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:24:35.298 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/updateInfo(String), [Admin(id=1, name=元宝森, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, signature=一、无论你多么努力地让自己做到完美，始终会有一群人指着你的背影比比划划。他们未必是坏人，只是看不懂你的活法。所以，洒脱最重要。

二、感情就是这样，我失望到顶点后，就再不会回头了。不是不勇敢，也不是怕受伤，只是觉得自己不该为了一个错的你，再继续做错的决定。毕竟，你有你的执着，我也有我的洒脱。


三、我就想做一个特别拽，走路带风，有自己事业，想买就买，想吃就吃，谁都不屌的那种。

四、钱没了可以挣回来，今天过了就再也没有了。


五、别和我装你活得精彩过得幸福，也别祝我过得幸福，你有那资格吗？

六、凡事先讨好自己，至于别人，分交情，看心情，做人就要酷一点。


七、你热一分，我进一分，你冷一分，我退一分，你不咸不淡，我未必一往情深。

八、把你捧起来的人，请不要让他们倒下；把你扳倒的人，死都不要让他们站起来！


九、好不容易习惯了自己的长相，理了个发，又换了一种丑法。

十、别人怎么对你，你就怎么对他，生而为人，大家都是第一次，没必要惯着谁。


十一、 打是亲，骂是爱，爱得不够用脚踹！

十二、 讨厌一个人和喜欢一个人是一样的，都是不需要任何理由的。


十三、 女孩子晚上千万不要一个人出门，真的很危险，满大街的烧烤夜宵甜点，没人劝阻，忍不住随便进一家，就要长好几斤。

十四、 你可以肆无忌惮的数落我，可别触碰到我的底线，不然你会后悔万分，毕竟每个人发怒起来，都是无法抵挡的。


十五、 很多人说婚姻是爱情的坟墓，但是能够入土为安的爱情，总比暴尸街头要好。

十六、 未曾清贫难做人，不经打击永天真。成熟不过是善于隐藏，沧桑不过是无泪有伤！


十七、 有些人注定是你生命里的癌症，而有些人只是一个喷嚏而已。该留的留，该滚的滚！

十八、 别说我高傲，我只是不与禽兽打交道。


十九、 有时候真的想把心掏出来，一把甩出去，然后说：你疼啥疼，没出息的东西。

二十、 发呆这事儿，如果做得好就叫深沉。如果做得不好，那就很有可能睡着。


二十一、 人生就像饺子，无论是被拖下水，还是自己跳下水，一生中不蹚一次浑水就不算成熟。

二十二、 所谓矫情，就是明明在赌气，偏偏做出一副看破世事的样子，动不动就说自己已经心冷。


二十三、 喜欢就告白，讨厌就离开，不舍就挽留，放弃就成全，坦坦荡荡的表达比畏畏缩缩的躲藏痛快多了。, comment=, username=root, password=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), PUT(String), 0(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:24:35.301 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:24:50.834 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:24:50.834 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:24:50.836 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:24:50.836 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:24:50.838 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:24:50.839 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:24:50.839 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:24:50.839 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":5,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:24:50.842 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:24:54.007 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 17:24:54.008 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 17:24:54.012 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 17:24:54.013 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 17:24:54.014 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:24:54.016 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:24:54.024 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:24:54.024 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 40(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:24:54.026 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:25:28.920 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:25:28.920 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@799ae411](String), 1(Integer), null, POST(String), 55(Long), {"code":20000,"data":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_GAiALIqMABwfA1Gk3LI942.png","msg":"上传成功"}(String), 127.0.0.1(String)
2020-03-28 17:25:28.922 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:25:37.273 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.save.debug:143 -==>  Preparing: insert into bl_blog( blog_id, blog_title, blog_image, blog_content, blog_type, blog_remark,blog_source ) values ( ?,?, ?, ?, ?, ?, ? ) 
2020-03-28 17:25:37.273 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.save.debug:143 -==> Parameters: 1243831599590633472(String), 签名(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_GAiALIqMABwfA1Gk3LI942.png(String), <p>一、无论你多么努力地让自己做到完美，始终会有一群人指着你的背影比比划划。他们未必是坏人，只是看不懂你的活法。所以，洒脱最重要。</p>
<p>二、感情就是这样，我失望到顶点后，就再不会回头了。不是不勇敢，也不是怕受伤，只是觉得自己不该为了一个错的你，再继续做错的决定。毕竟，你有你的执着，我也有我的洒脱。</p>
<p><br />三、我就想做一个特别拽，走路带风，有自己事业，想买就买，想吃就吃，谁都不屌的那种。</p>
<p>四、钱没了可以挣回来，今天过了就再也没有了。</p>
<p><br />五、别和我装你活得精彩过得幸福，也别祝我过得幸福，你有那资格吗？</p>
<p>六、凡事先讨好自己，至于别人，分交情，看心情，做人就要酷一点。</p>
<p><br />七、你热一分，我进一分，你冷一分，我退一分，你不咸不淡，我未必一往情深。</p>
<p>八、把你捧起来的人，请不要让他们倒下；把你扳倒的人，死都不要让他们站起来！</p>
<p><br />九、好不容易习惯了自己的长相，理了个发，又换了一种丑法。</p>
<p>十、别人怎么对你，你就怎么对他，生而为人，大家都是第一次，没必要惯着谁。</p>
<p><br />十一、 打是亲，骂是爱，爱得不够用脚踹！</p>
<p>十二、 讨厌一个人和喜欢一个人是一样的，都是不需要任何理由的。</p>
<p><br />十三、 女孩子晚上千万不要一个人出门，真的很危险，满大街的烧烤夜宵甜点，没人劝阻，忍不住随便进一家，就要长好几斤。</p>
<p>十四、 你可以肆无忌惮的数落我，可别触碰到我的底线，不然你会后悔万分，毕竟每个人发怒起来，都是无法抵挡的。</p>
<p><br />十五、 很多人说婚姻是爱情的坟墓，但是能够入土为安的爱情，总比暴尸街头要好。</p>
<p>十六、 未曾清贫难做人，不经打击永天真。成熟不过是善于隐藏，沧桑不过是无泪有伤！</p>
<p><br />十七、 有些人注定是你生命里的癌症，而有些人只是一个喷嚏而已。该留的留，该滚的滚！</p>
<p>十八、 别说我高傲，我只是不与禽兽打交道。</p>
<p><br />十九、 有时候真的想把心掏出来，一把甩出去，然后说：你疼啥疼，没出息的东西。</p>
<p>二十、 发呆这事儿，如果做得好就叫深沉。如果做得不好，那就很有可能睡着。</p>
<p><br />二十一、 人生就像饺子，无论是被拖下水，还是自己跳下水，一生中不蹚一次浑水就不算成熟。</p>
<p>二十二、 所谓矫情，就是明明在赌气，偏偏做出一副看破世事的样子，动不动就说自己已经心冷。</p>
<p><br />二十三、 喜欢就告白，讨厌就离开，不舍就挽留，放弃就成全，坦坦荡荡的表达比畏畏缩缩的躲藏痛快多了。</p>(String), 17(Integer), null, CSDN(String)
2020-03-28 17:25:37.275 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:25:37.275 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-03-28 17:25:37.275 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -==> Parameters: 17(Integer)
2020-03-28 17:25:37.277 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getById.debug:143 -<==      Total: 1
2020-03-28 17:25:37.278 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-03-28 17:25:37.278 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -==> Parameters: 测试(String), 6(Integer), 1(Integer), 17(Integer)
2020-03-28 17:25:37.280 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.update.debug:143 -<==    Updates: 1
2020-03-28 17:25:37.284 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:25:37.284 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/save(String), [Blog(blogId=, blogTitle=签名, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_GAiALIqMABwfA1Gk3LI942.png, blogContent=<p>一、无论你多么努力地让自己做到完美，始终会有一群人指着你的背影比比划划。他们未必是坏人，只是看不懂你的活法。所以，洒脱最重要。</p>
<p>二、感情就是这样，我失望到顶点后，就再不会回头了。不是不勇敢，也不是怕受伤，只是觉得自己不该为了一个错的你，再继续做错的决定。毕竟，你有你的执着，我也有我的洒脱。</p>
<p><br />三、我就想做一个特别拽，走路带风，有自己事业，想买就买，想吃就吃，谁都不屌的那种。</p>
<p>四、钱没了可以挣回来，今天过了就再也没有了。</p>
<p><br />五、别和我装你活得精彩过得幸福，也别祝我过得幸福，你有那资格吗？</p>
<p>六、凡事先讨好自己，至于别人，分交情，看心情，做人就要酷一点。</p>
<p><br />七、你热一分，我进一分，你冷一分，我退一分，你不咸不淡，我未必一往情深。</p>
<p>八、把你捧起来的人，请不要让他们倒下；把你扳倒的人，死都不要让他们站起来！</p>
<p><br />九、好不容易习惯了自己的长相，理了个发，又换了一种丑法。</p>
<p>十、别人怎么对你，你就怎么对他，生而为人，大家都是第一次，没必要惯着谁。</p>
<p><br />十一、 打是亲，骂是爱，爱得不够用脚踹！</p>
<p>十二、 讨厌一个人和喜欢一个人是一样的，都是不需要任何理由的。</p>
<p><br />十三、 女孩子晚上千万不要一个人出门，真的很危险，满大街的烧烤夜宵甜点，没人劝阻，忍不住随便进一家，就要长好几斤。</p>
<p>十四、 你可以肆无忌惮的数落我，可别触碰到我的底线，不然你会后悔万分，毕竟每个人发怒起来，都是无法抵挡的。</p>
<p><br />十五、 很多人说婚姻是爱情的坟墓，但是能够入土为安的爱情，总比暴尸街头要好。</p>
<p>十六、 未曾清贫难做人，不经打击永天真。成熟不过是善于隐藏，沧桑不过是无泪有伤！</p>
<p><br />十七、 有些人注定是你生命里的癌症，而有些人只是一个喷嚏而已。该留的留，该滚的滚！</p>
<p>十八、 别说我高傲，我只是不与禽兽打交道。</p>
<p><br />十九、 有时候真的想把心掏出来，一把甩出去，然后说：你疼啥疼，没出息的东西。</p>
<p>二十、 发呆这事儿，如果做得好就叫深沉。如果做得不好，那就很有可能睡着。</p>
<p><br />二十一、 人生就像饺子，无论是被拖下水，还是自己跳下水，一生中不蹚一次浑水就不算成熟。</p>
<p>二十二、 所谓矫情，就是明明在赌气，偏偏做出一副看破世事的样子，动不动就说自己已经心冷。</p>
<p><br />二十三、 喜欢就告白，讨厌就离开，不舍就挽留，放弃就成全，坦坦荡荡的表达比畏畏缩缩的躲藏痛快多了。</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=17, blogRemark=null, blogComment=null, blogSource=CSDN, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-03-28 17:25:37.288 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:25:37.622 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 17:25:37.622 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 17:25:37.625 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 17:25:37.626 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 17:25:37.626 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:25:37.627 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:25:37.629 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:25:37.629 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 19:45:00), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=SringBoot, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 19:46:38), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:25:37.632 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:25:40.803 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 17:25:40.803 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 10(Integer), 10(Integer)
2020-03-28 17:25:40.805 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 17:25:40.806 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 17:25:40.806 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:25:40.807 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:25:40.808 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:25:40.809 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=10, totalPage=2, totalCount=12, list=[BlogVo(blogId=1243556486165114880, blogTitle=SpringCloud 基础 Eureka、Ribbon, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=测试关闭, blogComment=0, blogSource=CSDB, createdTime=2020-03-27 15:12:24, updateTime=2020-03-27 17:27:01), BlogVo(blogId=1243556672912306176, blogTitle= 统计每个字符出现的次数, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JAVA, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-27 15:13:09, updateTime=2020-03-27 17:27:42), BlogVo(blogId=1243557755814490112, blogTitle=python 字符串格式化——推荐“f-字符串”和“str.format()函数”, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:17:27, updateTime=2020-03-27 15:17:27), BlogVo(blogId=1243558442237505536, blogTitle=Python Mysql, blogImage=null, blogContent=null, blogGoods=1, blogRead=0, blogCollection=0, typeName=数据库, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 15:20:11, updateTime=2020-03-27 18:30:43), BlogVo(blogId=1243559186332200960, blogTitle=测试1, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Python, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:08, updateTime=2020-03-27 19:45:00), BlogVo(blogId=1243559262504955904, blogTitle=测试2, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:26, updateTime=2020-03-27 18:30:46), BlogVo(blogId=1243559290439020544, blogTitle=测试3, blogImage=测封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测备注, blogComment=0, blogSource=测来源, createdTime=2020-03-27 15:23:33, updateTime=2020-03-27 15:23:33), BlogVo(blogId=1243559656568205312, blogTitle=测试5, blogImage=测试封面, blogContent=null, blogGoods=0, blogRead=0, blogCollection=1, typeName=测试, blogRemark=测试备注, blogComment=1, blogSource=测试来源, createdTime=2020-03-27 15:25:00, updateTime=2020-03-27 18:30:51), BlogVo(blogId=1243575371052441600, blogTitle=fastDFS 上传图片, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png, blogContent=null, blogGoods=0, blogRead=222, blogCollection=0, typeName=SringBoot, blogRemark=上传图片, blogComment=0, blogSource=fastdfs, createdTime=2020-03-27 16:27:27, updateTime=2020-03-27 19:46:38), BlogVo(blogId=1243587486622507008, blogTitle=测试是否还能带出信息, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=测试是否还能带出信息, blogComment=0, blogSource=测试是否还能带出信息, createdTime=2020-03-27 17:15:35, updateTime=2020-03-27 17:18:02)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243625778541801472","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-WFiAW_ooAAB1dQXDf2s092.jpg","blogRead":0,"blogTitle":"Ajax","createdTime":"2020-03-27 19:47:44","typeName":"前端","updateTime":"2020-03-27 19:47:44"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243831599590633472","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_GAiALIqMABwfA1Gk3LI942.png","blogRead":0,"blogSource":"CSDN","blogTitle":"签名","createdTime":"2020-03-28 09:25:37","typeName":"测试","updateTime":"2020-03-28 09:25:37"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:25:40.811 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:25:44.938 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-03-28 17:25:44.938 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -==> Parameters: 1243831599590633472(String)
2020-03-28 17:25:44.941 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.BlogMapper.getById.debug:143 -<==      Total: 1
2020-03-28 17:25:44.944 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:25:44.944 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/get/1243831599590633472(String), [1243831599590633472](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>一、无论你多么努力地让自己做到完美，始终会有一群人指着你的背影比比划划。他们未必是坏人，只是看不懂你的活法。所以，洒脱最重要。</p>\n<p>二、感情就是这样，我失望到顶点后，就再不会回头了。不是不勇敢，也不是怕受伤，只是觉得自己不该为了一个错的你，再继续做错的决定。毕竟，你有你的执着，我也有我的洒脱。</p>\n<p><br />三、我就想做一个特别拽，走路带风，有自己事业，想买就买，想吃就吃，谁都不屌的那种。</p>\n<p>四、钱没了可以挣回来，今天过了就再也没有了。</p>\n<p><br />五、别和我装你活得精彩过得幸福，也别祝我过得幸福，你有那资格吗？</p>\n<p>六、凡事先讨好自己，至于别人，分交情，看心情，做人就要酷一点。</p>\n<p><br />七、你热一分，我进一分，你冷一分，我退一分，你不咸不淡，我未必一往情深。</p>\n<p>八、把你捧起来的人，请不要让他们倒下；把你扳倒的人，死都不要让他们站起来！</p>\n<p><br />九、好不容易习惯了自己的长相，理了个发，又换了一种丑法。</p>\n<p>十、别人怎么对你，你就怎么对他，生而为人，大家都是第一次，没必要惯着谁。</p>\n<p><br />十一、 打是亲，骂是爱，爱得不够用脚踹！</p>\n<p>十二、 讨厌一个人和喜欢一个人是一样的，都是不需要任何理由的。</p>\n<p><br />十三、 女孩子晚上千万不要一个人出门，真的很危险，满大街的烧烤夜宵甜点，没人劝阻，忍不住随便进一家，就要长好几斤。</p>\n<p>十四、 你可以肆无忌惮的数落我，可别触碰到我的底线，不然你会后悔万分，毕竟每个人发怒起来，都是无法抵挡的。</p>\n<p><br />十五、 很多人说婚姻是爱情的坟墓，但是能够入土为安的爱情，总比暴尸街头要好。</p>\n<p>十六、 未曾清贫难做人，不经打击永天真。成熟不过是善于隐藏，沧桑不过是无泪有伤！</p>\n<p><br />十七、 有些人注定是你生命里的癌症，而有些人只是一个喷嚏而已。该留的留，该滚的滚！</p>\n<p>十八、 别说我高傲，我只是不与禽兽打交道。</p>\n<p><br />十九、 有时候真的想把心掏出来，一把甩出去，然后说：你疼啥疼，没出息的东西。</p>\n<p>二十、 发呆这事儿，如果做得好就叫深沉。如果做得不好，那就很有可能睡着。</p>\n<p><br />二十一、 人生就像饺子，无论是被拖下水，还是自己跳下水，一生中不蹚一次浑水就不算成熟。</p>\n<p>二十二、 所谓矫情，就是明明在赌气，偏偏做出一副看破世事的样子，动不动就说自己已经心冷。</p>\n<p><br />二十三、 喜欢就告白，讨厌就离开，不舍就挽留，放弃就成全，坦坦荡荡的表达比畏畏缩缩的躲藏痛快多了。</p>","blogGoods":0,"blogId":"1243831599590633472","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_GAiALIqMABwfA1Gk3LI942.png","blogRead":0,"blogSource":"CSDN","blogTitle":"签名","blogType":17,"createdTime":"2020-03-28 09:25:37","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:25:44.947 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:26:12.698 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ? where id = ? 
2020-03-28 17:26:12.699 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.update.debug:143 -==> Parameters: 元宝森(String), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png(String), 钱没了可以挣回来，今天过了就再也没有了。(String), root(String), 1(Integer)
2020-03-28 17:26:12.702 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.update.debug:143 -<==    Updates: 1
2020-03-28 17:26:12.702 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:26:12.703 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/updateInfo(String), [Admin(id=1, name=元宝森, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, signature=钱没了可以挣回来，今天过了就再也没有了。, comment=, username=root, password=null)](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-03-28 17:26:12.704 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:26:18.136 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:26:18.136 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:26:18.137 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:26:18.138 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:26:18.138 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:26:18.140 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:27:49.506 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 17:27:49.506 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 17:27:49.509 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 17:27:49.510 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 17:27:49.510 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:27:49.511 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:27:49.512 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:27:49.512 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[BlogVo(blogId=1243625778541801472, blogTitle=Ajax, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-WFiAW_ooAAB1dQXDf2s092.jpg, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=前端, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-03-27 19:47:44, updateTime=2020-03-27 19:47:44), BlogVo(blogId=1243831599590633472, blogTitle=签名, blogImage=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_GAiALIqMABwfA1Gk3LI942.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=测试, blogRemark=null, blogComment=0, blogSource=CSDN, createdTime=2020-03-28 09:25:37, updateTime=2020-03-28 09:25:37)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:27:49.515 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:28:35.208 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:28:35.209 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:28:35.212 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:28:35.274 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:28:35.274 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:28:35.275 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:28:35.276 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:28:35.277 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:28:35.279 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:28:35.527 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 17:28:35.527 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 17:28:35.530 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 17:28:35.531 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 17:28:35.531 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:28:35.533 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:28:35.536 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:28:35.537 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:28:35.539 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:28:37.260 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:28:37.260 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:28:37.261 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:28:37.262 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:28:37.263 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:28:37.264 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:28:37.264 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:28:37.266 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:28:37.272 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:28:37.360 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:28:37.360 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:28:37.362 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:28:37.362 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:28:37.363 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:28:37.373 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:30:15.084 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:30:15.085 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"name":"元宝森","password":"","signature":"而立之年！","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:30:15.087 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:30:15.093 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:30:15.093 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:30:15.097 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:30:15.098 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:30:15.099 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 6(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:30:15.103 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:30:23.376 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 17:30:23.376 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 17:30:23.377 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 17:30:23.377 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:30:23.377 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"token":"D42E753CDCA0BDACB42A3258B1B9A015"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:30:23.380 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:30:23.700 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:30:23.701 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:30:23.703 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:37:31.703 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:37:31.704 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:37:31.705 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:37:31.705 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:37:31.708 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:37:31.710 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:37:31.710 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:37:31.713 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:37:31.717 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:37:31.752 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:37:31.752 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:37:31.754 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:37:32.055 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:37:32.055 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:37:32.056 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:37:32.057 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:37:32.058 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:37:32.059 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:37:32.092 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 17:37:32.093 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 17:37:32.095 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 17:37:32.096 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 17:37:32.097 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:37:32.098 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:37:32.102 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:37:32.103 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:37:32.106 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:37:59.468 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:37:59.468 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:37:59.469 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:37:59.470 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:37:59.470 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:37:59.473 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:45:46.609 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:45:46.609 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:45:46.610 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:45:46.610 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:45:46.615 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:45:46.617 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:45:46.617 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:45:46.622 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:45:46.622 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:45:46.704 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:45:46.704 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:45:46.708 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:45:46.709 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:45:46.709 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:45:46.723 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:14.679 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:14.679 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:14.680 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:46:14.680 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:46:14.682 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:46:14.683 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:14.684 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:14.686 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:14.693 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:14.747 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:46:14.747 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:14.747 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:46:14.748 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:14.749 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:46:14.751 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:14.751 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:14.752 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:14.755 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:14.817 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:46:14.818 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:46:14.821 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:46:14.823 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:14.823 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:14.861 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:15.207 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 17:46:15.208 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 17:46:15.210 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 17:46:15.211 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 17:46:15.211 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:46:15.213 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:46:15.215 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:15.215 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:15.221 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:32.278 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:46:32.278 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:32.279 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:46:32.279 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:32.280 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:46:32.281 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:32.282 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:32.284 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:32.290 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:32.349 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:32.348 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:46:32.350 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:46:32.350 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:32.353 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:46:32.354 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:32.354 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:32.355 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:32.358 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:32.389 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:46:32.390 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:46:32.407 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:46:32.408 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:32.409 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:32.428 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:33.096 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 17:46:33.096 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 17:46:33.098 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 17:46:33.098 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 17:46:33.099 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:46:33.100 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:46:33.102 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:33.103 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:33.105 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:36.955 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:46:36.955 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:46:36.955 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:36.956 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:36.956 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:46:36.958 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:36.958 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:36.958 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:36.962 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:37.276 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:37.276 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:37.278 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:37.297 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:46:37.298 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:46:37.297 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:46:37.298 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:46:37.304 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:46:37.304 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:46:37.305 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:37.305 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:37.305 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:37.305 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:37.309 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:37.311 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:37.543 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time, type_name from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 limit ?, ? 
2020-03-28 17:46:37.543 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 10(Integer)
2020-03-28 17:46:37.556 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getByPage.debug:143 -<==      Total: 10
2020-03-28 17:46:37.557 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_blog as blog inner join bl_type as t on type_id = blog_type where t.deleted = 0 and blog.deleted = 0 
2020-03-28 17:46:37.557 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:46:37.568 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.BlogMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:46:37.591 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:37.592 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 81(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556486165114880","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N2OAI5VQAA5CNIargnY486.png","blogRead":0,"blogRemark":"测试关闭","blogSource":"CSDB","blogTitle":"SpringCloud 基础 Eureka、Ribbon","createdTime":"2020-03-27 15:12:24","typeName":"JAVA","updateTime":"2020-03-27 17:27:01"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243556672912306176","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-N4mAblUZABwfA1Gk3LI947.png","blogRead":0,"blogSource":"CSDN","blogTitle":" 统计每个字符出现的次数","createdTime":"2020-03-27 15:13:09","typeName":"JAVA","updateTime":"2020-03-27 17:27:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243557755814490112","blogRead":0,"blogTitle":"python 字符串格式化——推荐“f-字符串”和“str.format()函数”","createdTime":"2020-03-27 15:17:27","typeName":"Python","updateTime":"2020-03-27 15:17:27"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1243558442237505536","blogRead":0,"blogTitle":"Python Mysql","createdTime":"2020-03-27 15:20:11","typeName":"数据库","updateTime":"2020-03-27 18:30:43"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559186332200960","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试1","createdTime":"2020-03-27 15:23:08","typeName":"Python","updateTime":"2020-03-27 19:45:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559262504955904","blogImage":"测封面","blogRead":1,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试2","createdTime":"2020-03-27 15:23:26","typeName":"测试","updateTime":"2020-03-27 18:30:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243559290439020544","blogImage":"测封面","blogRead":0,"blogRemark":"测备注","blogSource":"测来源","blogTitle":"测试3","createdTime":"2020-03-27 15:23:33","typeName":"测试","updateTime":"2020-03-27 15:23:33"},{"blogCollection":1,"blogComment":1,"blogGoods":0,"blogId":"1243559656568205312","blogImage":"测试封面","blogRead":0,"blogRemark":"测试备注","blogSource":"测试来源","blogTitle":"测试5","createdTime":"2020-03-27 15:25:00","typeName":"测试","updateTime":"2020-03-27 18:30:51"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243575371052441600","blogImage":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5-KR2AagSwAFtsvbS_5Vo578.png","blogRead":222,"blogRemark":"上传图片","blogSource":"fastdfs","blogTitle":"fastDFS 上传图片","createdTime":"2020-03-27 16:27:27","typeName":"SringBoot","updateTime":"2020-03-27 19:46:38"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1243587486622507008","blogRead":0,"blogRemark":"测试是否还能带出信息","blogSource":"测试是否还能带出信息","blogTitle":"测试是否还能带出信息","createdTime":"2020-03-27 17:15:35","typeName":"测试","updateTime":"2020-03-27 17:18:02"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:37.600 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:46:54.024 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 17:46:54.024 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 17:46:54.025 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 17:46:54.026 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:46:54.027 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:46:54.029 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:47:25.313 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:47:25.314 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:47:25.315 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 17:47:25.317 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:47:25.317 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:47:25.319 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:47:25.324 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:47:25.325 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:58:12","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:55:41","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:47:25.327 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:47:38.210 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:47:38.210 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:47:38.211 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:47:38.213 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:47:38.213 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:47:38.214 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:47:38.214 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:47:38.220 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:47:38.221 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:47:38.309 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:47:38.310 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:47:38.312 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 17:47:38.313 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:47:38.313 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:47:38.323 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:47:38.323 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:47:38.324 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:58:12","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:55:41","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:47:38.347 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:48:00.102 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:48:00.103 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:48:00.106 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:48:00.106 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:48:00.108 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:48:00.108 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:48:00.109 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:48:00.109 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:48:00.112 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:48:00.210 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:48:00.211 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:48:00.215 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 17:48:00.217 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:48:00.218 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:48:00.227 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:48:00.228 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:48:00.229 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:58:12","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:55:41","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:48:00.240 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:48:04.670 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:48:04.670 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:48:04.670 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:48:04.670 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:48:04.671 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:48:04.672 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:48:04.673 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:48:04.673 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:48:04.676 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:48:05.059 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:48:05.059 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:48:05.061 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 17:48:05.061 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:48:05.061 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:48:05.062 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:48:05.063 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:48:05.064 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:58:12","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:55:41","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:48:05.072 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:51:13.993 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:51:13.993 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:51:13.995 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 17:51:13.996 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:51:13.996 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:51:13.997 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:51:13.998 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:51:13.998 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:58:12","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:55:41","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:51:14.006 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:51:23.095 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:51:23.095 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:51:23.096 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 17:51:23.097 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:51:23.097 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:51:23.098 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:51:23.100 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:51:23.100 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:58:12","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:55:41","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:51:23.104 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:51:43.543 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:51:43.543 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:51:43.544 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 17:51:43.545 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:51:43.545 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:51:43.548 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:51:43.549 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:51:43.549 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:58:12","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:55:41","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:51:43.556 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:51:58.396 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:51:58.396 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:51:58.397 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:51:58.398 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:51:58.399 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:51:58.401 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:51:58.402 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:51:58.404 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:51:58.406 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:51:58.501 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:51:58.501 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:51:58.506 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 17:51:58.507 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:51:58.508 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:51:58.511 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:51:58.513 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:51:58.513 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:58:12","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-26 15:55:41","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:51:58.527 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:52:35.504 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:52:35.504 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:52:35.504 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:52:35.504 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:52:35.505 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:52:35.506 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:52:35.506 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:52:35.506 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:52:35.508 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:52:35.604 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:52:35.605 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:52:35.610 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:52:35.611 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:52:35.611 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:52:35.622 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:52:35.622 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:52:35.623 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:52:35.644 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:52:56.719 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:52:56.720 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:52:56.721 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:52:56.721 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:52:56.722 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:52:56.723 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:52:56.724 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:52:56.724 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:52:56.728 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:54:00.202 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:54:00.202 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:54:00.203 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:54:00.204 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:54:00.204 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:54:00.205 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:54:00.206 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:54:00.206 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:54:00.208 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:54:17.139 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:54:17.140 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:54:17.141 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:54:17.141 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:54:17.142 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:54:17.143 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:54:17.143 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:54:17.144 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:54:17.146 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:54:30.724 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:54:30.724 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:54:30.725 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:54:30.726 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:54:30.726 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:54:30.727 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:54:30.728 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:54:30.729 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:54:30.731 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:54:35.546 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:54:35.546 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:54:35.550 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:54:35.556 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:54:35.556 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:54:35.557 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:54:35.558 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:54:35.558 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:54:35.560 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:54:35.937 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:54:35.938 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:54:35.939 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:54:35.940 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:54:35.940 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:54:35.942 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:54:35.943 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:54:35.944 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:54:35.956 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:34.333 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:55:34.333 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:55:34.335 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:55:34.337 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:34.337 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:34.337 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:34.338 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:34.340 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:34.341 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:34.428 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:55:34.429 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:34.437 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:34.438 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:34.438 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:34.467 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:34.468 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:34.469 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 41(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:34.485 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:36.358 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by sex asc limit ?, ? 
2020-03-28 17:55:36.358 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:36.359 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:36.360 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:36.360 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:36.361 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:36.362 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:36.362 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=sex, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortColumn":"sex","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:36.365 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:37.434 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by sex desc limit ?, ? 
2020-03-28 17:55:37.434 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:37.435 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:37.436 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:37.436 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:37.437 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:37.438 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:37.438 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=sex, sortMethod=desc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortColumn":"sex","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:37.440 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:38.539 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 17:55:38.540 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:38.541 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:38.541 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:38.541 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:38.542 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:38.543 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:38.543 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:38.546 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:39.453 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 17:55:39.453 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:39.454 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:39.455 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:39.455 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:39.456 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:39.456 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:39.457 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:39.459 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:40.060 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 17:55:40.060 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:40.061 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:40.062 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:40.062 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:40.063 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:40.063 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:40.064 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:40.066 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:41.022 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 17:55:41.023 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:41.024 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:41.025 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:41.025 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:41.026 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:41.026 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:41.027 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null), User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:41.037 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:48.833 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by update_time asc limit ?, ? 
2020-03-28 17:55:48.834 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:48.835 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:48.836 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:48.836 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:48.837 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:48.837 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:48.838 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=update_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortColumn":"update_time","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:48.840 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:49.579 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by update_time desc limit ?, ? 
2020-03-28 17:55:49.579 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:49.580 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:49.581 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:49.581 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:49.583 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:49.584 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:49.584 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null), User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:49.587 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:50.320 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 17:55:50.320 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:50.321 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:50.322 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:50.322 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:50.323 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:50.323 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:50.324 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:50.326 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:50.839 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 17:55:50.839 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:50.840 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:50.841 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:50.841 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:50.842 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:50.842 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:50.843 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:50.845 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:52.135 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 17:55:52.136 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:52.137 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:52.138 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:52.138 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:52.139 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:52.140 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:52.140 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:52.143 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:53.140 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 17:55:53.140 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:53.141 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:53.142 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:53.142 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:53.142 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:53.143 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:53.143 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:53.146 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:55.246 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 17:55:55.246 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:55.247 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:55.248 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:55.248 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:55.250 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:55.251 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:55.251 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:55.254 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:56.570 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 17:55:56.571 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:56.572 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:56.572 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:56.572 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:56.573 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:56.573 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:56.574 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:56.576 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:55:59.570 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 17:55:59.570 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:55:59.572 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:55:59.572 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:55:59.573 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:55:59.574 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:55:59.575 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:55:59.575 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:55:59.577 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:56:00.922 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 17:56:00.922 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:56:00.923 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:56:00.924 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:56:00.924 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:56:00.925 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:56:00.925 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:56:00.926 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:52:28, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:56:00.928 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:56:32.091 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:56:32.092 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:56:32.093 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:56:32.093 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:56:32.093 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:56:32.094 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:56:32.095 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:56:32.095 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:56:32.097 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:57:55.811 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:57:55.811 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:57:55.812 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:57:55.812 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:57:55.813 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:57:55.813 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:57:55.814 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:57:55.814 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:57:55.817 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:58:37.842 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:58:37.842 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:58:37.843 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:58:37.844 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:58:37.845 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:58:37.845 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:58:37.846 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:58:37.848 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:58:37.849 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:58:37.934 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:58:37.935 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:58:37.938 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:58:37.939 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:58:37.939 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:58:37.950 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:58:37.951 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:58:37.951 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:28","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:58:37.981 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:58:55.071 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 17:58:55.071 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 17:58:55.071 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:58:55.072 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:58:55.072 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 17:58:55.073 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:58:55.074 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:58:55.074 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:58:55.082 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:58:55.170 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 17:58:55.171 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:58:55.186 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:58:55.187 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:58:55.188 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:58:55.194 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:58:55.195 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:58:55.196 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 27(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:58:55.217 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:59:22.358 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by sex asc limit ?, ? 
2020-03-28 17:59:22.358 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:59:22.359 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:59:22.359 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:59:22.360 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:59:22.360 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:59:22.361 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:59:22.361 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=sex, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortColumn":"sex","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:59:22.365 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 17:59:23.381 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by sex desc limit ?, ? 
2020-03-28 17:59:23.381 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 17:59:23.383 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 17:59:23.383 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 17:59:23.384 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 17:59:23.385 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 17:59:23.385 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 17:59:23.386 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null)], params={}, sortColumn=sex, sortMethod=desc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortColumn":"sex","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 17:59:23.388 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:00:23.848 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:00:23.849 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:00:23.851 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:00:23.853 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:00:23.853 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:00:23.855 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:00:23.856 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:00:23.857 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:21","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:00:23.860 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:00:29.160 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.deleteById.debug:143 -==>  Preparing: update bl_user set deleted = 1 where user_id = ? 
2020-03-28 18:00:29.160 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.deleteById.debug:143 -==> Parameters: 5(Integer)
2020-03-28 18:00:29.162 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.deleteById.debug:143 -<==    Updates: 1
2020-03-28 18:00:29.163 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:00:29.163 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/delete/5(String), [5](String), 1(Integer), null, DELETE(String), 3(Long), {"code":20000,"msg":"删除成功！"}(String), 127.0.0.1(String)
2020-03-28 18:00:29.168 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:00:29.179 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:00:29.179 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:00:29.180 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 18:00:29.181 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:00:29.181 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:00:29.182 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:00:29.182 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:00:29.183 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 09:52:21, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:00:29.186 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:00:46.619 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:00:46.619 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:00:46.620 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:00:46.621 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:00:46.622 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:00:46.631 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:00:46.631 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:00:46.640 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:00:46.640 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:00:46.736 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:00:46.737 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:00:46.745 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:00:46.746 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:00:46.747 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:00:46.768 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:00:46.770 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:00:46.770 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 35(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:00:46.779 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:01:49.530 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:01:49.530 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:01:49.531 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:01:49.532 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:01:49.532 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:01:49.533 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:01:49.534 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:01:49.535 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:01:49.539 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:02:18.854 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:02:18.854 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:02:18.855 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:02:18.856 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:02:18.856 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:02:18.857 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:02:18.858 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:02:18.859 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:02:18.862 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:02:25.340 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:02:25.341 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:02:25.342 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:02:25.342 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:02:25.342 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:02:25.343 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:02:25.344 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:02:25.344 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:02:25.346 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:03:07.265 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:03:07.265 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:03:07.266 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:03:07.268 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:03:07.268 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:03:07.269 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:03:07.269 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:03:07.275 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:03:07.276 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:03:07.388 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:03:07.388 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:03:07.391 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:03:07.392 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:03:07.392 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:03:07.417 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:03:07.419 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:03:07.420 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 32(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:03:07.446 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:03:58.268 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:03:58.269 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:03:58.271 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:03:58.271 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:03:58.272 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:03:58.273 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:03:58.273 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:03:58.274 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:03:58.276 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:04:24.070 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:04:24.070 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:04:24.071 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:04:24.072 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:04:24.072 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:04:24.073 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:04:24.074 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:04:24.074 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:04:24.076 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:04:56.497 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:04:56.497 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:04:56.498 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:04:56.499 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:04:56.499 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:04:56.501 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:04:56.502 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:04:56.502 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:04:56.505 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:05:47.429 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:05:47.430 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:05:47.431 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:05:47.431 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:05:47.431 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:05:47.434 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:05:47.435 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:05:47.435 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:05:47.438 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:05:51.380 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 and sex = ? limit ?, ? 
2020-03-28 18:05:51.380 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 1(Integer), 0(Integer), 5(Integer)
2020-03-28 18:05:51.382 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 2
2020-03-28 18:05:51.382 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 and sex = ? 
2020-03-28 18:05:51.383 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 1(Integer)
2020-03-28 18:05:51.385 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:05:51.386 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:05:51.386 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null)], params={sex=1}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{"sex":1},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:05:51.389 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:05:54.858 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 and sex = ? limit ?, ? 
2020-03-28 18:05:54.858 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 2(Integer), 0(Integer), 5(Integer)
2020-03-28 18:05:54.859 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 1
2020-03-28 18:05:54.860 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 and sex = ? 
2020-03-28 18:05:54.860 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 2(Integer)
2020-03-28 18:05:54.861 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:05:54.862 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:05:54.862 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=2, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null)], params={sex=2}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{"sex":2},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:05:54.869 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:06:05.497 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:06:05.497 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:06:05.498 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:06:05.498 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:06:05.499 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:06:05.501 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:06:05.502 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:06:05.502 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:06:05.507 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:06:22.443 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 18:06:22.443 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 18:06:22.444 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 18:06:22.444 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:06:22.445 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:06:22.446 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:06:22.890 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:06:22.891 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:06:22.892 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:06:22.892 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:06:22.893 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:06:22.893 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:06:22.894 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:06:22.895 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:06:22.896 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:06:24.103 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 18:06:24.103 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 18:06:24.104 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 18:06:24.105 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:06:24.105 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:06:24.107 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:06:24.191 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:06:24.192 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:06:24.193 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:06:24.193 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:06:24.193 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:06:24.194 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:06:24.195 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:06:24.195 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:06:24.197 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:06:45.095 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:06:45.095 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:06:45.097 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:06:45.097 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:06:45.098 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:06:45.099 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:06:45.100 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:06:45.101 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:06:45.106 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:07:00.092 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:07:00.092 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:07:00.093 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:07:00.093 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:07:00.094 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:07:00.094 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:07:00.095 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:07:00.095 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:07:00.100 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:07:59.691 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:07:59.691 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:07:59.693 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:07:59.693 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:07:59.693 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:07:59.694 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:07:59.695 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:07:59.695 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:07:59.697 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:08:29.200 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:08:29.200 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:08:29.202 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:08:29.202 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:08:29.203 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:08:29.204 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:08:29.205 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:08:29.206 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:08:29.209 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:09:17.289 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:09:17.289 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:09:17.291 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:09:17.291 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:09:17.291 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:09:17.292 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:09:17.293 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:09:17.293 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:09:17.296 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:09:32.282 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:09:32.283 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:09:32.285 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:09:32.286 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:09:32.286 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:09:32.287 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:09:32.288 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:09:32.288 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:09:32.291 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:10:04.688 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:10:04.688 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:10:04.690 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:10:04.690 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:10:04.690 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:10:04.691 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:10:04.692 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:10:04.692 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:10:04.695 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:10:25.137 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:10:25.137 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 3(Integer)
2020-03-28 18:10:25.138 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:10:25.139 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:10:25.139 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:10:25.141 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:10:31.132 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:10:31.132 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:10:31.135 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:10:31.136 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:10:31.137 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:10:31.138 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:10:31.139 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:10:31.139 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:10:31.140 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:10:31.556 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:10:31.556 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:10:31.558 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:10:31.559 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:10:31.559 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:10:31.560 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:10:31.561 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:10:31.561 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:10:31.564 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:10:58.905 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:10:58.905 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:10:58.905 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:10:58.905 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:10:58.906 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:10:58.907 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:10:58.908 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:10:58.914 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:10:58.915 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:10:59.046 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:10:59.046 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:10:59.051 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:10:59.052 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:10:59.052 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:10:59.074 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:10:59.076 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:10:59.077 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 30(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:10:59.114 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:11:15.491 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:11:15.491 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:11:15.491 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:11:15.492 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:11:15.492 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:11:15.493 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:11:15.494 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:11:15.494 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:11:15.496 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:11:15.632 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:11:15.632 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:11:15.636 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:11:15.637 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:11:15.637 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:11:15.643 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:11:15.644 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:11:15.644 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:11:15.680 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:11:19.877 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:11:19.878 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:11:19.879 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:11:19.879 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:11:19.880 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:11:19.881 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:11:19.881 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:11:19.882 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:11:19.885 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:11:27.723 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:11:27.724 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 3(Integer)
2020-03-28 18:11:27.724 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:11:27.725 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:11:27.725 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:11:27.727 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:12:04.666 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:12:04.667 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 4(Integer)
2020-03-28 18:12:04.668 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:12:04.669 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:12:04.670 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/4(String), [4](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"userEmail":"23452345","userId":4,"username":"ceshi1","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:12:04.672 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:12:34.266 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:12:34.266 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:12:34.268 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:12:34.268 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:12:34.269 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:12:34.270 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:12:34.271 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:12:34.271 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:12:34.273 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:13:09.452 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:13:09.453 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:13:09.454 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:13:09.455 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:13:09.455 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:13:09.456 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:13:09.456 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:13:09.457 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:13:09.459 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:22:28.658 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:22:28.659 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:22:28.660 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:22:28.660 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:22:28.660 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:22:28.661 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:22:28.662 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:22:28.664 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:22:28.665 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:22:28.797 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:22:28.798 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:22:28.802 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:22:28.803 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:22:28.803 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:22:28.807 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:22:28.808 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:22:28.809 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:22:28.858 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:23:21.611 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 18:23:21.611 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 18:23:21.612 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 18:23:21.613 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:23:21.613 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:23:21.616 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:24:58.618 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:24:58.619 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:24:58.621 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:24:58.621 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:24:58.621 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:24:58.623 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:24:58.624 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:24:58.624 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:24:58.627 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:25:18.627 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:25:18.627 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:25:18.629 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:25:18.629 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:25:18.630 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:25:18.630 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:25:18.631 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:25:18.634 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:25:18.637 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:25:18.776 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:25:18.777 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:25:18.789 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:25:18.789 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:25:18.789 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:25:18.798 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:25:18.799 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:25:18.800 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 24(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:25:18.838 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:27:37.723 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:27:37.724 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:27:37.725 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:27:37.725 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:27:37.725 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:27:37.726 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:27:37.726 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:27:37.728 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:27:37.731 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:27:37.882 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:27:37.882 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:27:37.887 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:27:37.887 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:27:37.887 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:27:37.894 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:27:37.895 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:27:37.896 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:27:37.899 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:29:51.579 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:29:51.580 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:29:51.581 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:29:51.581 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:29:51.582 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:29:51.583 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:29:51.585 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:29:51.586 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:29:51.590 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:29:51.735 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:29:51.736 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:29:51.739 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:29:51.739 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:29:51.740 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:29:51.742 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:29:51.743 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:29:51.743 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:29:51.752 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:30:35.351 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:30:35.351 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:30:35.353 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:30:35.353 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:30:35.359 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:30:35.360 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:30:35.360 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:30:35.360 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:30:35.370 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:30:35.511 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:30:35.511 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:30:35.519 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:30:35.520 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:30:35.521 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:30:35.525 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:30:35.526 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:30:35.526 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:30:35.528 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:32:46.211 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:32:46.211 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:32:46.229 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:32:46.229 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:32:46.230 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:32:46.231 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:32:46.232 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:32:46.252 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:32:46.257 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:32:46.403 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:32:46.404 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:32:46.406 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:32:46.407 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:32:46.407 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:32:46.410 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:32:46.411 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:32:46.411 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 9(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:32:46.420 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:33:14.176 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:33:14.176 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6c924367](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","msg":"上传成功"}(String), 127.0.0.1(String)
2020-03-28 18:33:14.178 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:33:15.816 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.save.debug:143 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:33:15.816 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.save.debug:143 -==> Parameters: test(String), 098f6bcd4621d373cade4e832627b4f6(String), name(String), 1(Integer), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg(String), nickname(String), email(String)
2020-03-28 18:33:15.820 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:33:15.820 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:33:15.821 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/save(String), [User(userId=null, username=test, password=098f6bcd4621d373cade4e832627b4f6, name=name, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname, userEmail=email, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"msg":"添加成功！"}(String), 127.0.0.1(String)
2020-03-28 18:33:15.823 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:33:16.149 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:33:16.150 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:33:16.151 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:33:16.152 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:33:16.152 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:33:16.154 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:33:16.154 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:33:16.155 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=3, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname","sex":1,"updateTime":"2020-03-28 10:33:15","userEmail":"email","userId":6,"username":"test"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:33:16.157 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:37:29.583 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:37:29.594 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:37:29.595 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:37:29.596 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:37:29.597 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:37:29.597 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:37:29.597 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:37:29.598 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:37:29.603 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:37:29.727 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:37:29.728 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:37:29.732 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:37:29.733 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:37:29.734 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:37:29.738 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:37:29.739 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:37:29.739 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname","sex":1,"updateTime":"2020-03-28 10:33:15","userEmail":"email","userId":6,"username":"test"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:37:29.763 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:37:42.126 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:37:42.126 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:37:42.141 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:37:42.141 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:37:42.145 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:37:42.146 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:37:42.146 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:37:42.149 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:37:42.153 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:37:48.696 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:37:48.696 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:37:48.697 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:37:48.697 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:37:48.698 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:37:48.700 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:37:48.701 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:37:48.703 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:37:48.705 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:38:06.355 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:38:06.355 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:38:06.356 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:38:06.356 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:38:06.357 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:38:06.357 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:38:06.358 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:38:06.358 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname","sex":1,"updateTime":"2020-03-28 10:33:15","userEmail":"email","userId":6,"username":"test"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:38:06.360 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:38:07.956 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:38:07.956 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 3(Integer)
2020-03-28 18:38:07.957 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:38:07.958 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:38:07.958 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:38:07.961 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:38:15.999 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:38:16.000 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 6(Integer)
2020-03-28 18:38:16.001 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:38:16.002 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:38:16.002 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/6(String), [6](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname","sex":1,"userEmail":"email","userId":6,"username":"test","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:38:16.006 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:38:19.420 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:38:19.421 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 3(Integer)
2020-03-28 18:38:19.421 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:38:19.422 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:38:19.422 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:38:19.424 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:40:06.727 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:40:06.728 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:40:06.729 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:40:06.730 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:40:06.731 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:40:06.732 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:40:06.732 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:40:06.745 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:40:06.749 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:40:06.894 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:40:06.895 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:40:06.902 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:40:06.902 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:40:06.903 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:40:06.907 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:40:06.908 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:40:06.909 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname","sex":1,"updateTime":"2020-03-28 10:33:15","userEmail":"email","userId":6,"username":"test"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:40:06.921 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:40:10.474 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:40:10.474 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 6(Integer)
2020-03-28 18:40:10.476 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:40:10.477 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:40:10.477 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/6(String), [6](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname","sex":1,"userEmail":"email","userId":6,"username":"test","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:40:10.479 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:40:14.328 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:40:14.328 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 3(Integer)
2020-03-28 18:40:14.329 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:40:14.330 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:40:14.330 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:40:14.332 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:40:17.123 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:40:17.123 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 4(Integer)
2020-03-28 18:40:17.124 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:40:17.125 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:40:17.125 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/4(String), [4](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"userEmail":"23452345","userId":4,"username":"ceshi1","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:40:17.127 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:40:22.480 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:40:22.480 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 6(Integer)
2020-03-28 18:40:22.481 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:40:22.482 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:40:22.482 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/6(String), [6](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname","sex":1,"userEmail":"email","userId":6,"username":"test","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:40:22.485 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:40:50.481 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:40:50.481 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 6(Integer)
2020-03-28 18:40:50.482 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:40:50.482 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:40:50.483 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/6(String), [6](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname","sex":1,"userEmail":"email","userId":6,"username":"test","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:40:50.486 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:41:00.104 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.update.debug:143 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? ,user_email = ? where user_id = ? and version = ? 
2020-03-28 18:41:00.105 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.update.debug:143 -==> Parameters: testupdate(String), name(String), 1(Integer), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg(String), nickname(String), email(String), 6(Integer), 1(Integer)
2020-03-28 18:41:00.108 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.update.debug:143 -<==    Updates: 1
2020-03-28 18:41:00.108 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:41:00.109 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/update(String), [User(userId=6, username=testupdate, password=null, name=name, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname, userEmail=email, createdTime=null, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 6(Long), {"code":20000,"msg":"修改成功！"}(String), 127.0.0.1(String)
2020-03-28 18:41:00.111 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:41:00.437 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:41:00.437 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:41:00.439 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:41:00.439 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:41:00.439 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:41:00.440 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:41:00.440 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:41:00.441 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=4, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null), User(userId=6, username=test, password=null, name=name, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname, userEmail=email, createdTime=2020-03-28 10:33:15, updateTime=2020-03-28 10:33:15, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname","sex":1,"updateTime":"2020-03-28 10:40:59","userEmail":"email","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:41:00.443 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:41:56.377 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:41:56.377 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 6(Integer)
2020-03-28 18:41:56.378 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:41:56.378 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:41:56.379 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/6(String), [6](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname","sex":1,"userEmail":"email","userId":6,"username":"testupdate","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:41:56.381 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:42:00.197 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.update.debug:143 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? ,user_email = ? where user_id = ? and version = ? 
2020-03-28 18:42:00.197 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.update.debug:143 -==> Parameters: testupdate(String), name(String), 1(Integer), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg(String), nickname234234(String), email(String), 6(Integer), 2(Integer)
2020-03-28 18:42:00.199 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.update.debug:143 -<==    Updates: 1
2020-03-28 18:42:00.200 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:42:00.201 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/update(String), [User(userId=6, username=testupdate, password=null, name=name, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname234234, userEmail=email, createdTime=null, updateTime=null, version=2, deleted=null)](String), 1(Integer), null, PUT(String), 3(Long), {"code":20000,"msg":"修改成功！"}(String), 127.0.0.1(String)
2020-03-28 18:42:00.204 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:42:00.528 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:42:00.528 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:42:00.529 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:42:00.530 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:42:00.530 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:42:00.531 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:42:00.531 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:42:00.531 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=4, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null), User(userId=6, username=testupdate, password=null, name=name, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname, userEmail=email, createdTime=2020-03-28 10:33:15, updateTime=2020-03-28 10:40:59, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:42:00","userEmail":"email","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:42:00.535 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:43:30.747 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:43:30.747 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:43:30.748 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:43:30.749 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:43:30.748 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:43:30.749 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:43:30.749 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 7(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:43:30.753 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:43:30.753 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:43:30.919 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:43:30.920 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:43:30.924 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:43:30.925 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:43:30.926 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:43:30.943 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:43:30.944 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:43:30.945 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 27(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:42:00","userEmail":"email","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:43:30.992 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:43:36.340 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:43:36.341 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 6(Integer)
2020-03-28 18:43:36.342 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:43:36.342 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:43:36.342 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/6(String), [6](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname234234","sex":1,"userEmail":"email","userId":6,"username":"testupdate","version":3},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:43:36.344 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:43:40.453 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.update.debug:143 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? ,user_email = ? where user_id = ? and version = ? 
2020-03-28 18:43:40.453 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.update.debug:143 -==> Parameters: testupdate(String), name(String), 1(Integer), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg(String), nickname234234(String), email34556587567(String), 6(Integer), 3(Integer)
2020-03-28 18:43:40.455 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.update.debug:143 -<==    Updates: 1
2020-03-28 18:43:40.455 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:43:40.455 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/update(String), [User(userId=6, username=testupdate, password=null, name=name, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname234234, userEmail=email34556587567, createdTime=null, updateTime=null, version=3, deleted=null)](String), 1(Integer), null, PUT(String), 4(Long), {"code":20000,"msg":"修改成功！"}(String), 127.0.0.1(String)
2020-03-28 18:43:40.458 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:43:40.705 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:43:40.706 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:43:40.707 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:43:40.707 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:43:40.707 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:43:40.708 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:43:40.709 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:43:40.709 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=4, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null), User(userId=6, username=testupdate, password=null, name=name, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname234234, userEmail=email, createdTime=2020-03-28 10:33:15, updateTime=2020-03-28 10:42:00, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:43:40","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:43:40.711 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:44:40.742 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 18:44:40.742 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 18:44:40.743 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:44:40.743 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:44:40.746 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 18:44:40.747 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:44:40.748 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:44:40.766 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:44:40.777 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:44:40.921 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:44:40.922 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:44:40.935 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:44:40.937 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:44:40.938 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:44:40.965 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:44:40.967 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:44:40.968 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 47(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:43:40","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:44:40.986 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:44:46.260 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-03-28 18:44:46.260 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getById.debug:143 -==> Parameters: 6(Integer)
2020-03-28 18:44:46.261 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getById.debug:143 -<==      Total: 1
2020-03-28 18:44:46.261 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:44:46.262 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/get/6(String), [6](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name","nickname":"nickname234234","sex":1,"userEmail":"email34556587567","userId":6,"username":"testupdate","version":4},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:44:46.263 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:44:49.915 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.update.debug:143 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? ,user_email = ? where user_id = ? and version = ? 
2020-03-28 18:44:49.916 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.update.debug:143 -==> Parameters: testupdate(String), name23423423(String), 1(Integer), http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg(String), nickname234234(String), email34556587567(String), 6(Integer), 4(Integer)
2020-03-28 18:44:49.919 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.update.debug:143 -<==    Updates: 1
2020-03-28 18:44:49.920 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:44:49.920 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/update(String), [User(userId=6, username=testupdate, password=null, name=name23423423, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname234234, userEmail=email34556587567, createdTime=null, updateTime=null, version=4, deleted=null)](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"修改成功！"}(String), 127.0.0.1(String)
2020-03-28 18:44:49.922 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:44:50.168 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:44:50.169 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:44:50.171 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:44:50.171 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:44:50.171 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:44:50.172 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:44:50.173 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:44:50.173 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=4, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null), User(userId=6, username=testupdate, password=null, name=name, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname234234, userEmail=email34556587567, createdTime=2020-03-28 10:33:15, updateTime=2020-03-28 10:43:40, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:44:50.175 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:02.006 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 18:46:02.006 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:46:02.007 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:46:02.008 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:46:02.008 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:46:02.009 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:46:02.009 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:02.009 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=4, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null), User(userId=6, username=testupdate, password=null, name=name23423423, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname234234, userEmail=email34556587567, createdTime=2020-03-28 10:33:15, updateTime=2020-03-28 10:44:49, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:02.012 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:02.715 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 18:46:02.716 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:46:02.718 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:46:02.718 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:46:02.718 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:46:02.719 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:46:02.720 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:02.720 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=4, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null), User(userId=6, username=testupdate, password=null, name=name23423423, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname234234, userEmail=email34556587567, createdTime=2020-03-28 10:33:15, updateTime=2020-03-28 10:44:49, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:02.723 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:06.947 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time asc limit ?, ? 
2020-03-28 18:46:06.947 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:46:06.948 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:46:06.948 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:46:06.949 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:46:06.949 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:46:06.950 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:06.950 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=4, list=[User(userId=6, username=testupdate, password=null, name=name23423423, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname234234, userEmail=email34556587567, createdTime=2020-03-28 10:33:15, updateTime=2020-03-28 10:44:49, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:06.953 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:08.026 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 18:46:08.026 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:46:08.027 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 4
2020-03-28 18:46:08.027 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:46:08.028 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:46:08.028 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:46:08.029 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:08.029 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=4, list=[User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null), User(userId=6, username=testupdate, password=null, name=name23423423, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname234234, userEmail=email34556587567, createdTime=2020-03-28 10:33:15, updateTime=2020-03-28 10:44:49, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:08","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 09:52:26","userEmail":"23452345","userId":3,"username":"ceshisdfsdfsdf"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:08.032 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:22.273 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.deleteById.debug:143 -==>  Preparing: update bl_user set deleted = 1 where user_id = ? 
2020-03-28 18:46:22.274 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.deleteById.debug:143 -==> Parameters: 3(Integer)
2020-03-28 18:46:22.276 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.deleteById.debug:143 -<==    Updates: 1
2020-03-28 18:46:22.276 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:22.276 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/delete/3(String), [3](String), 1(Integer), null, DELETE(String), 4(Long), {"code":20000,"msg":"删除成功！"}(String), 127.0.0.1(String)
2020-03-28 18:46:22.278 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:22.524 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 order by created_time desc limit ?, ? 
2020-03-28 18:46:22.524 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:46:22.525 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:46:22.525 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:46:22.525 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:46:22.526 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:46:22.527 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:22.527 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=1, totalCount=4, list=[User(userId=6, username=testupdate, password=null, name=name23423423, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg, nickname=nickname234234, userEmail=email34556587567, createdTime=2020-03-28 10:33:15, updateTime=2020-03-28 10:44:49, version=null, deleted=null), User(userId=5, username=ceshi2, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:55, updateTime=2020-03-28 10:00:43, version=null, deleted=null), User(userId=4, username=ceshi1, password=null, name=测试, sex=2, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:41, updateTime=2020-03-28 09:58:50, version=null, deleted=null), User(userId=3, username=ceshisdfsdfsdf, password=null, name=测试, sex=1, header=http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png, nickname=ybs, userEmail=23452345, createdTime=2020-03-26 15:55:08, updateTime=2020-03-28 09:52:26, version=null, deleted=null)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"}],"pageSize":5,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:22.530 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:29.514 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 18:46:29.514 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 18:46:29.515 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 18:46:29.516 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:29.516 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:29.519 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:30.536 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 18:46:30.537 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 18:46:30.538 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 18:46:30.539 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:30.539 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:30.541 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:31.477 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:46:31.477 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:46:31.478 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:46:31.478 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:46:31.479 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:46:31.479 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:46:31.480 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:31.480 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:31.482 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:32.388 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 18:46:32.388 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 18:46:32.389 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 18:46:32.390 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:32.390 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:32.393 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:33.213 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:46:33.214 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:46:33.215 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:46:33.215 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:46:33.215 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:46:33.217 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:46:33.218 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:33.218 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:33.220 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:34.804 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 18:46:34.804 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 18:46:34.805 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 18:46:34.806 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:34.806 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:34.808 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:35.056 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:46:35.056 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:46:35.057 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:46:35.058 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:46:35.058 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:46:35.059 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:46:35.059 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:35.060 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:35.062 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:36.168 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-03-28 18:46:36.169 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -==> Parameters: 
2020-03-28 18:46:36.170 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.AdminMapper.getAdmin.debug:143 -<==      Total: 1
2020-03-28 18:46:36.171 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:36.171 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"comment":"","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","id":1,"name":"元宝森","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:36.173 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 18:46:37.361 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 18:46:37.361 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 18:46:37.362 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 18:46:37.362 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 18:46:37.363 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 18:46:37.363 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 18:46:37.364 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 18:46:37.364 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 18:46:37.367 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 19:30:44.550 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 19:30:44.551 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 19:30:44.553 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 19:30:44.555 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 19:30:44.555 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 26(Long), {"code":20000,"data":{"token":"861756BD197120975C32D802F4BEEDDA"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 19:30:44.557 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 19:30:44.572 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 19:30:44.572 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 19:30:44.574 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 19:30:44.690 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 19:30:44.690 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 19:30:44.693 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 19:30:44.694 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 19:30:44.694 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 19:30:44.700 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 19:30:44.701 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 19:30:44.702 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 19:30:44.764 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:33:17.513 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-03-28 21:33:17.513 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -==> Parameters: root(String)
2020-03-28 21:33:17.516 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.AdminMapper.getByUsername.debug:143 -<==      Total: 1
2020-03-28 21:33:17.517 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:33:17.517 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=root, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 20(Long), {"code":20000,"data":{"token":"9134D50FE8199E4DA68B511380634D14"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:33:17.521 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:33:17.836 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:33:17.837 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:33:17.839 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:33:18.087 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:33:18.088 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:33:18.089 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:33:18.089 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:33:18.089 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:33:18.090 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:33:18.091 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:33:18.091 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:33:18.093 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:33:21.725 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:33:21.725 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:33:21.730 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:33:21.730 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 21:33:21.730 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 21:33:21.735 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 21:33:21.736 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:33:21.737 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:33:21.739 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:33:22.150 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:33:22.150 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:33:22.152 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:33:22.152 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:33:22.153 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:33:22.154 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:33:22.155 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:33:22.155 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 7(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:33:22.167 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:34:38.668 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:34:38.669 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:34:38.670 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:34:38.670 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:34:38.670 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:34:38.671 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:34:38.672 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:34:38.672 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:34:38.674 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:35:18.558 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:35:18.559 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:35:18.560 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:35:18.560 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:35:18.560 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:35:18.561 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:35:18.562 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:35:18.562 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:35:18.564 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:35:56.154 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:35:56.155 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:35:56.168 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:35:56.169 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:35:56.169 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:35:56.170 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:35:56.171 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:35:56.172 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:35:56.176 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:38:16.506 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:38:16.506 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:38:16.507 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:38:16.508 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:38:16.508 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:38:16.509 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:38:16.509 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:38:16.510 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:38:16.512 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:38:52.279 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:38:52.279 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:38:52.280 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:38:52.281 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:38:52.281 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:38:52.282 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:38:52.283 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:38:52.283 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:38:52.286 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:39:12.553 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:39:12.553 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:39:12.554 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:39:12.554 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:39:12.554 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:39:12.555 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:39:12.555 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:39:12.556 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:39:12.557 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:39:20.183 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:39:20.183 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:39:20.185 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:39:20.185 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:39:20.185 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:39:20.186 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:39:20.187 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:39:20.188 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:39:20.190 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:39:39.867 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:39:39.867 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:39:39.868 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:39:39.868 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:39:39.869 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:39:39.870 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:39:39.870 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:39:39.870 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:39:39.873 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:39:56.642 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:39:56.642 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:39:56.643 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:39:56.644 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:39:56.644 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:39:56.645 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:39:56.645 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:39:56.646 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:39:56.648 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:40:14.678 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:40:14.678 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:40:14.679 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:40:14.680 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:40:14.680 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:40:14.680 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:40:14.682 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:40:14.682 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:40:14.684 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:40:51.031 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:40:51.031 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:40:51.032 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:40:51.033 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:40:51.033 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:40:51.034 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:40:51.035 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:40:51.035 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:40:51.038 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:41:11.038 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:41:11.038 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:41:11.039 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:41:11.039 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:41:11.040 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:41:11.040 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:41:11.041 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:41:11.041 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:41:11.042 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:41:23.547 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:41:23.547 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:41:23.550 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:41:23.550 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:41:23.551 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:41:23.552 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:41:23.553 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:41:23.553 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 10:44:49","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:41:23.555 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:43:14.189 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:43:14.189 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:43:14.190 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:43:14.190 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:43:14.190 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:43:14.191 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:43:14.192 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:43:14.192 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 8(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:43:14.195 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:43:44.187 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:43:44.187 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:43:44.188 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:43:44.189 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:43:44.189 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:43:44.190 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:43:44.190 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:43:44.190 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:43:44.193 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:44:06.953 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 21:44:06.953 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 21:44:06.955 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 21:44:06.956 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:44:06.956 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:44:06.957 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:44:06.958 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:44:06.990 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:44:06.993 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:44:07.224 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:44:07.225 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:44:07.230 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:44:07.231 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:44:07.231 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:44:07.237 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:44:07.239 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:44:07.239 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:44:07.243 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:44:28.710 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:44:28.710 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:44:28.711 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:44:28.712 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:44:28.712 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:44:28.713 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:44:28.713 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:44:28.714 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:44:28.716 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:44:42.847 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:44:42.848 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:44:42.850 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:44:42.851 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:44:42.851 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:44:42.852 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:44:42.853 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:44:42.853 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:44:42.855 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:44:53.456 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:44:53.456 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:44:53.458 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:44:53.458 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:44:53.459 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:44:53.460 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:44:53.461 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:44:53.461 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:44:53.463 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:45:07.127 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:45:07.138 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:45:07.157 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:45:07.157 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:45:07.158 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:45:07.178 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:45:07.179 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:45:07.179 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 53(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:45:07.225 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:45:20.765 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:45:20.765 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:45:20.767 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:45:20.768 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:45:20.768 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:45:20.769 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:45:20.770 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:45:20.770 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:45:20.774 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:45:38.731 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:45:38.732 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:45:38.733 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:45:38.734 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:45:38.734 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:45:38.735 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:45:38.735 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:45:38.736 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:45:38.738 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:45:59.641 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:45:59.641 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:45:59.643 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:45:59.643 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:45:59.643 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:45:59.644 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:45:59.644 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:45:59.645 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:45:59.648 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:46:13.428 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:46:13.428 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:46:13.429 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:46:13.430 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:46:13.430 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:46:13.431 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:46:13.433 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:46:13.433 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:46:13.435 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:46:30.915 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:46:30.915 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:46:30.917 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:46:30.917 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:46:30.917 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:46:30.918 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:46:30.919 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:46:30.919 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 6(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:46:30.922 DEBUG [http-nio-8080-exec-1]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:46:33.460 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:46:33.461 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:46:33.462 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:46:33.462 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:46:33.462 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:46:33.463 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:46:33.464 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:46:33.465 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:46:33.467 DEBUG [http-nio-8080-exec-5]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:46:50.473 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:46:50.474 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:46:50.475 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:46:50.475 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:46:50.475 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:46:50.476 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:46:50.477 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:46:50.477 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:46:50.479 DEBUG [http-nio-8080-exec-7]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:47:05.358 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:47:05.358 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:47:05.359 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:47:05.360 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:47:05.360 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:47:05.361 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:47:05.361 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:47:05.362 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 09:58:50","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 10:00:43","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:42:22","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:47:05.363 DEBUG [http-nio-8080-exec-9]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:47:09.781 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByIds.debug:143 -==>  Preparing: select user_id, version from bl_user where user_id in ( ? ) and deleted = 0 
2020-03-28 21:47:09.782 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByIds.debug:143 -==> Parameters: 6(Integer)
2020-03-28 21:47:09.783 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.getByIds.debug:143 -<==      Total: 1
2020-03-28 21:47:09.785 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.update.debug:143 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-03-28 21:47:09.786 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.update.debug:143 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 6(Integer), 5(Integer)
2020-03-28 21:47:09.788 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.UserMapper.update.debug:143 -<==    Updates: 1
2020-03-28 21:47:09.789 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:47:09.789 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/resetPwd(String), [[6]](String), 1(Integer), null, PUT(String), 13(Long), {"code":20000,"msg":"重置完毕！"}(String), 127.0.0.1(String)
2020-03-28 21:47:09.792 DEBUG [http-nio-8080-exec-10]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:47:20.518 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByIds.debug:143 -==>  Preparing: select user_id, version from bl_user where user_id in ( ? ) and deleted = 0 
2020-03-28 21:47:20.518 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByIds.debug:143 -==> Parameters: 5(Integer)
2020-03-28 21:47:20.519 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.getByIds.debug:143 -<==      Total: 1
2020-03-28 21:47:20.520 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.update.debug:143 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-03-28 21:47:20.520 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.update.debug:143 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 5(Integer), 1(Integer)
2020-03-28 21:47:20.522 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.UserMapper.update.debug:143 -<==    Updates: 1
2020-03-28 21:47:20.522 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:47:20.523 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/resetPwd(String), [[5]](String), 1(Integer), null, PUT(String), 5(Long), {"code":20000,"msg":"重置完毕！"}(String), 127.0.0.1(String)
2020-03-28 21:47:20.524 DEBUG [http-nio-8080-exec-8]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:47:23.119 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByIds.debug:143 -==>  Preparing: select user_id, version from bl_user where user_id in ( ? , ? ) and deleted = 0 
2020-03-28 21:47:23.120 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByIds.debug:143 -==> Parameters: 5(Integer), 4(Integer)
2020-03-28 21:47:23.122 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.getByIds.debug:143 -<==      Total: 2
2020-03-28 21:47:23.122 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.update.debug:143 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-03-28 21:47:23.122 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.update.debug:143 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 4(Integer), 1(Integer)
2020-03-28 21:47:23.125 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.update.debug:143 -<==    Updates: 1
2020-03-28 21:47:23.125 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.update.debug:143 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-03-28 21:47:23.126 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.update.debug:143 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 5(Integer), 2(Integer)
2020-03-28 21:47:23.128 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.UserMapper.update.debug:143 -<==    Updates: 1
2020-03-28 21:47:23.128 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:47:23.129 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/resetPwd(String), [[5, 4]](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
### The error may involve com.ybs.blog.mapper.AdminMapper.update-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
	at com.ybs.blog.service.impl.AdminServiceImpl.updateInfo(AdminServiceImpl.java:42)
	at com.ybs.blog.controller.AdminController.updateInfo(AdminController.java:83)
	at com.ybs.blog.controller.AdminController$$FastClassBySpringCGLIB$$ba1d6654.invoke(<generated>)
	at com.ybs.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.ybs.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d568e45d.updateInfo(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'signature' at row 1
(String), PUT(String), 10(Long), {"code":20000,"msg":"重置完毕！"}(String), 127.0.0.1(String)
2020-03-28 21:47:23.130 DEBUG [http-nio-8080-exec-6]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:47:34.361 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:47:34.361 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"元宝森","password":"","signature":"钱没了可以挣回来，今天过了就再也没有了。","username":"root"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:47:34.366 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-03-28 21:47:34.366 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -==> Parameters: 
2020-03-28 21:47:34.373 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.TypeMapper.getTypeList.debug:143 -<==      Total: 8
2020-03-28 21:47:34.374 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:47:34.375 DEBUG [http-nio-8080-exec-3]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:47:34.375 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"JAVA"},{"typeBlogCount":2,"typeId":7,"typeName":"Python"},{"typeBlogCount":1,"typeId":9,"typeName":"数据库"},{"typeBlogCount":0,"typeId":10,"typeName":"VUE"},{"typeBlogCount":1,"typeId":11,"typeName":"SringBoot"},{"typeBlogCount":0,"typeId":15,"typeName":"PHP最好的语言"},{"typeBlogCount":6,"typeId":17,"typeName":"测试"},{"typeBlogCount":1,"typeId":18,"typeName":"前端"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:47:34.386 DEBUG [http-nio-8080-exec-4]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
2020-03-28 21:47:34.551 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-03-28 21:47:34.551 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -==> Parameters: 0(Integer), 5(Integer)
2020-03-28 21:47:34.574 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getByPage.debug:143 -<==      Total: 3
2020-03-28 21:47:34.575 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-03-28 21:47:34.575 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -==> Parameters: 
2020-03-28 21:47:34.588 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.UserMapper.getCountByPage.debug:143 -<==      Total: 1
2020-03-28 21:47:34.589 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-03-28 21:47:34.589 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=5, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 42(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-26 15:55:41","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":2,"updateTime":"2020-03-28 13:47:22","userEmail":"23452345","userId":4,"username":"ceshi1"},{"createdTime":"2020-03-26 15:55:55","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_De-AQ5A3AFtsvbS_5Vo172.png","name":"测试","nickname":"ybs","sex":1,"updateTime":"2020-03-28 13:47:22","userEmail":"23452345","userId":5,"username":"ceshi2"},{"createdTime":"2020-03-28 10:33:15","header":"http://192.168.2.137:8099/group1/M00/00/00/wKgCiV5_J-qAKnQvAAB1dQXDf2s251.jpg","name":"name23423423","nickname":"nickname234234","sex":1,"updateTime":"2020-03-28 13:47:09","userEmail":"email34556587567","userId":6,"username":"testupdate"}],"pageSize":5,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-03-28 21:47:34.651 DEBUG [http-nio-8080-exec-2]com.ybs.blog.mapper.LogMapper.save.debug:143 -<==    Updates: 1
